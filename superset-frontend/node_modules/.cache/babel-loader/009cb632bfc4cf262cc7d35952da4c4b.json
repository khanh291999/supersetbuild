{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getNumberFormatter, t } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  rowcount: PropTypes.number,\n  limit: PropTypes.number,\n  rows: PropTypes.string,\n  suffix: PropTypes.string,\n  loading: PropTypes.bool };\n\n\nconst defaultProps = {\n  suffix: t('rows') };\n\n\nexport default function RowCountLabel({ rowcount, limit, suffix, loading }) {\n  const limitReached = rowcount === limit;\n  const type =\n  limitReached || rowcount === 0 && !loading ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const tooltip =\n  ___EmotionJSX(\"span\", null,\n  limitReached && ___EmotionJSX(\"div\", null, t('Limit reached')),\n  loading ? 'Loading' : rowcount);\n\n\n  return (\n    ___EmotionJSX(Tooltip, { id: \"tt-rowcount-tooltip\", title: tooltip },\n    ___EmotionJSX(Label, { type: type },\n    loading ? 'Loading...' : `${formattedRowCount} ${suffix}`)));\n\n\n\n}\n\nRowCountLabel.propTypes = propTypes;\nRowCountLabel.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}