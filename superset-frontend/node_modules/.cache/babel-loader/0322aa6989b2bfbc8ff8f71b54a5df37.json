{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { NO_TIME_RANGE } from 'src/explore/constants';\nimport { FilterPluginStyle } from '../common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TimeFilterStyles = styled(FilterPluginStyle)`\n  overflow-x: auto;\n`;\nconst ControlContainer = styled.div`\n  padding: 2px;\n  & > span,\n  & > span:hover {\n    border: 2px solid transparent;\n    display: inline-block;\n    border: ${({ theme, validateStatus }) => {var _theme$colors$validat;return validateStatus && `2px solid ${(_theme$colors$validat = theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat.base}`;}};\n  }\n  &:focus {\n    & > span {\n      border: 2px solid\n        ${({ theme, validateStatus }) => {var _theme$colors$validat2;return validateStatus ? (_theme$colors$validat2 =\n  theme.colors[validateStatus]) == null ? void 0 : _theme$colors$validat2.base :\n  theme.colors.primary.base;}};\n      outline: 0;\n      box-shadow: 0 0 0 2px\n        ${({ validateStatus }) => validateStatus ?\n'rgba(224, 67, 85, 12%)' :\n'rgba(32, 167, 201, 0.2)'};\n    }\n  }\n`;\nexport default function TimeFilterPlugin(props) {var _props$formData;\n  const { setDataMask, setFocusedFilter, unsetFocusedFilter, width, height, filterState, formData: { inputRef } } = props;\n  const handleTimeRangeChange = (timeRange) => {\n    const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n    setDataMask({\n      extraFormData: isSet ?\n      {\n        time_range: timeRange } :\n\n      {},\n      filterState: {\n        value: isSet ? timeRange : undefined } });\n\n\n  };\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n  return (_props$formData = props.formData) != null && _props$formData.inView ?\n  // @ts-ignore\n  ___EmotionJSX(TimeFilterStyles, { width: width, height: height },\n  ___EmotionJSX(ControlContainer, { tabIndex: -1, ref: inputRef, validateStatus: filterState.validateStatus, onFocus: setFocusedFilter, onBlur: unsetFocusedFilter, onMouseEnter: setFocusedFilter, onMouseLeave: unsetFocusedFilter },\n  ___EmotionJSX(DateFilterControl, { endpoints: ['inclusive', 'exclusive'], value: filterState.value || NO_TIME_RANGE, name: \"time_range\", onChange: handleTimeRangeChange, type: filterState.validateStatus }))) :\n\n  null;\n}","map":null,"metadata":{},"sourceType":"module"}