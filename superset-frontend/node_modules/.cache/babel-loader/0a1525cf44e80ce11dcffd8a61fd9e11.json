{"ast":null,"code":"var _bootstrapData$common, _bootstrapData$common2; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { sections } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst appContainer = document.getElementById('app');\nconst bootstrapData = JSON.parse(appContainer.getAttribute('data-bootstrap'));\nconst druidIsActive = !!(bootstrapData != null && (_bootstrapData$common = bootstrapData.common) != null && (_bootstrapData$common2 = _bootstrapData$common.conf) != null && _bootstrapData$common2.DRUID_IS_ACTIVE);\nconst druidSection = druidIsActive ?\n[\n[\n{\n  name: 'show_druid_time_granularity',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Druid granularity dropdown'),\n    default: false,\n    description: t('Check to include Druid granularity dropdown') } }],\n\n\n\n[\n{\n  name: 'show_druid_time_origin',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Druid time origin'),\n    default: false,\n    description: t('Check to include time origin dropdown') } }]] :\n\n\n\n\n[];\n\nexport default {\n  controlPanelSections: [\n  sections.legacyTimeseriesTime,\n  {\n    label: t('Filters configuration'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'filter_configs',\n      config: {\n        type: 'CollectionControl',\n        label: 'Filters',\n        description: t('Filter configuration for the filter box'),\n        validators: [],\n        controlName: 'FilterBoxItemControl',\n        mapStateToProps: ({ datasource }) => ({ datasource }) } }],\n\n\n\n    [___EmotionJSX(\"hr\", null)],\n    [\n    {\n      name: 'date_filter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Date filter'),\n        default: true,\n        description: t('Whether to include a time filter') } }],\n\n\n\n    [\n    {\n      name: 'instant_filtering',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Instant filtering'),\n        renderTrigger: true,\n        default: false,\n        description: t(\n        'Check to apply filters instantly as they change instead of displaying [Apply] button') } }],\n\n\n\n\n    [\n    {\n      name: 'show_sqla_time_granularity',\n      config: {\n        type: 'CheckboxControl',\n        label: druidIsActive ?\n        t('Show SQL time grain dropdown') :\n        t('Show time grain dropdown'),\n        default: false,\n        description: druidIsActive ?\n        t('Check to include SQL time grain dropdown') :\n        t('Check to include time grain dropdown') } }],\n\n\n\n    [\n    {\n      name: 'show_sqla_time_column',\n      config: {\n        type: 'CheckboxControl',\n        label: druidIsActive ?\n        t('Show SQL time column') :\n        t('Show time column'),\n        default: false,\n        description: t('Check to include time column dropdown') } }],\n\n\n\n    ...druidSection,\n    ['adhoc_filters']] }],\n\n\n\n  controlOverrides: {\n    adhoc_filters: {\n      label: t('Limit selector values'),\n      description: t(\n      'These filters apply to the values available in the dropdowns') } } };","map":null,"metadata":{},"sourceType":"module"}