{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport URLShortLinkButton from 'src/components/URLShortLinkButton';\nimport getDashboardUrl from 'src/dashboard/util/getDashboardUrl';\nimport getLocationHash from 'src/dashboard/util/getLocationHash';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  anchorLinkId: PropTypes.string.isRequired,\n  filters: PropTypes.object,\n  showShortLinkButton: PropTypes.bool,\n  inFocus: PropTypes.bool,\n  placement: PropTypes.oneOf(['right', 'left', 'top', 'bottom']) };\n\n\nconst defaultProps = {\n  inFocus: false,\n  showShortLinkButton: false,\n  placement: 'right',\n  filters: {} };\n\n\nclass AnchorLink extends React.PureComponent {\n  componentDidMount() {\n    const hash = getLocationHash();\n    const { anchorLinkId } = this.props;\n\n    if (hash && anchorLinkId === hash) {\n      this.scrollToView();\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { inFocus = false } = nextProps;\n    if (inFocus) {\n      this.scrollToView();\n    }\n  }\n\n  scrollToView(delay = 0) {\n    const { anchorLinkId } = this.props;\n    const directLinkComponent = document.getElementById(anchorLinkId);\n    if (directLinkComponent) {\n      setTimeout(() => {\n        directLinkComponent.scrollIntoView({\n          block: 'center',\n          behavior: 'smooth' });\n\n      }, delay);\n    }\n  }\n\n  render() {\n    const {\n      anchorLinkId,\n      filters,\n      showShortLinkButton,\n      placement } =\n    this.props;\n    return (\n      ___EmotionJSX(\"span\", { className: \"anchor-link-container\", id: anchorLinkId },\n      showShortLinkButton &&\n      ___EmotionJSX(URLShortLinkButton, {\n        url: getDashboardUrl({\n          pathname: window.location.pathname,\n          filters,\n          hash: anchorLinkId }),\n\n        emailSubject: t('Superset chart'),\n        emailContent: t('Check out this chart in dashboard:'),\n        placement: placement })));\n\n\n\n\n  }}\n\n\nAnchorLink.propTypes = propTypes;\nAnchorLink.defaultProps = defaultProps;\n\nexport default AnchorLink;","map":null,"metadata":{},"sourceType":"module"}