{"ast":null,"code":"import _debounce from \"lodash/debounce\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000 })\n  {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThrehold = delayThreshold;\n\n    this.trigger = _debounce(this.trigger.bind(this), this.delayThrehold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }}\n\n\nexport default DebouncedMessageQueue;","map":null,"metadata":{},"sourceType":"module"}