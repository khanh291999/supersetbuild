{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Dropdown as AntdDropdown, Tooltip } from 'src/common/components';\nimport { styled } from '@superset-ui/core';\nimport kebabCase from 'lodash/kebabCase';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledDropdownButton = styled.div`\n  .ant-btn-group {\n    button.ant-btn {\n      background-color: ${({ theme }) => theme.colors.primary.dark1};\n      border-color: transparent;\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n      font-size: 12px;\n      line-height: 13px;\n      outline: none;\n      text-transform: uppercase;\n      &:first-of-type {\n        border-radius: ${({ theme }) => `${theme.gridUnit}px 0 0 ${theme.gridUnit}px`};\n        margin: 0;\n        width: 120px;\n      }\n\n      &:disabled {\n        background-color: ${({ theme }) => theme.colors.grayscale.light2};\n        color: ${({ theme }) => theme.colors.grayscale.base};\n      }\n      &:nth-child(2) {\n        margin: 0;\n        border-radius: ${({ theme }) => `0 ${theme.gridUnit}px ${theme.gridUnit}px 0`};\n        width: ${({ theme }) => theme.gridUnit * 9}px;\n        &:before,\n        &:hover:before {\n          border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light5};\n          content: '';\n          display: block;\n          height: 23px;\n          margin: 0;\n          position: absolute;\n          top: ${({ theme }) => theme.gridUnit * 0.75}px;\n          width: ${({ theme }) => theme.gridUnit * 0.25}px;\n        }\n\n        &:disabled:before {\n          border-left: 1px solid ${({ theme }) => theme.colors.grayscale.base};\n        }\n      }\n    }\n  }\n`;\nexport const DropdownButton = ({ overlay, tooltip, placement, ...rest }) => {\n  const buildButton = (props = {}) => ___EmotionJSX(StyledDropdownButton, null,\n  ___EmotionJSX(AntdDropdown.Button, _extends({ overlay: overlay }, rest, props)));\n\n  if (tooltip) {\n    return buildButton({\n      buttonsRender: ([leftButton, rightButton]) => [\n      ___EmotionJSX(Tooltip, { placement: placement, id: `${kebabCase(tooltip)}-tooltip`, title: tooltip },\n      leftButton),\n\n      rightButton] });\n\n\n  }\n  return buildButton();\n};","map":null,"metadata":{},"sourceType":"module"}