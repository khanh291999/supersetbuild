{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions } from 'src/modules/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const druidTimeSeries = {\n  label: t('Time'),\n  expanded: true,\n  description: t('Time related form attributes'),\n  controlSetRows: [['time_range']] };\n\nexport const datasourceAndVizType = {\n  label: t('Chart type'),\n  expanded: true,\n  controlSetRows: [\n  ['datasource'],\n  ['viz_type'],\n  [\n  {\n    name: 'slice_id',\n    config: {\n      type: 'HiddenControl',\n      label: t('Chart ID'),\n      hidden: true,\n      description: t('The id of the active chart') } },\n\n\n  {\n    name: 'cache_timeout',\n    config: {\n      type: 'HiddenControl',\n      label: t('Cache Timeout (seconds)'),\n      hidden: true,\n      description: t('The number of seconds before expiring the cache') } },\n\n\n  {\n    name: 'url_params',\n    config: {\n      type: 'HiddenControl',\n      label: t('URL parameters'),\n      hidden: true,\n      description: t('Extra parameters for use in jinja templated queries') } },\n\n\n  {\n    name: 'time_range_endpoints',\n    config: {\n      type: 'HiddenControl',\n      label: t('Time range endpoints'),\n      hidden: true,\n      description: t('Time range endpoints (SIP-15)') } }]] };\n\n\n\n\n\nexport const colorScheme = {\n  label: t('Color scheme'),\n  controlSetRows: [['color_scheme']] };\n\nexport const sqlaTimeSeries = {\n  label: t('Time'),\n  description: t('Time related form attributes'),\n  expanded: true,\n  controlSetRows: [['granularity_sqla'], ['time_range']] };\n\nexport const annotations = {\n  label: t('Annotations and layers'),\n  tabOverride: 'data',\n  expanded: true,\n  controlSetRows: [\n  [\n  {\n    name: 'annotation_layers',\n    config: {\n      type: 'AnnotationLayerControl',\n      label: '',\n      default: [],\n      description: 'Annotation layers',\n      renderTrigger: true,\n      tabOverride: 'data' } }]] };\n\n\n\n\n\nexport const NVD3TimeSeries = [\n{\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n  ['metrics'],\n  ['adhoc_filters'],\n  ['groupby'],\n  ['limit', 'timeseries_limit_metric'],\n  [\n  {\n    name: 'order_desc',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Sort descending'),\n      default: true,\n      description: t('Whether to sort descending or ascending') } },\n\n\n  {\n    name: 'contribution',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Contribution'),\n      default: false,\n      description: t('Compute the contribution to the total') } }],\n\n\n\n  ['row_limit', null]] },\n\n\n{\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t('This section contains options ' +\n  'that allow for advanced analytical post processing ' +\n  'of query results'),\n  controlSetRows: [\n  [___EmotionJSX(\"h1\", { className: \"section-header\" }, t('Rolling window'))],\n  [\n  {\n    name: 'rolling_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Rolling function'),\n      default: 'None',\n      choices: formatSelectOptions([\n      'None',\n      'mean',\n      'sum',\n      'std',\n      'cumsum']),\n\n      description: t('Defines a rolling window function to apply, works along ' +\n      'with the [Periods] text box') } },\n\n\n  {\n    name: 'rolling_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Periods'),\n      isInt: true,\n      description: t('Defines the size of the rolling window function, ' +\n      'relative to the time granularity selected') } },\n\n\n  {\n    name: 'min_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Min periods'),\n      isInt: true,\n      description: t('The minimum number of rolling periods required to show ' +\n      'a value. For instance if you do a cumulative sum on 7 days ' +\n      'you may want your \"Min Period\" to be 7, so that all data points ' +\n      'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n      'taking place over the first 7 periods') } }],\n\n\n\n  [___EmotionJSX(\"h1\", { className: \"section-header\" }, t('Time comparison'))],\n  [\n  {\n    name: 'time_compare',\n    config: {\n      type: 'SelectControl',\n      multi: true,\n      freeForm: true,\n      label: t('Time shift'),\n      choices: formatSelectOptions([\n      '1 day',\n      '1 week',\n      '28 days',\n      '30 days',\n      '52 weeks',\n      '1 year',\n      '104 weeks',\n      '2 years']),\n\n      description: t('Overlay one or more timeseries from a ' +\n      'relative time period. Expects relative time deltas ' +\n      'in natural language (example:  24 hours, 7 days, ' +\n      '52 weeks, 365 days). Free text is supported.') } },\n\n\n  {\n    name: 'comparison_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Calculation type'),\n      default: 'values',\n      choices: [\n      ['values', 'Actual values'],\n      ['absolute', 'Difference'],\n      ['percentage', 'Percentage change'],\n      ['ratio', 'Ratio']],\n\n      description: t('How to display time shifts: as individual lines; as the ' +\n      'difference between the main time series and each time shift; ' +\n      'as the percentage change; or as the ratio between series and time shifts.') } }],\n\n\n\n  [___EmotionJSX(\"h1\", { className: \"section-header\" }, t('Python functions'))],\n  // eslint-disable-next-line jsx-a11y/heading-has-content\n  [___EmotionJSX(\"h2\", { className: \"section-header\" }, \"pandas.resample\")],\n  [\n  {\n    name: 'resample_rule',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Rule'),\n      default: null,\n      choices: formatSelectOptions(['1T', '1H', '1D', '7D', '1M', '1AS']),\n      description: t('Pandas resample rule') } },\n\n\n  {\n    name: 'resample_method',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Method'),\n      default: null,\n      choices: formatSelectOptions([\n      'asfreq',\n      'bfill',\n      'ffill',\n      'median',\n      'mean',\n      'sum']),\n\n      description: t('Pandas resample method') } }]] }];","map":null,"metadata":{},"sourceType":"module"}