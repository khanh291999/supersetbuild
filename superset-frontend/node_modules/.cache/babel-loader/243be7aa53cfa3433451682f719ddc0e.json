{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { components as defaultComponents } from 'react-select';\nimport WindowedMenuList from './WindowedMenuList';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { MenuList: DefaultMenuList } = defaultComponents;\nexport const DEFAULT_WINDOW_THRESHOLD = 100;\nexport function MenuList({ children, ...props }) {\n  const { windowThreshold = DEFAULT_WINDOW_THRESHOLD } = props.selectProps;\n  if (Array.isArray(children) && children.length > windowThreshold) {\n    return ___EmotionJSX(WindowedMenuList, props,\n    children);\n\n  }\n  return ___EmotionJSX(DefaultMenuList, props, children);\n}\n/**\n * Add \"windowThreshold\" option to a react-select component, turn the options\n * list into a virtualized list when appropriate.\n *\n * @param SelectComponent the React component to render Select\n */\nexport default function windowed(SelectComponent) {\n  function WindowedSelect(props, ref) {\n    const { components: components_ = {}, ...restProps } = props;\n    const components = { ...components_, MenuList };\n    return ___EmotionJSX(SelectComponent, _extends({ components: components, ref: ref }, restProps));\n  }\n  return /*#__PURE__*/React.forwardRef(WindowedSelect);\n}","map":null,"metadata":{},"sourceType":"module"}