{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint global-require: 0 */\nimport $ from 'jquery';\nimport { SupersetClient } from '@superset-ui/core';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport setupErrorMessages from 'src/setup/setupErrorMessages';\nfunction showApiMessage(resp) {\n  const template = '<div class=\"alert\"> ' +\n  '<button type=\"button\" class=\"close\" ' +\n  'data-dismiss=\"alert\">\\xD7</button> </div>';\n  const severity = resp.severity || 'info';\n  $(template).\n  addClass(`alert-${severity}`).\n  append(resp.message || '').\n  appendTo($('#alert-container'));\n}\nfunction toggleCheckbox(apiUrlPrefix, selector) {\n  SupersetClient.get({\n    endpoint: apiUrlPrefix + $(selector)[0].checked }).\n\n  then(() => undefined).\n  catch((response) => getClientErrorObject(response).then((parsedResp) => {\n    if (parsedResp && parsedResp.message) {\n      showApiMessage(parsedResp);\n    }\n  }));\n}\nexport default function setupApp() {\n  $(document).ready(function () {\n    $(':checkbox[data-checkbox-api-prefix]').change(function () {\n      const $this = $(this);\n      const prefix = $this.data('checkbox-api-prefix');\n      const id = $this.attr('id');\n      toggleCheckbox(prefix, `#${id}`);\n    });\n    // for language picker dropdown\n    $('#language-picker a').click(function (ev) {\n      ev.preventDefault();\n      SupersetClient.get({\n        url: ev.currentTarget.href,\n        parseMethod: null }).\n      then(() => {\n        window.location.reload();\n      });\n    });\n  });\n  // A set of hacks to allow apps to run within a FAB template\n  // this allows for the server side generated menus to function\n  window.$ = $;\n  window.jQuery = $;\n  require('bootstrap');\n  // setup appwide custom error messages\n  setupErrorMessages();\n}","map":null,"metadata":{},"sourceType":"module"}