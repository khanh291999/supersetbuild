{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan' // timezones are deduped by the first alphabetical value\n};\nconst MIN_SELECT_WIDTH = '400px';\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n  'Mountain Standard Time - Phoenix',\n  'Mountain Standard Time - Phoenix'],\n\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'] };\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\nconst getOffsetKey = (name) => JANUARY.tz(name).utcOffset().toString() +\nJULY.tz(name).utcOffset().toString();\nconst getTimezoneName = (name) => {var _offsetsToName$offset, _offsetsToName$offset2;\n  const offsets = getOffsetKey(name);\n  return (currentDate.tz(name).isDST() ? (_offsetsToName$offset =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset[1] : (_offsetsToName$offset2 =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset2[0]) || name;\n};\nconst ALL_ZONES = moment.tz.\ncountries().\nmap((country) => moment.tz.zonesForCountry(country, true)).\nflat();\nconst TIMEZONES = [];\nALL_ZONES.forEach((zone) => {\n  if (!TIMEZONES.find((option) => getOffsetKey(option.name) === getOffsetKey(zone.name))) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\nconst TIMEZONE_OPTIONS = TIMEZONES.sort(\n// sort by offset\n(a, b) => moment.tz(currentDate, a.name).utcOffset() -\nmoment.tz(currentDate, b.name).utcOffset()).map((zone) => ({\n  label: `GMT ${moment.\n  tz(currentDate, zone.name).\n  format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name) }));\n\nconst TimezoneSelector = ({ onTimezoneChange, timezone }) => {\n  const prevTimezone = useRef(timezone);\n  const matchTimezoneToOptions = (timezone) => {var _TIMEZONE_OPTIONS$fin;return ((_TIMEZONE_OPTIONS$fin = TIMEZONE_OPTIONS.find((option) => option.offsets === getOffsetKey(timezone))) == null ? void 0 : _TIMEZONE_OPTIONS$fin.\n    value) || DEFAULT_TIMEZONE.value;};\n  const updateTimezone = useCallback((tz) => {\n    // update the ref to track changes\n    prevTimezone.current = tz;\n    // the parent component contains the state for the value\n    onTimezoneChange(tz);\n  }, [onTimezoneChange]);\n  useEffect(() => {\n    const updatedTz = matchTimezoneToOptions(timezone || moment.tz.guess());\n    if (prevTimezone.current !== updatedTz) {\n      updateTimezone(updatedTz);\n    }\n  }, [timezone, updateTimezone]);\n  return ___EmotionJSX(Select, { ariaLabel: t('Timezone selector'), css: /*#__PURE__*/_css({ minWidth: MIN_SELECT_WIDTH }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:TimezoneSelector;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RnVEIiwiZmlsZSI6Ii9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudC10aW1lem9uZSc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0IH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xuY29uc3QgREVGQVVMVF9USU1FWk9ORSA9IHtcbiAgICBuYW1lOiAnR01UIFN0YW5kYXJkIFRpbWUnLFxuICAgIHZhbHVlOiAnQWZyaWNhL0FiaWRqYW4nLCAvLyB0aW1lem9uZXMgYXJlIGRlZHVwZWQgYnkgdGhlIGZpcnN0IGFscGhhYmV0aWNhbCB2YWx1ZVxufTtcbmNvbnN0IE1JTl9TRUxFQ1RfV0lEVEggPSAnNDAwcHgnO1xuY29uc3Qgb2Zmc2V0c1RvTmFtZSA9IHtcbiAgICAnLTMwMC0yNDAnOiBbJ0Vhc3Rlcm4gU3RhbmRhcmQgVGltZScsICdFYXN0ZXJuIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTM2MC0zMDAnOiBbJ0NlbnRyYWwgU3RhbmRhcmQgVGltZScsICdDZW50cmFsIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTQyMC0zNjAnOiBbJ01vdW50YWluIFN0YW5kYXJkIFRpbWUnLCAnTW91bnRhaW4gRGF5bGlnaHQgVGltZSddLFxuICAgICctNDIwLTQyMCc6IFtcbiAgICAgICAgJ01vdW50YWluIFN0YW5kYXJkIFRpbWUgLSBQaG9lbml4JyxcbiAgICAgICAgJ01vdW50YWluIFN0YW5kYXJkIFRpbWUgLSBQaG9lbml4JyxcbiAgICBdLFxuICAgICctNDgwLTQyMCc6IFsnUGFjaWZpYyBTdGFuZGFyZCBUaW1lJywgJ1BhY2lmaWMgRGF5bGlnaHQgVGltZSddLFxuICAgICctNTQwLTQ4MCc6IFsnQWxhc2thIFN0YW5kYXJkIFRpbWUnLCAnQWxhc2thIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTYwMC02MDAnOiBbJ0hhd2FpaSBTdGFuZGFyZCBUaW1lJywgJ0hhd2FpaSBEYXlsaWdodCBUaW1lJ10sXG4gICAgJzYwMTIwJzogWydDZW50cmFsIEV1cm9wZWFuIFRpbWUnLCAnQ2VudHJhbCBFdXJvcGVhbiBEYXlsaWdodCBUaW1lJ10sXG4gICAgJzAwJzogW0RFRkFVTFRfVElNRVpPTkUubmFtZSwgREVGQVVMVF9USU1FWk9ORS5uYW1lXSxcbiAgICAnMDYwJzogWydHTVQgU3RhbmRhcmQgVGltZSAtIExvbmRvbicsICdCcml0aXNoIFN1bW1lciBUaW1lJ10sXG59O1xuY29uc3QgY3VycmVudERhdGUgPSBtb21lbnQoKTtcbmNvbnN0IEpBTlVBUlkgPSBtb21lbnQoWzIwMjEsIDFdKTtcbmNvbnN0IEpVTFkgPSBtb21lbnQoWzIwMjEsIDddKTtcbmNvbnN0IGdldE9mZnNldEtleSA9IChuYW1lKSA9PiBKQU5VQVJZLnR6KG5hbWUpLnV0Y09mZnNldCgpLnRvU3RyaW5nKCkgK1xuICAgIEpVTFkudHoobmFtZSkudXRjT2Zmc2V0KCkudG9TdHJpbmcoKTtcbmNvbnN0IGdldFRpbWV6b25lTmFtZSA9IChuYW1lKSA9PiB7XG4gICAgY29uc3Qgb2Zmc2V0cyA9IGdldE9mZnNldEtleShuYW1lKTtcbiAgICByZXR1cm4gKChjdXJyZW50RGF0ZS50eihuYW1lKS5pc0RTVCgpXG4gICAgICAgID8gb2Zmc2V0c1RvTmFtZVtvZmZzZXRzXT8uWzFdXG4gICAgICAgIDogb2Zmc2V0c1RvTmFtZVtvZmZzZXRzXT8uWzBdKSB8fCBuYW1lKTtcbn07XG5jb25zdCBBTExfWk9ORVMgPSBtb21lbnQudHpcbiAgICAuY291bnRyaWVzKClcbiAgICAubWFwKGNvdW50cnkgPT4gbW9tZW50LnR6LnpvbmVzRm9yQ291bnRyeShjb3VudHJ5LCB0cnVlKSlcbiAgICAuZmxhdCgpO1xuY29uc3QgVElNRVpPTkVTID0gW107XG5BTExfWk9ORVMuZm9yRWFjaCh6b25lID0+IHtcbiAgICBpZiAoIVRJTUVaT05FUy5maW5kKG9wdGlvbiA9PiBnZXRPZmZzZXRLZXkob3B0aW9uLm5hbWUpID09PSBnZXRPZmZzZXRLZXkoem9uZS5uYW1lKSkpIHtcbiAgICAgICAgVElNRVpPTkVTLnB1c2goem9uZSk7IC8vIGRlZHVwZSB6b25lcyBieSBvZmZzZXRzXG4gICAgfVxufSk7XG5jb25zdCBUSU1FWk9ORV9PUFRJT05TID0gVElNRVpPTkVTLnNvcnQoXG4vLyBzb3J0IGJ5IG9mZnNldFxuKGEsIGIpID0+IG1vbWVudC50eihjdXJyZW50RGF0ZSwgYS5uYW1lKS51dGNPZmZzZXQoKSAtXG4gICAgbW9tZW50LnR6KGN1cnJlbnREYXRlLCBiLm5hbWUpLnV0Y09mZnNldCgpKS5tYXAoem9uZSA9PiAoe1xuICAgIGxhYmVsOiBgR01UICR7bW9tZW50XG4gICAgICAgIC50eihjdXJyZW50RGF0ZSwgem9uZS5uYW1lKVxuICAgICAgICAuZm9ybWF0KCdaJyl9ICgke2dldFRpbWV6b25lTmFtZSh6b25lLm5hbWUpfSlgLFxuICAgIHZhbHVlOiB6b25lLm5hbWUsXG4gICAgb2Zmc2V0czogZ2V0T2Zmc2V0S2V5KHpvbmUubmFtZSksXG59KSk7XG5jb25zdCBUaW1lem9uZVNlbGVjdG9yID0gKHsgb25UaW1lem9uZUNoYW5nZSwgdGltZXpvbmUgfSkgPT4ge1xuICAgIGNvbnN0IHByZXZUaW1lem9uZSA9IHVzZVJlZih0aW1lem9uZSk7XG4gICAgY29uc3QgbWF0Y2hUaW1lem9uZVRvT3B0aW9ucyA9ICh0aW1lem9uZSkgPT4gVElNRVpPTkVfT1BUSU9OUy5maW5kKG9wdGlvbiA9PiBvcHRpb24ub2Zmc2V0cyA9PT0gZ2V0T2Zmc2V0S2V5KHRpbWV6b25lKSlcbiAgICAgICAgPy52YWx1ZSB8fCBERUZBVUxUX1RJTUVaT05FLnZhbHVlO1xuICAgIGNvbnN0IHVwZGF0ZVRpbWV6b25lID0gdXNlQ2FsbGJhY2soKHR6KSA9PiB7XG4gICAgICAgIC8vIHVwZGF0ZSB0aGUgcmVmIHRvIHRyYWNrIGNoYW5nZXNcbiAgICAgICAgcHJldlRpbWV6b25lLmN1cnJlbnQgPSB0ejtcbiAgICAgICAgLy8gdGhlIHBhcmVudCBjb21wb25lbnQgY29udGFpbnMgdGhlIHN0YXRlIGZvciB0aGUgdmFsdWVcbiAgICAgICAgb25UaW1lem9uZUNoYW5nZSh0eik7XG4gICAgfSwgW29uVGltZXpvbmVDaGFuZ2VdKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkVHogPSBtYXRjaFRpbWV6b25lVG9PcHRpb25zKHRpbWV6b25lIHx8IG1vbWVudC50ei5ndWVzcygpKTtcbiAgICAgICAgaWYgKHByZXZUaW1lem9uZS5jdXJyZW50ICE9PSB1cGRhdGVkVHopIHtcbiAgICAgICAgICAgIHVwZGF0ZVRpbWV6b25lKHVwZGF0ZWRUeik7XG4gICAgICAgIH1cbiAgICB9LCBbdGltZXpvbmUsIHVwZGF0ZVRpbWV6b25lXSk7XG4gICAgcmV0dXJuICg8U2VsZWN0IGFyaWFMYWJlbD17dCgnVGltZXpvbmUgc2VsZWN0b3InKX0gY3NzPXt7IG1pbldpZHRoOiBNSU5fU0VMRUNUX1dJRFRIIH19IC8vIHNtYWxsZXN0IHNpemUgZm9yIGN1cnJlbnQgdmFsdWVzXG4gICAgIG9uQ2hhbmdlPXtvblRpbWV6b25lQ2hhbmdlfSB2YWx1ZT17dGltZXpvbmUgfHwgREVGQVVMVF9USU1FWk9ORS52YWx1ZX0gb3B0aW9ucz17VElNRVpPTkVfT1BUSU9OU30vPik7XG59O1xuZXhwb3J0IGRlZmF1bHQgVGltZXpvbmVTZWxlY3RvcjtcbiJdfQ== */\") // smallest size for current values\n    , onChange: onTimezoneChange, value: timezone || DEFAULT_TIMEZONE.value, options: TIMEZONE_OPTIONS });\n};\nexport default TimezoneSelector;","map":null,"metadata":{},"sourceType":"module"}