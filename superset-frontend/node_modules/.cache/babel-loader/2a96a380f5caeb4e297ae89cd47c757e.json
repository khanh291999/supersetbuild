{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Input } from 'antd';\nimport { styled, css } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport errorIcon from 'src/assets/images/icons/error.svg';\nimport FormItem from './FormItem';\nimport FormLabel from './FormLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledInput = styled(Input)`\n  margin: ${({ theme }) => `${theme.gridUnit}px 0 ${theme.gridUnit * 2}px`};\n`;\nconst alertIconStyles = (theme, hasError) => css`\n  .ant-form-item-children-icon {\n    display: none;\n  }\n  ${hasError &&\n`.ant-form-item-control-input-content {\n      position: relative;\n      &:after {\n        content: ' ';\n        display: inline-block;\n        background: ${theme.colors.error.base};\n        mask: url(${errorIcon});\n        mask-size: cover;\n        width: ${theme.gridUnit * 4}px;\n        height: ${theme.gridUnit * 4}px;\n        position: absolute;\n        right: ${theme.gridUnit * 1.25}px;\n        top: ${theme.gridUnit * 2.75}px;\n      }\n    }`}\n`;\nconst StyledFormGroup = styled('div')`\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n`;\nconst StyledAlignment = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst StyledFormLabel = styled(FormLabel)`\n  margin-bottom: 0;\n`;\nconst LabeledErrorBoundInput = ({ label, validationMethods, errorMessage, helpText, required = false, hasTooltip = false, tooltipText, id, className, ...props }) => ___EmotionJSX(StyledFormGroup, { className: className },\n___EmotionJSX(StyledAlignment, null,\n___EmotionJSX(StyledFormLabel, { htmlFor: id, required: required },\nlabel),\n\nhasTooltip && ___EmotionJSX(InfoTooltip, { tooltip: `${tooltipText}`, viewBox: \"0 -1 24 24\" })),\n\n___EmotionJSX(FormItem, { css: (theme) => alertIconStyles(theme, !!errorMessage), validateTrigger: Object.keys(validationMethods), validateStatus: errorMessage ? 'error' : 'success', help: errorMessage || helpText, hasFeedback: !!errorMessage },\n___EmotionJSX(StyledInput, _extends({}, props, validationMethods))));\n\n\nexport default LabeledErrorBoundInput;","map":null,"metadata":{},"sourceType":"module"}