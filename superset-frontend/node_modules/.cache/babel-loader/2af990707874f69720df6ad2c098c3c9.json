{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { AntdCard, Skeleton, ThinSkeleton } from 'src/common/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ImageLoader from './ImageLoader';\nimport CertifiedIcon from '../CertifiedIcon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ActionsWrapper = styled.div`\n  width: 64px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst StyledCard = styled(AntdCard)`\n  border: 1px solid #d9dbe4;\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  overflow: hidden;\n\n  .ant-card-body {\n    padding: ${({ theme }) => theme.gridUnit * 4}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .ant-card-meta-detail > div:not(:last-child) {\n    margin-bottom: 0;\n  }\n  .gradient-container {\n    position: relative;\n    height: 100%;\n  }\n  &:hover {\n    box-shadow: 8px 8px 28px 0px rgba(0, 0, 0, 0.24);\n    transition: box-shadow ${({ theme }) => theme.transitionTiming}s ease-in-out;\n\n    .gradient-container:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      display: inline-block;\n      background: linear-gradient(\n        180deg,\n        rgba(0, 0, 0, 0) 47.83%,\n        rgba(0, 0, 0, 0.219135) 79.64%,\n        rgba(0, 0, 0, 0.5) 100%\n      );\n\n      transition: background ${({ theme }) => theme.transitionTiming}s\n        ease-in-out;\n    }\n\n    .cover-footer {\n      transform: translateY(0);\n    }\n  }\n`;\nconst Cover = styled.div`\n  height: 264px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  overflow: hidden;\n\n  .cover-footer {\n    transform: translateY(${({ theme }) => theme.gridUnit * 9}px);\n    transition: ${({ theme }) => theme.transitionTiming}s ease-out;\n  }\n`;\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n\n  .card-actions {\n    margin-left: auto;\n    align-self: flex-end;\n    padding-left: ${({ theme }) => theme.gridUnit}px;\n    span[role='img'] {\n      display: flex;\n      align-items: center;\n    }\n  }\n`;\nconst TitleLink = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  & a {\n    color: ${({ theme }) => theme.colors.grayscale.dark1} !important;\n  }\n`;\nconst TitleRight = styled.span`\n  position: absolute;\n  right: -1px;\n  bottom: ${({ theme }) => theme.gridUnit}px;\n`;\nconst CoverFooter = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  position: relative;\n  top: -${({ theme }) => theme.gridUnit * 9}px;\n  padding: 0 8px;\n`;\nconst CoverFooterLeft = styled.div`\n  flex: 1;\n  overflow: hidden;\n`;\nconst CoverFooterRight = styled.div`\n  align-self: flex-end;\n  margin-left: auto;\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst paragraphConfig = { rows: 1, width: 150 };\nconst AnchorLink = ({ to, children }) => ___EmotionJSX(\"a\", { href: to }, children);\nfunction ListViewCard({ title, url, linkComponent, titleRight, imgURL, imgFallbackURL, description, coverLeft, coverRight, actions, avatar, loading, imgPosition = 'top', cover, certifiedBy, certificationDetails }) {\n  const Link = url && linkComponent ? linkComponent : AnchorLink;\n  const theme = useTheme();\n  return ___EmotionJSX(StyledCard, { cover: cover || ___EmotionJSX(Cover, null,\n    ___EmotionJSX(Link, { to: url },\n    ___EmotionJSX(\"div\", { className: \"gradient-container\" },\n    ___EmotionJSX(ImageLoader, { src: imgURL || '', fallback: imgFallbackURL || '', isLoading: loading, position: imgPosition }))),\n\n\n    ___EmotionJSX(CoverFooter, { className: \"cover-footer\" },\n    !loading && coverLeft && ___EmotionJSX(CoverFooterLeft, null, coverLeft),\n    !loading && coverRight && ___EmotionJSX(CoverFooterRight, null, coverRight))) },\n\n\n  loading && ___EmotionJSX(AntdCard.Meta, { title: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(TitleContainer, null,\n    ___EmotionJSX(Skeleton.Input, { active: true, size: \"small\", css: /*#__PURE__*/_css({\n        width: Math.trunc(theme.gridUnit * 62.5) }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ListViewCard;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }),\n\n    ___EmotionJSX(\"div\", { className: \"card-actions\" },\n    ___EmotionJSX(Skeleton.Button, { active: true, shape: \"circle\" }), ' ',\n    ___EmotionJSX(Skeleton.Button, { active: true, css: /*#__PURE__*/_css({\n        width: theme.gridUnit * 10 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ListViewCard;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") })))),\n\n\n\n    description: ___EmotionJSX(ThinSkeleton, { round: true, active: true, title: false, paragraph: paragraphConfig }) }),\n  !loading && ___EmotionJSX(AntdCard.Meta, { title: ___EmotionJSX(TitleContainer, null,\n    ___EmotionJSX(Tooltip, { title: title },\n    ___EmotionJSX(TitleLink, null,\n    ___EmotionJSX(Link, { to: url },\n    certifiedBy && ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(CertifiedIcon, { certifiedBy: certifiedBy, details: certificationDetails }), ' '),\n\n    title))),\n\n\n\n    titleRight && ___EmotionJSX(TitleRight, null, titleRight),\n    ___EmotionJSX(\"div\", { className: \"card-actions\" },\n    actions)),\n\n    description: description, avatar: avatar || null }));\n\n}\nListViewCard.Actions = ActionsWrapper;\nexport default ListViewCard;","map":null,"metadata":{},"sourceType":"module"}