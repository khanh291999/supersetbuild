{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useState } from 'react';\nimport { Input } from 'src/common/components';\nimport Modal from 'src/components/Modal';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledDiv = styled.div`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    text-transform: uppercase;\n  }\n`;\nconst DescriptionContainer = styled.div`\n  line-height: 40px;\n  padding-top: 16px;\n`;\nexport default function DeleteModal({ description, onConfirm, onHide, open, title }) {\n  const [disableChange, setDisableChange] = useState(true);\n  const [confirmation, setConfirmation] = useState('');\n  const hide = () => {\n    setConfirmation('');\n    onHide();\n  };\n  const confirm = () => {\n    setConfirmation('');\n    onConfirm();\n  };\n  const onChange = (event) => {var _event$target$value;\n    const targetValue = (_event$target$value = event.target.value) != null ? _event$target$value : '';\n    setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n    setConfirmation(targetValue);\n  };\n  const onPressEnter = () => {\n    if (!disableChange) {\n      confirm();\n    }\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableChange, onHide: hide, onHandledPrimaryAction: confirm, primaryButtonName: t('delete'), primaryButtonType: \"danger\", show: open, title: title },\n  ___EmotionJSX(DescriptionContainer, null, description),\n  ___EmotionJSX(StyledDiv, null,\n  ___EmotionJSX(FormLabel, { htmlFor: \"delete\" },\n  t('Type \"%s\" to confirm', t('DELETE'))),\n\n  ___EmotionJSX(Input, { type: \"text\", id: \"delete\", autoComplete: \"off\", value: confirmation, onChange: onChange, onPressEnter: onPressEnter })));\n\n\n}","map":null,"metadata":{},"sourceType":"module"}