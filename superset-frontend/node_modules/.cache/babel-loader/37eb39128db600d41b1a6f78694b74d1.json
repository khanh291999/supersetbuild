{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: ${({ level, theme }) => theme.colors[level].light2};\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ level, theme }) => theme.colors[level].base};\n  color: ${({ level, theme }) => theme.colors[level].dark2};\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  width: 100%;\n`;\nconst StyledContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst StyledTitle = styled.span`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\nexport default function BasicErrorAlert({ body, level = 'error', title }) {\n  const theme = useTheme();\n  const iconColor = theme.colors[level].base;\n  return ___EmotionJSX(StyledContainer, { level: level, role: \"alert\" },\n  level === 'error' ? ___EmotionJSX(Icons.ErrorSolid, { iconColor: iconColor }) : ___EmotionJSX(Icons.WarningSolid, { iconColor: iconColor }),\n  ___EmotionJSX(StyledContent, null,\n  ___EmotionJSX(StyledTitle, null, title),\n  ___EmotionJSX(\"p\", null, body)));\n\n\n}","map":null,"metadata":{},"sourceType":"module"}