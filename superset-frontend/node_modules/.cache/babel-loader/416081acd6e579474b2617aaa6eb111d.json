{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { height, datasource, formData, queriesData } = chartProps;\n  const { columnCollection = [], groupby, metrics, url } = formData;\n  const { records, columns } = queriesData[0].data;\n  const isGroupBy = (groupby == null ? void 0 : groupby.length) > 0;\n\n  // When there is a \"group by\",\n  // each row in the table is a database column\n  // Otherwise,\n  // each row in the table is a metric\n  let rows;\n  if (isGroupBy) {\n    rows = columns.map((column) =>\n    typeof column === 'object' ? column : { label: column });\n\n  } else {\n    const metricMap = datasource.metrics.reduce((acc, current) => {\n      const map = acc;\n      map[current.metric_name] = current;\n      return map;\n    }, {});\n\n    rows = metrics.map((metric) =>\n    typeof metric === 'object' ? metric : metricMap[metric]);\n\n  }\n\n  // TODO: Better parse this from controls instead of mutative value here.\n  columnCollection.forEach((column) => {\n    const c = column;\n    if (c.timeLag !== undefined && c.timeLag !== null && c.timeLag !== '') {\n      c.timeLag = parseInt(c.timeLag, 10);\n    }\n  });\n\n  return {\n    height,\n    data: records,\n    columnConfigs: columnCollection,\n    rows,\n    rowType: isGroupBy ? 'column' : 'metric',\n    url };\n\n}","map":null,"metadata":{},"sourceType":"module"}