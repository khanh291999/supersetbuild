{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { withTheme } from '@superset-ui/core';\nimport SearchFilter from './Search';\nimport SelectFilter from './Select';\nimport DateRangeFilter from './DateRange';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction UIFilters({ filters, internalFilters = [], updateFilterValue }) {\n  return ___EmotionJSX(React.Fragment, null,\n  filters.map(({ Header, fetchSelects, id, input, paginate, selects }, index) => {\n    const initialValue = internalFilters[index] && internalFilters[index].value;\n    if (input === 'select') {\n      return ___EmotionJSX(SelectFilter, { Header: Header, fetchSelects: fetchSelects, initialValue: initialValue, key: id, name: id, onSelect: (option) => updateFilterValue(index, option), paginate: paginate, selects: selects });\n    }\n    if (input === 'search' && typeof Header === 'string') {\n      return ___EmotionJSX(SearchFilter, { Header: Header, initialValue: initialValue, key: id, name: id, onSubmit: (value) => updateFilterValue(index, value) });\n    }\n    if (input === 'datetime_range') {\n      return ___EmotionJSX(DateRangeFilter, { Header: Header, initialValue: initialValue, key: id, name: id, onSubmit: (value) => updateFilterValue(index, value) });\n    }\n    return null;\n  }));\n\n}\nexport default withTheme(UIFilters);","map":null,"metadata":{},"sourceType":"module"}