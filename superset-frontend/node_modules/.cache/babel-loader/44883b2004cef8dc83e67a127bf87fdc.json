{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport AntDTabs from 'antd/lib/tabs';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledTabs = ({ animated = false, fullWidth = true, allowOverflow = true, ...props }) => ___EmotionJSX(AntDTabs, _extends({ animated: animated }, props, { css: (theme) => css`\n      overflow: ${allowOverflow ? 'visible' : 'hidden'};\n\n      .ant-tabs-content-holder {\n        overflow: ${allowOverflow ? 'visible' : 'auto'};\n      }\n      .ant-tabs-tab {\n        flex: 1 1 auto;\n        &.ant-tabs-tab-active .ant-tabs-tab-btn {\n          color: inherit;\n        }\n        &:hover {\n          .anchor-link-container {\n            cursor: pointer;\n            .fa.fa-link {\n              visibility: visible;\n            }\n          }\n        }\n        .short-link-trigger.btn {\n          padding: 0 ${theme.gridUnit}px;\n          & > .fa.fa-link {\n            top: 0;\n          }\n        }\n      }\n      ${fullWidth &&\n  css`\n        .ant-tabs-nav-list {\n          width: 100%;\n        }\n      `};\n\n      .ant-tabs-tab-btn {\n        display: flex;\n        flex: 1 1 auto;\n        align-items: center;\n        justify-content: center;\n        font-size: ${theme.typography.sizes.s}px;\n        text-align: center;\n        text-transform: uppercase;\n        user-select: none;\n        .required {\n          margin-left: ${theme.gridUnit / 2}px;\n          color: ${theme.colors.error.base};\n        }\n      }\n      .ant-tabs-ink-bar {\n        background: ${theme.colors.secondary.base};\n      }\n    ` }));\nconst StyledTabPane = styled(AntDTabs.TabPane)``;\nconst Tabs = Object.assign(StyledTabs, {\n  TabPane: StyledTabPane });\n\nconst StyledEditableTabs = styled(StyledTabs)`\n  .ant-tabs-content-holder {\n    background: white;\n  }\n\n  & > .ant-tabs-nav {\n    margin-bottom: 0;\n  }\n\n  .ant-tabs-tab-remove {\n    padding-top: 0;\n    padding-bottom: 0;\n    height: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  ${({ fullWidth }) => fullWidth &&\ncss`\n      .ant-tabs-nav-list {\n        width: 100%;\n      }\n    `}\n`;\nconst StyledCancelXIcon = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\nexport const EditableTabs = Object.assign(StyledEditableTabs, {\n  TabPane: StyledTabPane });\n\nEditableTabs.defaultProps = {\n  type: 'editable-card',\n  fullWidth: false,\n  animated: { inkBar: true, tabPane: false } };\n\nEditableTabs.TabPane.defaultProps = {\n  closeIcon: ___EmotionJSX(StyledCancelXIcon, { role: \"button\", tabIndex: 0 }) };\n\nexport const StyledLineEditableTabs = styled(EditableTabs)`\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-tab {\n    margin: 0 ${({ theme }) => theme.gridUnit * 4}px;\n    padding: ${({ theme }) => `${theme.gridUnit * 3}px ${theme.gridUnit}px`};\n    background: transparent;\n    border: none;\n  }\n\n  &.ant-tabs-card > .ant-tabs-nav .ant-tabs-ink-bar {\n    visibility: visible;\n  }\n\n  .ant-tabs-tab-btn {\n    font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  }\n\n  .ant-tabs-tab-remove {\n    margin-left: 0;\n    padding-right: 0;\n  }\n\n  .ant-tabs-nav-add {\n    min-width: unset !important;\n    background: transparent !important;\n    border: none !important;\n  }\n`;\nexport const LineEditableTabs = Object.assign(StyledLineEditableTabs, {\n  TabPane: StyledTabPane });\n\nexport default Tabs;","map":null,"metadata":{},"sourceType":"module"}