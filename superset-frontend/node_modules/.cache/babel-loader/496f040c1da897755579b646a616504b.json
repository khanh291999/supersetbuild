{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getDatabaseDocumentationLinks } from 'src/views/CRUD/hooks';\nimport { EditHeaderTitle, EditHeaderSubtitle, StyledFormHeader, StyledStickyHeader } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst supersetTextDocs = getDatabaseDocumentationLinks();\nexport const DOCUMENTATION_LINK = supersetTextDocs ?\nsupersetTextDocs.support :\n'https://superset.apache.org/docs/databases/installing-database-drivers';\nconst irregularDocumentationLinks = {\n  postgresql: 'https://superset.apache.org/docs/databases/postgres',\n  mssql: 'https://superset.apache.org/docs/databases/sql-server',\n  gsheets: 'https://superset.apache.org/docs/databases/google-sheets' };\n\nconst documentationLink = (engine) => {\n  if (!engine)\n  return null;\n  if (supersetTextDocs) {\n    // override doc link for superset_txt yml\n    return supersetTextDocs[engine] || supersetTextDocs.default;\n  }\n  if (!irregularDocumentationLinks[engine]) {\n    return `https://superset.apache.org/docs/databases/${engine}`;\n  }\n  return irregularDocumentationLinks[engine];\n};\nconst ModalHeader = ({ isLoading, isEditMode, useSqlAlchemyForm, hasConnectedDb, db, dbName, dbModel, editNewDb }) => {\n  const isEditHeader = ___EmotionJSX(StyledFormHeader, null,\n  ___EmotionJSX(EditHeaderTitle, null, db == null ? void 0 : db.backend),\n  ___EmotionJSX(EditHeaderSubtitle, null, dbName));\n\n  const useSqlAlchemyFormHeader = ___EmotionJSX(StyledFormHeader, null,\n  ___EmotionJSX(\"p\", { className: \"helper-top\" }, \" STEP 2 OF 2 \"),\n  ___EmotionJSX(\"h4\", null, \"Enter Primary Credentials\"),\n  ___EmotionJSX(\"p\", { className: \"helper-bottom\" }, \"Need help? Learn how to connect your database\",\n  ' ',\n  ___EmotionJSX(\"a\", { href: (supersetTextDocs == null ? void 0 : supersetTextDocs.default) || DOCUMENTATION_LINK, target: \"_blank\", rel: \"noopener noreferrer\" }, \"here\"), \".\"));\n\n\n\n\n\n  const hasConnectedDbHeader = ___EmotionJSX(StyledStickyHeader, null,\n  ___EmotionJSX(StyledFormHeader, null,\n  ___EmotionJSX(\"p\", { className: \"helper-top\" }, \" STEP 3 OF 3 \"),\n  ___EmotionJSX(\"h4\", { className: \"step-3-text\" }, \"Your database was successfully connected! Here are some optional settings for your database\"),\n\n\n\n  ___EmotionJSX(\"p\", { className: \"helper-bottom\" }, \"Need help? Learn more about\",\n  ' ',\n  ___EmotionJSX(\"a\", { href: documentationLink(db == null ? void 0 : db.engine), target: \"_blank\", rel: \"noopener noreferrer\" }, \"connecting to \",\n  dbModel.name, \".\"))));\n\n\n\n\n  const hasDbHeader = ___EmotionJSX(StyledStickyHeader, null,\n  ___EmotionJSX(StyledFormHeader, null,\n  ___EmotionJSX(\"p\", { className: \"helper-top\" }, \" STEP 2 OF 3 \"),\n  ___EmotionJSX(\"h4\", null, \"Enter the required \", dbModel.name, \" credentials\"),\n  ___EmotionJSX(\"p\", { className: \"helper-bottom\" }, \"Need help? Learn more about\",\n  ' ',\n  ___EmotionJSX(\"a\", { href: documentationLink(db == null ? void 0 : db.engine), target: \"_blank\", rel: \"noopener noreferrer\" }, \"connecting to \",\n  dbModel.name, \".\"))));\n\n\n\n\n  const noDbHeader = ___EmotionJSX(StyledFormHeader, null,\n  ___EmotionJSX(\"div\", { className: \"select-db\" },\n  ___EmotionJSX(\"p\", { className: \"helper-top\" }, \" STEP 1 OF 3 \"),\n  ___EmotionJSX(\"h4\", null, \"Select a database to connect\")));\n\n\n  if (isLoading)\n  return ___EmotionJSX(React.Fragment, null);\n  if (isEditMode) {\n    return isEditHeader;\n  }\n  if (useSqlAlchemyForm) {\n    return useSqlAlchemyFormHeader;\n  }\n  if (hasConnectedDb && !editNewDb) {\n    return hasConnectedDbHeader;\n  }\n  if (db || editNewDb) {\n    return hasDbHeader;\n  }\n  return noDbHeader;\n};\nexport default ModalHeader;","map":null,"metadata":{},"sourceType":"module"}