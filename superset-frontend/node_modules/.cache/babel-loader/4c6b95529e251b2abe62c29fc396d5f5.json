{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Label from 'src/components/Label';\nimport { Dropdown, Menu } from 'src/common/components';\nimport FaveStar from 'src/components/FaveStar';\nimport FacePile from 'src/components/FacePile';\nimport { handleChartDelete, CardStyles } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ChartCard({ chart, hasPerm, openChartEditModal, bulkSelectEnabled, addDangerToast, addSuccessToast, refreshData, loading, showThumbnails, saveFavoriteStatus, favoriteStatus, chartFilter, userId, handleBulkChartExport }) {\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_read') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const theme = useTheme();\n  const menu = ___EmotionJSX(Menu, null,\n  canDelete && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: ___EmotionJSX(React.Fragment, null,\n    t('Are you sure you want to delete'), \" \", ___EmotionJSX(\"b\", null, chart.slice_name), \"?\"),\n\n    onConfirm: () => handleChartDelete(chart, addSuccessToast, addDangerToast, refreshData, chartFilter, userId) },\n  (confirmDelete) => ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n  ___EmotionJSX(Icons.Trash, { iconSize: \"l\" }), \" \", t('Delete')))),\n\n\n\n  canExport && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, onClick: () => handleBulkChartExport([chart]) },\n  ___EmotionJSX(Icons.Share, { iconSize: \"l\" }), \" \", t('Export'))),\n\n\n  canEdit && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, onClick: () => openChartEditModal(chart) },\n  ___EmotionJSX(Icons.EditAlt, { iconSize: \"l\" }), \" \", t('Edit'))));\n\n\n\n  return ___EmotionJSX(CardStyles, { onClick: () => {\n      if (!bulkSelectEnabled && chart.url) {\n        window.location.href = chart.url;\n      }\n    } },\n  ___EmotionJSX(ListViewCard, { loading: loading, title: chart.slice_name, certifiedBy: chart.certified_by, certificationDetails: chart.certification_details, cover: !isFeatureEnabled(FeatureFlag.THUMBNAILS) || !showThumbnails ? ___EmotionJSX(React.Fragment, null) : null, url: bulkSelectEnabled ? undefined : chart.url, imgURL: chart.thumbnail_url || '', imgFallbackURL: \"/static/assets/images/chart-card-fallback.svg\", description: t('Modified %s', chart.changed_on_delta_humanized), coverLeft: ___EmotionJSX(FacePile, { users: chart.owners || [] }), coverRight: ___EmotionJSX(Label, { type: \"secondary\" }, chart.datasource_name_text), actions: ___EmotionJSX(ListViewCard.Actions, { onClick: (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      } },\n    ___EmotionJSX(FaveStar, { itemId: chart.id, saveFaveStar: saveFavoriteStatus, isStarred: favoriteStatus }),\n    ___EmotionJSX(Dropdown, { overlay: menu },\n    ___EmotionJSX(Icons.MoreVert, { iconColor: theme.colors.grayscale.base }))) }));\n\n\n\n}","map":null,"metadata":{},"sourceType":"module"}