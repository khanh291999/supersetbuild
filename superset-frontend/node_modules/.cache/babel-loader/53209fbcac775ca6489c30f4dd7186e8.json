{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { SELECT_WIDTH } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  align-items: center;\n  text-align: left;\n  width: ${SELECT_WIDTH}px;\n`;\nexport const CardSortSelect = ({ initialSort, onChange, options, pageIndex, pageSize }) => {\n  const defaultSort = initialSort && options.find(({ id }) => id === initialSort[0].id) ||\n  options[0];\n  const [value, setValue] = useState({\n    label: defaultSort.label,\n    value: defaultSort.value });\n\n  const formattedOptions = useMemo(() => options.map((option) => ({ label: option.label, value: option.value })), [options]);\n  const handleOnChange = (selected) => {\n    setValue(selected);\n    const originalOption = options.find(({ value }) => value === selected.value);\n    if (originalOption) {\n      const sortBy = [\n      {\n        id: originalOption.id,\n        desc: originalOption.desc }];\n\n\n      onChange({ pageIndex, pageSize, sortBy, filters: [] });\n    }\n  };\n  return ___EmotionJSX(SortContainer, null,\n  ___EmotionJSX(Select, { ariaLabel: t('Sort'), header: ___EmotionJSX(FormLabel, null, t('Sort')), labelInValue: true, onChange: (value) => handleOnChange(value), options: formattedOptions, showSearch: true, value: value }));\n\n};","map":null,"metadata":{},"sourceType":"module"}