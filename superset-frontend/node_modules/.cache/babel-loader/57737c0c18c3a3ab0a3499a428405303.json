{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getShortUrl } from 'src/utils/urlUtils';\nimport withToasts from 'src/components/MessageToasts/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  url: PropTypes.string,\n  emailSubject: PropTypes.string,\n  emailContent: PropTypes.string,\n  addDangerToast: PropTypes.func.isRequired,\n  placement: PropTypes.oneOf(['right', 'left', 'top', 'bottom']) };\n\n\nclass URLShortLinkButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shortUrl: '' };\n\n    this.onShortUrlSuccess = this.onShortUrlSuccess.bind(this);\n    this.getCopyUrl = this.getCopyUrl.bind(this);\n  }\n\n  onShortUrlSuccess(shortUrl) {\n    this.setState(() => ({\n      shortUrl }));\n\n  }\n\n  getCopyUrl(e) {\n    e.stopPropagation();\n    getShortUrl(this.props.url).\n    then(this.onShortUrlSuccess).\n    catch(this.props.addDangerToast);\n  }\n\n  renderPopover() {\n    const emailBody = t('%s%s', this.props.emailContent, this.state.shortUrl);\n    return (\n      ___EmotionJSX(\"div\", { id: \"shorturl-popover\" },\n      ___EmotionJSX(CopyToClipboard, {\n        text: this.state.shortUrl,\n        copyNode:\n        ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", title: t('Copy to clipboard') }) }), \"\\xA0\\xA0\",\n\n\n\n      ___EmotionJSX(\"a\", {\n        href: `mailto:?Subject=${this.props.emailSubject}%20&Body=${emailBody}` },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-envelope\" }))));\n\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(Popover, {\n        trigger: \"click\",\n        placement: this.props.placement,\n        onClick: this.getCopyUrl,\n        content: this.renderPopover() },\n\n      ___EmotionJSX(\"span\", {\n        className: \"short-link-trigger btn btn-default btn-sm\",\n        role: \"button\" },\n\n      ___EmotionJSX(\"i\", { className: \"short-link-trigger fa fa-link\" }), \"\\xA0\")));\n\n\n\n\n  }}\n\n\nURLShortLinkButton.defaultProps = {\n  url: window.location.href.substring(window.location.origin.length),\n  placement: 'left',\n  emailSubject: '',\n  emailContent: '' };\n\n\nURLShortLinkButton.propTypes = propTypes;\n\nexport default withToasts(URLShortLinkButton);","map":null,"metadata":{},"sourceType":"module"}