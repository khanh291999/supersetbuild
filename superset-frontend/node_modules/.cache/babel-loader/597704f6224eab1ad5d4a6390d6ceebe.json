{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { CaretContainer, CloseContainer, OptionControlContainer, Label } from 'src/explore/components/controls/OptionControls';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledInfoTooltipWithTrigger = styled(InfoTooltipWithTrigger)`\n  margin: 0 ${({ theme }) => theme.gridUnit}px;\n`;\nexport default function Option({ children, index, clickClose, withCaret, isExtra, canDelete = true }) {\n  const theme = useTheme();\n  const onClickClose = useCallback((e) => {\n    e.stopPropagation();\n    clickClose(index);\n  }, [clickClose, index]);\n  return ___EmotionJSX(OptionControlContainer, { withCaret: withCaret },\n  canDelete && ___EmotionJSX(CloseContainer, { role: \"button\", onClick: onClickClose },\n  ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.grayscale.light1 })),\n\n  ___EmotionJSX(Label, null, children),\n  isExtra && ___EmotionJSX(StyledInfoTooltipWithTrigger, { icon: \"exclamation-triangle\", placement: \"top\", bsStyle: \"warning\", tooltip: t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `) }),\n  withCaret && ___EmotionJSX(CaretContainer, null,\n  ___EmotionJSX(Icons.CaretRight, { iconColor: theme.colors.grayscale.light1 })));\n\n\n}","map":null,"metadata":{},"sourceType":"module"}