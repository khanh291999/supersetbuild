{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  copyNode: PropTypes.node,\n  getText: PropTypes.func,\n  onCopyEnd: PropTypes.func,\n  shouldShowText: PropTypes.bool,\n  text: PropTypes.string,\n  wrapped: PropTypes.bool,\n  tooltipText: PropTypes.string,\n  addDangerToast: PropTypes.func.isRequired,\n  addSuccessToast: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  copyNode: ___EmotionJSX(\"span\", null, \"Copy\"),\n  onCopyEnd: () => {},\n  shouldShowText: true,\n  wrapped: true,\n  tooltipText: t('Copy to clipboard') };var _ref = process.env.NODE_ENV === \"production\" ? { name: \"8irbms\", styles: \"display:inline-flex;align-items:center\" } : { name: \"mx2pbj-CopyToClipboard\", styles: \"display:inline-flex;align-items:center;label:CopyToClipboard;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9Db3B5VG9DbGlwYm9hcmQvaW5kZXguanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdHWSIsImZpbGUiOiIvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvQ29weVRvQ2xpcGJvYXJkL2luZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgdCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Ub29sdGlwJztcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9jb21wb25lbnRzL01lc3NhZ2VUb2FzdHMvd2l0aFRvYXN0cyc7XG5pbXBvcnQgY29weVRleHRUb0NsaXBib2FyZCBmcm9tICdzcmMvdXRpbHMvY29weSc7XG5cbmNvbnN0IHByb3BUeXBlcyA9IHtcbiAgY29weU5vZGU6IFByb3BUeXBlcy5ub2RlLFxuICBnZXRUZXh0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Db3B5RW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2hvdWxkU2hvd1RleHQ6IFByb3BUeXBlcy5ib29sLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICB3cmFwcGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgdG9vbHRpcFRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFkZERhbmdlclRvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBhZGRTdWNjZXNzVG9hc3Q6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIGNvcHlOb2RlOiA8c3Bhbj5Db3B5PC9zcGFuPixcbiAgb25Db3B5RW5kOiAoKSA9PiB7fSxcbiAgc2hvdWxkU2hvd1RleHQ6IHRydWUsXG4gIHdyYXBwZWQ6IHRydWUsXG4gIHRvb2x0aXBUZXh0OiB0KCdDb3B5IHRvIGNsaXBib2FyZCcpLFxufTtcblxuY2xhc3MgQ29weVRvQ2xpcGJvYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAvLyBiaW5kaW5nc1xuICAgIHRoaXMuY29weVRvQ2xpcGJvYXJkID0gdGhpcy5jb3B5VG9DbGlwYm9hcmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uQ2xpY2sgPSB0aGlzLm9uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuZ2V0VGV4dCkge1xuICAgICAgdGhpcy5wcm9wcy5nZXRUZXh0KGQgPT4ge1xuICAgICAgICB0aGlzLmNvcHlUb0NsaXBib2FyZChkKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvcHlUb0NsaXBib2FyZCh0aGlzLnByb3BzLnRleHQpO1xuICAgIH1cbiAgfVxuXG4gIGdldERlY29yYXRlZENvcHlOb2RlKCkge1xuICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQodGhpcy5wcm9wcy5jb3B5Tm9kZSwge1xuICAgICAgc3R5bGU6IHsgY3Vyc29yOiAncG9pbnRlcicgfSxcbiAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGljayxcbiAgICB9KTtcbiAgfVxuXG4gIGNvcHlUb0NsaXBib2FyZCh0ZXh0VG9Db3B5KSB7XG4gICAgY29weVRleHRUb0NsaXBib2FyZCh0ZXh0VG9Db3B5KVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLmFkZFN1Y2Nlc3NUb2FzdCh0KCdDb3BpZWQgdG8gY2xpcGJvYXJkIScpKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0KFxuICAgICAgICAgIHQoXG4gICAgICAgICAgICAnU29ycnksIHlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGNvcHlpbmcuIFVzZSBDdHJsIC8gQ21kICsgQyEnLFxuICAgICAgICAgICksXG4gICAgICAgICk7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLm9uQ29weUVuZCgpO1xuICAgICAgfSk7XG4gIH1cblxuICByZW5kZXJOb3RXcmFwcGVkKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8VG9vbHRpcFxuICAgICAgICBpZD1cImNvcHktdG8tY2xpcGJvYXJkLXRvb2x0aXBcIlxuICAgICAgICBwbGFjZW1lbnQ9XCJ0b3BcIlxuICAgICAgICBzdHlsZT17eyBjdXJzb3I6ICdwb2ludGVyJyB9fVxuICAgICAgICB0aXRsZT17dGhpcy5wcm9wcy50b29sdGlwVGV4dH1cbiAgICAgICAgdHJpZ2dlcj17Wydob3ZlciddfVxuICAgICAgPlxuICAgICAgICB7dGhpcy5nZXREZWNvcmF0ZWRDb3B5Tm9kZSgpfVxuICAgICAgPC9Ub29sdGlwPlxuICAgICk7XG4gIH1cblxuICByZW5kZXJMaW5rKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8c3BhbiBjc3M9e3sgZGlzcGxheTogJ2lubGluZS1mbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfX0+XG4gICAgICAgIHt0aGlzLnByb3BzLnNob3VsZFNob3dUZXh0ICYmIHRoaXMucHJvcHMudGV4dCAmJiAoXG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibS1yLTVcIiBkYXRhLXRlc3Q9XCJzaG9ydC11cmxcIj5cbiAgICAgICAgICAgIHt0aGlzLnByb3BzLnRleHR9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApfVxuICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgIGlkPVwiY29weS10by1jbGlwYm9hcmQtdG9vbHRpcFwiXG4gICAgICAgICAgcGxhY2VtZW50PVwidG9wXCJcbiAgICAgICAgICB0aXRsZT17dGhpcy5wcm9wcy50b29sdGlwVGV4dH1cbiAgICAgICAgICB0cmlnZ2VyPXtbJ2hvdmVyJ119XG4gICAgICAgID5cbiAgICAgICAgICB7dGhpcy5nZXREZWNvcmF0ZWRDb3B5Tm9kZSgpfVxuICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICA8L3NwYW4+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHdyYXBwZWQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCF3cmFwcGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJOb3RXcmFwcGVkKCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJlbmRlckxpbmsoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoVG9hc3RzKENvcHlUb0NsaXBib2FyZCk7XG5cbkNvcHlUb0NsaXBib2FyZC5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Db3B5VG9DbGlwYm9hcmQuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nclass CopyToClipboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // bindings\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    if (this.props.getText) {\n      this.props.getText((d) => {\n        this.copyToClipboard(d);\n      });\n    } else {\n      this.copyToClipboard(this.props.text);\n    }\n  }\n\n  getDecoratedCopyNode() {\n    return /*#__PURE__*/React.cloneElement(this.props.copyNode, {\n      style: { cursor: 'pointer' },\n      onClick: this.onClick });\n\n  }\n\n  copyToClipboard(textToCopy) {\n    copyTextToClipboard(textToCopy).\n    then(() => {\n      this.props.addSuccessToast(t('Copied to clipboard!'));\n    }).\n    catch(() => {\n      this.props.addDangerToast(\n      t(\n      'Sorry, your browser does not support copying. Use Ctrl / Cmd + C!'));\n\n\n    }).\n    finally(() => {\n      this.props.onCopyEnd();\n    });\n  }\n\n  renderNotWrapped() {\n    return (\n      ___EmotionJSX(Tooltip, {\n        id: \"copy-to-clipboard-tooltip\",\n        placement: \"top\",\n        style: { cursor: 'pointer' },\n        title: this.props.tooltipText,\n        trigger: ['hover'] },\n\n      this.getDecoratedCopyNode()));\n\n\n  }\n\n  renderLink() {\n    return (\n      ___EmotionJSX(\"span\", { css: _ref },\n      this.props.shouldShowText && this.props.text &&\n      ___EmotionJSX(\"span\", { className: \"m-r-5\" },\n      this.props.text),\n\n\n      ___EmotionJSX(Tooltip, {\n        id: \"copy-to-clipboard-tooltip\",\n        placement: \"top\",\n        title: this.props.tooltipText,\n        trigger: ['hover'] },\n\n      this.getDecoratedCopyNode())));\n\n\n\n  }\n\n  render() {\n    const { wrapped } = this.props;\n    if (!wrapped) {\n      return this.renderNotWrapped();\n    }\n    return this.renderLink();\n  }}\n\n\nexport default withToasts(CopyToClipboard);\n\nCopyToClipboard.propTypes = propTypes;\nCopyToClipboard.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}