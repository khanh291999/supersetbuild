{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, css } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n\n  h4 {\n    font-weight: 600;\n  }\n`;\nexport const StyledTopSection = styled.div`\n  padding: ${({ theme }) => `${theme.gridUnit * 3}px ${theme.gridUnit * 4}px ${theme.gridUnit * 2}px`};\n  label {\n    font-size: ${({ theme }) => theme.typography.sizes.s - 1}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\nexport const StyledBottomSection = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) => `${theme.gridUnit * 4}px ${theme.gridUnit * 4}px ${theme.gridUnit * 6}px`};\n  .ant-select {\n    width: 100%;\n  }\n  .control-label {\n    font-size: ${({ theme }) => theme.typography.sizes.s - 1}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\nexport const StyledIconWrapper = styled.span`\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n`;\nexport const StyledScheduleTitle = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 7}px;\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\nexport const StyledCronPicker = styled(CronPicker)`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n`;\nexport const StyledCronError = styled.p`\n  color: ${({ theme }) => theme.colors.error.base};\n`;\nexport const noBottomMargin = css`\n  margin-bottom: 0;\n`;\nexport const StyledFooterButton = styled(Button)`\n  width: ${({ theme }) => theme.gridUnit * 40}px;\n`;\nexport const TimezoneHeaderStyle = (theme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\nexport const SectionHeaderStyle = (theme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n  font-weight: ${theme.typography.weights.bold};\n`;\nexport const StyledMessageContentTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 8}px 0\n    ${({ theme }) => theme.gridUnit * 4}px;\n`;\nexport const StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 8}px;\n`;\nexport const StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 0.5}px;\n`;","map":null,"metadata":{},"sourceType":"module"}