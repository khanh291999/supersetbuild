{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Alert as AntdAlert } from 'src/common/components';\nimport { useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function Alert(props) {\n  const { type = 'info', description, showIcon = true, closable = true, roomBelow = false, children } = props;\n  const theme = useTheme();\n  const { colors, typography, gridUnit } = theme;\n  const { alert, error, info, success } = colors;\n  let baseColor = info;\n  let AlertIcon = Icons.InfoSolid;\n  if (type === 'error') {\n    baseColor = error;\n    AlertIcon = Icons.ErrorSolid;\n  } else\n  if (type === 'warning') {\n    baseColor = alert;\n    AlertIcon = Icons.AlertSolid;\n  } else\n  if (type === 'success') {\n    baseColor = success;\n    AlertIcon = Icons.CircleCheckSolid;\n  }\n  return ___EmotionJSX(AntdAlert, _extends({ role: \"alert\", showIcon: showIcon, icon: ___EmotionJSX(AlertIcon, { \"aria-label\": `${type} icon` }), closeText: closable && ___EmotionJSX(Icons.XSmall, { \"aria-label\": \"close icon\" }), css: /*#__PURE__*/_css({\n      marginBottom: roomBelow ? gridUnit * 4 : 0,\n      padding: `${gridUnit * 2}px ${gridUnit * 3}px`,\n      alignItems: 'flex-start',\n      border: 0,\n      backgroundColor: baseColor.light2,\n      '& .ant-alert-icon': {\n        marginRight: gridUnit * 2 },\n\n      '& .ant-alert-message': {\n        color: baseColor.dark2,\n        fontSize: typography.sizes.m,\n        fontWeight: description ?\n        typography.weights.bold :\n        typography.weights.normal },\n\n      '& .ant-alert-description': {\n        color: baseColor.dark2,\n        fontSize: typography.sizes.m } }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Alert;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9BbGVydC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUN3SyIsImZpbGUiOiIvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvQWxlcnQvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFsZXJ0IGFzIEFudGRBbGVydCwgfSBmcm9tICdzcmMvY29tbW9uL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWxlcnQocHJvcHMpIHtcbiAgICBjb25zdCB7IHR5cGUgPSAnaW5mbycsIGRlc2NyaXB0aW9uLCBzaG93SWNvbiA9IHRydWUsIGNsb3NhYmxlID0gdHJ1ZSwgcm9vbUJlbG93ID0gZmFsc2UsIGNoaWxkcmVuLCB9ID0gcHJvcHM7XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IHsgY29sb3JzLCB0eXBvZ3JhcGh5LCBncmlkVW5pdCB9ID0gdGhlbWU7XG4gICAgY29uc3QgeyBhbGVydCwgZXJyb3IsIGluZm8sIHN1Y2Nlc3MgfSA9IGNvbG9ycztcbiAgICBsZXQgYmFzZUNvbG9yID0gaW5mbztcbiAgICBsZXQgQWxlcnRJY29uID0gSWNvbnMuSW5mb1NvbGlkO1xuICAgIGlmICh0eXBlID09PSAnZXJyb3InKSB7XG4gICAgICAgIGJhc2VDb2xvciA9IGVycm9yO1xuICAgICAgICBBbGVydEljb24gPSBJY29ucy5FcnJvclNvbGlkO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09PSAnd2FybmluZycpIHtcbiAgICAgICAgYmFzZUNvbG9yID0gYWxlcnQ7XG4gICAgICAgIEFsZXJ0SWNvbiA9IEljb25zLkFsZXJ0U29saWQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICdzdWNjZXNzJykge1xuICAgICAgICBiYXNlQ29sb3IgPSBzdWNjZXNzO1xuICAgICAgICBBbGVydEljb24gPSBJY29ucy5DaXJjbGVDaGVja1NvbGlkO1xuICAgIH1cbiAgICByZXR1cm4gKDxBbnRkQWxlcnQgcm9sZT1cImFsZXJ0XCIgc2hvd0ljb249e3Nob3dJY29ufSBpY29uPXs8QWxlcnRJY29uIGFyaWEtbGFiZWw9e2Ake3R5cGV9IGljb25gfS8+fSBjbG9zZVRleHQ9e2Nsb3NhYmxlICYmIDxJY29ucy5YU21hbGwgYXJpYS1sYWJlbD1cImNsb3NlIGljb25cIi8+fSBjc3M9e3tcbiAgICAgICAgICAgIG1hcmdpbkJvdHRvbTogcm9vbUJlbG93ID8gZ3JpZFVuaXQgKiA0IDogMCxcbiAgICAgICAgICAgIHBhZGRpbmc6IGAke2dyaWRVbml0ICogMn1weCAke2dyaWRVbml0ICogM31weGAsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnZmxleC1zdGFydCcsXG4gICAgICAgICAgICBib3JkZXI6IDAsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJhc2VDb2xvci5saWdodDIsXG4gICAgICAgICAgICAnJiAuYW50LWFsZXJ0LWljb24nOiB7XG4gICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IGdyaWRVbml0ICogMixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnJiAuYW50LWFsZXJ0LW1lc3NhZ2UnOiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGJhc2VDb2xvci5kYXJrMixcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogdHlwb2dyYXBoeS5zaXplcy5tLFxuICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGRlc2NyaXB0aW9uXG4gICAgICAgICAgICAgICAgICAgID8gdHlwb2dyYXBoeS53ZWlnaHRzLmJvbGRcbiAgICAgICAgICAgICAgICAgICAgOiB0eXBvZ3JhcGh5LndlaWdodHMubm9ybWFsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcmIC5hbnQtYWxlcnQtZGVzY3JpcHRpb24nOiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGJhc2VDb2xvci5kYXJrMixcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogdHlwb2dyYXBoeS5zaXplcy5tLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfX0gey4uLnByb3BzfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0FudGRBbGVydD4pO1xufVxuIl19 */\") },\n\n  props),\n  children);\n\n}","map":null,"metadata":{},"sourceType":"module"}