{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { css } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormItem, FormLabel } from 'src/components/Form';\nimport './crud.less';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst formItemInlineCss = css`\n  .ant-form-item-control-input-content {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nexport default function Field({ fieldKey, value, label, description, control, onChange, compact, inline }) {\n  const onControlChange = useCallback((newValue) => {\n    onChange(fieldKey, newValue);\n  }, [onChange, fieldKey]);\n  const hookedControl = /*#__PURE__*/React.cloneElement(control, {\n    value,\n    onChange: onControlChange });\n\n  return ___EmotionJSX(FormItem, { label: ___EmotionJSX(FormLabel, { className: \"m-r-5\" },\n    label || fieldKey,\n    compact && description && ___EmotionJSX(Tooltip, { id: \"field-descr\", placement: \"right\", title: description },\n    ___EmotionJSX(\"i\", { className: \"fa fa-info-circle m-l-5\" }))),\n\n    css: inline && formItemInlineCss },\n  hookedControl,\n  !compact && description && ___EmotionJSX(\"div\", { css: (theme) => ({\n      color: theme.colors.grayscale.base,\n      [inline ? 'marginLeft' : 'marginTop']: theme.gridUnit }) },\n\n  description));\n\n\n}","map":null,"metadata":{},"sourceType":"module"}