{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport querystring from 'query-string';\nconst reservedQueryParams = new Set(['standalone', 'edit']);\n/**\n * Returns the url params that are used to customize queries\n */\nexport default function extractUrlParams(urlParamType) {\n  const queryParams = querystring.parse(window.location.search);\n  return Object.entries(queryParams).reduce((acc, [key, value]) => {\n    if (urlParamType === 'regular' && reservedQueryParams.has(key) ||\n    urlParamType === 'reserved' && !reservedQueryParams.has(key))\n    return acc;\n    // if multiple url params share the same key (?foo=bar&foo=baz), they will appear as an array.\n    // Only one value can be used for a given query param, so we just take the first one.\n    if (Array.isArray(value)) {\n      return {\n        ...acc,\n        [key]: value[0] };\n\n    }\n    return { ...acc, [key]: value };\n  }, {});\n}","map":null,"metadata":{},"sourceType":"module"}