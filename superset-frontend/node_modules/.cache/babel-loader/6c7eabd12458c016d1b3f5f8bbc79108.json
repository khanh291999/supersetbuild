{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import \"core-js/modules/es.string.replace.js\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport AntdIcon from '@ant-design/icons';\nimport { styled } from '@superset-ui/core';\nimport TransparentIcon from 'src/assets/images/icons/transparent.svg';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst AntdIconComponent = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconColor,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconSize, viewBox, ...rest }) => ___EmotionJSX(AntdIcon, _extends({ viewBox: viewBox || '0 0 24 24' }, rest));\nexport const StyledIcon = styled(AntdIconComponent)`\n  ${({ iconColor }) => iconColor && `color: ${iconColor};`};\n  font-size: ${({ iconSize, theme }) => iconSize ?\n`${theme.typography.sizes[iconSize] || theme.typography.sizes.m}px` :\n'24px'};\n`;\nexport const Icon = (props) => {\n  const { fileName, ...iconProps } = props;\n  const [, setLoaded] = useState(false);\n  const ImportedSVG = useRef();\n  const name = fileName.replace('_', '-');\n  useEffect(() => {\n    let cancelled = false;\n    async function importIcon() {\n      ImportedSVG.current = (await import(`!!@svgr/webpack?-svgo,+titleProp,+ref!src/assets/images/icons/${fileName}.svg`)).default;\n      if (!cancelled) {\n        setLoaded(true);\n      }\n    }\n    importIcon();\n    return () => {\n      cancelled = true;\n    };\n  }, [fileName, ImportedSVG]);\n  return ___EmotionJSX(StyledIcon, _extends({ component: ImportedSVG.current || TransparentIcon, \"aria-label\": name }, iconProps));\n};\nexport default Icon;","map":null,"metadata":{},"sourceType":"module"}