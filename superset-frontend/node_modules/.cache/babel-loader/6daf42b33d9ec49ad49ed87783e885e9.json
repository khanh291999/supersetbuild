{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport airbnb from '@superset-ui/core/lib/color/colorSchemes/categorical/airbnb';\nimport categoricalD3 from '@superset-ui/core/lib/color/colorSchemes/categorical/d3';\nimport echarts from '@superset-ui/core/lib/color/colorSchemes/categorical/echarts';\nimport google from '@superset-ui/core/lib/color/colorSchemes/categorical/google';\nimport lyft from '@superset-ui/core/lib/color/colorSchemes/categorical/lyft';\nimport preset from '@superset-ui/core/lib/color/colorSchemes/categorical/preset';\nimport sequentialCommon from '@superset-ui/core/lib/color/colorSchemes/sequential/common';\nimport sequentialD3 from '@superset-ui/core/lib/color/colorSchemes/sequential/d3';\nimport { getCategoricalSchemeRegistry, getSequentialSchemeRegistry } from '@superset-ui/core';\nimport superset from '@superset-ui/core/lib/color/colorSchemes/categorical/superset';\nfunction registerColorSchemes(registry, colorSchemes, standardDefaultKey) {var _colorSchemes$find;\n  colorSchemes.forEach((scheme) => {\n    registry.registerValue(scheme.id, scheme);\n  });\n  const defaultKey = ((_colorSchemes$find = colorSchemes.find((scheme) => scheme.isDefault)) == null ? void 0 : _colorSchemes$find.id) || standardDefaultKey;\n  registry.setDefaultKey(defaultKey);\n}\nexport default function setupColors(extraCategoricalColorSchemes = [], extraSequentialColorSchemes = []) {\n  registerColorSchemes(\n  // @ts-ignore\n  getCategoricalSchemeRegistry(), [\n  ...superset,\n  ...airbnb,\n  ...categoricalD3,\n  ...echarts,\n  ...google,\n  ...lyft,\n  ...preset,\n  ...extraCategoricalColorSchemes],\n  'supersetColors');\n  registerColorSchemes(\n  // @ts-ignore\n  getSequentialSchemeRegistry(), [...sequentialCommon, ...sequentialD3, ...extraSequentialColorSchemes], 'superset_seq_1');\n}","map":null,"metadata":{},"sourceType":"module"}