{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport moment from 'moment';\nimport { styled } from '@superset-ui/core';\nimport { RangePicker } from 'src/components/DatePicker';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst RangeFilterContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 360px;\n`;\nexport default function DateRangeFilter({ Header, initialValue, onSubmit }) {\n  const [value, setValue] = useState(initialValue != null ? initialValue : null);\n  const momentValue = useMemo(() => {\n    if (!value || Array.isArray(value) && !value.length)\n    return null;\n    return [moment(value[0]), moment(value[1])];\n  }, [value]);\n  return ___EmotionJSX(RangeFilterContainer, null,\n  ___EmotionJSX(FormLabel, null, Header),\n  ___EmotionJSX(RangePicker, { showTime: true, value: momentValue, onChange: (momentRange) => {var _momentRange$0$valueO, _momentRange$, _momentRange$1$valueO, _momentRange$2;\n      if (!momentRange) {\n        setValue(null);\n        onSubmit([]);\n        return;\n      }\n      const changeValue = [(_momentRange$0$valueO = (_momentRange$ =\n      momentRange[0]) == null ? void 0 : _momentRange$.valueOf()) != null ? _momentRange$0$valueO : 0, (_momentRange$1$valueO = (_momentRange$2 =\n      momentRange[1]) == null ? void 0 : _momentRange$2.valueOf()) != null ? _momentRange$1$valueO : 0];\n\n      setValue(changeValue);\n      onSubmit(changeValue);\n    } }));\n\n}","map":null,"metadata":{},"sourceType":"module"}