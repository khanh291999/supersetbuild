{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FormattingPopoverContent } from './FormattingPopoverContent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FormattingPopover = ({ title, columns, onChange, config, children, ...props }) => {\n  const [visible, setVisible] = useState(false);\n  const handleSave = useCallback((newConfig) => {\n    setVisible(false);\n    onChange(newConfig);\n  }, [onChange]);\n  return ___EmotionJSX(Popover, _extends({ title: title, content: ___EmotionJSX(FormattingPopoverContent, { onChange: handleSave, config: config, columns: columns }), visible: visible, onVisibleChange: setVisible, trigger: ['click'], overlayStyle: { width: '450px' } }, props),\n  children);\n\n};","map":null,"metadata":{},"sourceType":"module"}