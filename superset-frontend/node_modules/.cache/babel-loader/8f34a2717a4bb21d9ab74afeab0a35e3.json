{"ast":null,"code":"import _findLastIndex from \"lodash/findLastIndex\";import { useEffect } from 'react';\n\nimport { usePrevious } from '../../../../common/hooks/usePrevious';\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const useRemoveCurrentFilter = (removedFilters, currentFilterId, filterIds, setCurrentFilterId) => {\n  useEffect(() => {\n    // if the currently viewed filter is fully removed, change to another tab\n    const currentFilterRemoved = removedFilters[currentFilterId];\n    if (currentFilterRemoved && !currentFilterRemoved.isPending) {\n      const nextFilterIndex = _findLastIndex(filterIds, (id) => !removedFilters[id] && id !== currentFilterId);\n      if (nextFilterIndex !== -1)\n      setCurrentFilterId(filterIds[nextFilterIndex]);\n    }\n  }, [currentFilterId, removedFilters, filterIds]);\n};\nexport const useOpenModal = (isOpen, addFilter, createNewOnOpen) => {\n  const wasOpen = usePrevious(isOpen);\n  // if this is a \"create\" modal rather than an \"edit\" modal,\n  // add a filter on modal open\n  useEffect(() => {\n    if (createNewOnOpen && isOpen && !wasOpen) {\n      addFilter();\n    }\n  }, [createNewOnOpen, isOpen, wasOpen, addFilter]);\n};","map":null,"metadata":{},"sourceType":"module"}