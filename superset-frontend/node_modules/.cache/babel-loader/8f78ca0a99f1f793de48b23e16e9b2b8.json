{"ast":null,"code":"import { css as _css } from \"@emotion/react\";function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t, css, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Switch } from 'src/components/Switch';\nimport { Menu, NoAnimationDropdown } from 'src/common/components';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport DeleteModal from 'src/components/DeleteModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst deleteColor = (theme) => css`\n  color: ${theme.colors.error.base};\n`;var _ref = process.env.NODE_ENV === \"production\" ? { name: \"833hqy\", styles: \"width:200px\" } : { name: \"1ihddg7-menu\", styles: \"width:200px;label:menu;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9SZXBvcnRNb2RhbC9IZWFkZXJSZXBvcnRBY3Rpb25zRHJvcGRvd24vaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDaUQiLCJmaWxlIjoiL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9jb21wb25lbnRzL1JlcG9ydE1vZGFsL0hlYWRlclJlcG9ydEFjdGlvbnNEcm9wZG93bi9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHQsIGNzcywgdXNlVGhlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvU3dpdGNoJztcbmltcG9ydCB7IE1lbnUsIE5vQW5pbWF0aW9uRHJvcGRvd24gfSBmcm9tICdzcmMvY29tbW9uL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgaXNGZWF0dXJlRW5hYmxlZCwgRmVhdHVyZUZsYWcgfSBmcm9tICdzcmMvZmVhdHVyZUZsYWdzJztcbmltcG9ydCBEZWxldGVNb2RhbCBmcm9tICdzcmMvY29tcG9uZW50cy9EZWxldGVNb2RhbCc7XG5jb25zdCBkZWxldGVDb2xvciA9ICh0aGVtZSkgPT4gY3NzIGBcbiAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmVycm9yLmJhc2V9O1xuYDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlclJlcG9ydEFjdGlvbnNEcm9wRG93bih7IHNob3dSZXBvcnRNb2RhbCwgdG9nZ2xlQWN0aXZlLCBkZWxldGVBY3RpdmVSZXBvcnQsIH0pIHtcbiAgICBjb25zdCByZXBvcnRzID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUucmVwb3J0cyk7XG4gICAgY29uc3QgcmVwb3J0c0lkcyA9IE9iamVjdC5rZXlzKHJlcG9ydHMpO1xuICAgIGNvbnN0IHJlcG9ydCA9IHJlcG9ydHNbcmVwb3J0c0lkc1swXV07XG4gICAgY29uc3QgW2N1cnJlbnRSZXBvcnREZWxldGluZywgc2V0Q3VycmVudFJlcG9ydERlbGV0aW5nLF0gPSB1c2VTdGF0ZShudWxsKTtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgdG9nZ2xlQWN0aXZlS2V5ID0gYXN5bmMgKGRhdGEsIGNoZWNrZWQpID0+IHtcbiAgICAgICAgaWYgKGRhdGE/LmlkKSB7XG4gICAgICAgICAgICB0b2dnbGVBY3RpdmUoZGF0YSwgY2hlY2tlZCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGhhbmRsZVJlcG9ydERlbGV0ZSA9IChyZXBvcnQpID0+IHtcbiAgICAgICAgZGVsZXRlQWN0aXZlUmVwb3J0KHJlcG9ydCk7XG4gICAgICAgIHNldEN1cnJlbnRSZXBvcnREZWxldGluZyhudWxsKTtcbiAgICB9O1xuICAgIGNvbnN0IG1lbnUgPSAoKSA9PiAoPE1lbnUgc2VsZWN0YWJsZT17ZmFsc2V9IGNzcz17eyB3aWR0aDogJzIwMHB4JyB9fT5cbiAgICAgIDxNZW51Lkl0ZW0+XG4gICAgICAgIHt0KCdFbWFpbCByZXBvcnRzIGFjdGl2ZScpfVxuICAgICAgICA8U3dpdGNoIGRhdGEtdGVzdD1cInRvZ2dsZS1hY3RpdmVcIiBjaGVja2VkPXtyZXBvcnQ/LmFjdGl2ZX0gb25DbGljaz17KGNoZWNrZWQpID0+IHRvZ2dsZUFjdGl2ZUtleShyZXBvcnQsIGNoZWNrZWQpfSBzaXplPVwic21hbGxcIiBjc3M9e3sgbWFyZ2luTGVmdDogdGhlbWUuZ3JpZFVuaXQgKiAyIH19Lz5cbiAgICAgIDwvTWVudS5JdGVtPlxuICAgICAgPE1lbnUuSXRlbSBvbkNsaWNrPXtzaG93UmVwb3J0TW9kYWx9Pnt0KCdFZGl0IGVtYWlsIHJlcG9ydCcpfTwvTWVudS5JdGVtPlxuICAgICAgPE1lbnUuSXRlbSBvbkNsaWNrPXsoKSA9PiBzZXRDdXJyZW50UmVwb3J0RGVsZXRpbmcocmVwb3J0KX0gY3NzPXtkZWxldGVDb2xvcn0+XG4gICAgICAgIHt0KCdEZWxldGUgZW1haWwgcmVwb3J0Jyl9XG4gICAgICA8L01lbnUuSXRlbT5cbiAgICA8L01lbnU+KTtcbiAgICByZXR1cm4gaXNGZWF0dXJlRW5hYmxlZChGZWF0dXJlRmxhZy5BTEVSVF9SRVBPUlRTKSA/ICg8PlxuICAgICAgPE5vQW5pbWF0aW9uRHJvcGRvd24gXG4gICAgLy8gcmVmPXtyZWZ9XG4gICAgb3ZlcmxheT17bWVudSgpfSB0cmlnZ2VyPXtbJ2NsaWNrJ119IGdldFBvcHVwQ29udGFpbmVyPXsodHJpZ2dlck5vZGUpID0+IHRyaWdnZXJOb2RlLmNsb3Nlc3QoJy5hY3Rpb24tYnV0dG9uJyl9PlxuICAgICAgICA8c3BhbiByb2xlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYWN0aW9uLWJ1dHRvblwiIHRhYkluZGV4PXswfT5cbiAgICAgICAgICA8SWNvbnMuQ2FsZW5kYXIgLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9Ob0FuaW1hdGlvbkRyb3Bkb3duPlxuICAgICAge2N1cnJlbnRSZXBvcnREZWxldGluZyAmJiAoPERlbGV0ZU1vZGFsIGRlc2NyaXB0aW9uPXt0KCdUaGlzIGFjdGlvbiB3aWxsIHBlcm1hbmVudGx5IGRlbGV0ZSAlcy4nLCBjdXJyZW50UmVwb3J0RGVsZXRpbmcubmFtZSl9IG9uQ29uZmlybT17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UmVwb3J0RGVsZXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlUmVwb3J0RGVsZXRlKGN1cnJlbnRSZXBvcnREZWxldGluZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX0gb25IaWRlPXsoKSA9PiBzZXRDdXJyZW50UmVwb3J0RGVsZXRpbmcobnVsbCl9IG9wZW4gdGl0bGU9e3QoJ0RlbGV0ZSBSZXBvcnQ/Jyl9Lz4pfVxuICAgIDwvPikgOiBudWxsO1xufVxuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport default function HeaderReportActionsDropDown({ showReportModal, toggleActive, deleteActiveReport }) {\n  const reports = useSelector((state) => state.reports);\n  const reportsIds = Object.keys(reports);\n  const report = reports[reportsIds[0]];\n  const [currentReportDeleting, setCurrentReportDeleting] = useState(null);\n  const theme = useTheme();\n  const toggleActiveKey = async (data, checked) => {\n    if (data != null && data.id) {\n      toggleActive(data, checked);\n    }\n  };\n  const handleReportDelete = (report) => {\n    deleteActiveReport(report);\n    setCurrentReportDeleting(null);\n  };\n  const menu = () => ___EmotionJSX(Menu, { selectable: false, css: _ref },\n  ___EmotionJSX(Menu.Item, null,\n  t('Email reports active'),\n  ___EmotionJSX(Switch, { checked: report == null ? void 0 : report.active, onClick: (checked) => toggleActiveKey(report, checked), size: \"small\", css: /*#__PURE__*/_css({ marginLeft: theme.gridUnit * 2 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:menu;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9SZXBvcnRNb2RhbC9IZWFkZXJSZXBvcnRBY3Rpb25zRHJvcGRvd24vaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStDd0kiLCJmaWxlIjoiL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9jb21wb25lbnRzL1JlcG9ydE1vZGFsL0hlYWRlclJlcG9ydEFjdGlvbnNEcm9wZG93bi9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHQsIGNzcywgdXNlVGhlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvU3dpdGNoJztcbmltcG9ydCB7IE1lbnUsIE5vQW5pbWF0aW9uRHJvcGRvd24gfSBmcm9tICdzcmMvY29tbW9uL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgaXNGZWF0dXJlRW5hYmxlZCwgRmVhdHVyZUZsYWcgfSBmcm9tICdzcmMvZmVhdHVyZUZsYWdzJztcbmltcG9ydCBEZWxldGVNb2RhbCBmcm9tICdzcmMvY29tcG9uZW50cy9EZWxldGVNb2RhbCc7XG5jb25zdCBkZWxldGVDb2xvciA9ICh0aGVtZSkgPT4gY3NzIGBcbiAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmVycm9yLmJhc2V9O1xuYDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlclJlcG9ydEFjdGlvbnNEcm9wRG93bih7IHNob3dSZXBvcnRNb2RhbCwgdG9nZ2xlQWN0aXZlLCBkZWxldGVBY3RpdmVSZXBvcnQsIH0pIHtcbiAgICBjb25zdCByZXBvcnRzID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUucmVwb3J0cyk7XG4gICAgY29uc3QgcmVwb3J0c0lkcyA9IE9iamVjdC5rZXlzKHJlcG9ydHMpO1xuICAgIGNvbnN0IHJlcG9ydCA9IHJlcG9ydHNbcmVwb3J0c0lkc1swXV07XG4gICAgY29uc3QgW2N1cnJlbnRSZXBvcnREZWxldGluZywgc2V0Q3VycmVudFJlcG9ydERlbGV0aW5nLF0gPSB1c2VTdGF0ZShudWxsKTtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgdG9nZ2xlQWN0aXZlS2V5ID0gYXN5bmMgKGRhdGEsIGNoZWNrZWQpID0+IHtcbiAgICAgICAgaWYgKGRhdGE/LmlkKSB7XG4gICAgICAgICAgICB0b2dnbGVBY3RpdmUoZGF0YSwgY2hlY2tlZCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGhhbmRsZVJlcG9ydERlbGV0ZSA9IChyZXBvcnQpID0+IHtcbiAgICAgICAgZGVsZXRlQWN0aXZlUmVwb3J0KHJlcG9ydCk7XG4gICAgICAgIHNldEN1cnJlbnRSZXBvcnREZWxldGluZyhudWxsKTtcbiAgICB9O1xuICAgIGNvbnN0IG1lbnUgPSAoKSA9PiAoPE1lbnUgc2VsZWN0YWJsZT17ZmFsc2V9IGNzcz17eyB3aWR0aDogJzIwMHB4JyB9fT5cbiAgICAgIDxNZW51Lkl0ZW0+XG4gICAgICAgIHt0KCdFbWFpbCByZXBvcnRzIGFjdGl2ZScpfVxuICAgICAgICA8U3dpdGNoIGRhdGEtdGVzdD1cInRvZ2dsZS1hY3RpdmVcIiBjaGVja2VkPXtyZXBvcnQ/LmFjdGl2ZX0gb25DbGljaz17KGNoZWNrZWQpID0+IHRvZ2dsZUFjdGl2ZUtleShyZXBvcnQsIGNoZWNrZWQpfSBzaXplPVwic21hbGxcIiBjc3M9e3sgbWFyZ2luTGVmdDogdGhlbWUuZ3JpZFVuaXQgKiAyIH19Lz5cbiAgICAgIDwvTWVudS5JdGVtPlxuICAgICAgPE1lbnUuSXRlbSBvbkNsaWNrPXtzaG93UmVwb3J0TW9kYWx9Pnt0KCdFZGl0IGVtYWlsIHJlcG9ydCcpfTwvTWVudS5JdGVtPlxuICAgICAgPE1lbnUuSXRlbSBvbkNsaWNrPXsoKSA9PiBzZXRDdXJyZW50UmVwb3J0RGVsZXRpbmcocmVwb3J0KX0gY3NzPXtkZWxldGVDb2xvcn0+XG4gICAgICAgIHt0KCdEZWxldGUgZW1haWwgcmVwb3J0Jyl9XG4gICAgICA8L01lbnUuSXRlbT5cbiAgICA8L01lbnU+KTtcbiAgICByZXR1cm4gaXNGZWF0dXJlRW5hYmxlZChGZWF0dXJlRmxhZy5BTEVSVF9SRVBPUlRTKSA/ICg8PlxuICAgICAgPE5vQW5pbWF0aW9uRHJvcGRvd24gXG4gICAgLy8gcmVmPXtyZWZ9XG4gICAgb3ZlcmxheT17bWVudSgpfSB0cmlnZ2VyPXtbJ2NsaWNrJ119IGdldFBvcHVwQ29udGFpbmVyPXsodHJpZ2dlck5vZGUpID0+IHRyaWdnZXJOb2RlLmNsb3Nlc3QoJy5hY3Rpb24tYnV0dG9uJyl9PlxuICAgICAgICA8c3BhbiByb2xlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYWN0aW9uLWJ1dHRvblwiIHRhYkluZGV4PXswfT5cbiAgICAgICAgICA8SWNvbnMuQ2FsZW5kYXIgLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9Ob0FuaW1hdGlvbkRyb3Bkb3duPlxuICAgICAge2N1cnJlbnRSZXBvcnREZWxldGluZyAmJiAoPERlbGV0ZU1vZGFsIGRlc2NyaXB0aW9uPXt0KCdUaGlzIGFjdGlvbiB3aWxsIHBlcm1hbmVudGx5IGRlbGV0ZSAlcy4nLCBjdXJyZW50UmVwb3J0RGVsZXRpbmcubmFtZSl9IG9uQ29uZmlybT17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UmVwb3J0RGVsZXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlUmVwb3J0RGVsZXRlKGN1cnJlbnRSZXBvcnREZWxldGluZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX0gb25IaWRlPXsoKSA9PiBzZXRDdXJyZW50UmVwb3J0RGVsZXRpbmcobnVsbCl9IG9wZW4gdGl0bGU9e3QoJ0RlbGV0ZSBSZXBvcnQ/Jyl9Lz4pfVxuICAgIDwvPikgOiBudWxsO1xufVxuIl19 */\") })),\n\n  ___EmotionJSX(Menu.Item, { onClick: showReportModal }, t('Edit email report')),\n  ___EmotionJSX(Menu.Item, { onClick: () => setCurrentReportDeleting(report), css: deleteColor },\n  t('Delete email report')));\n\n\n  return isFeatureEnabled(FeatureFlag.ALERT_REPORTS) ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(NoAnimationDropdown\n  // ref={ref}\n  , { overlay: menu(), trigger: ['click'], getPopupContainer: (triggerNode) => triggerNode.closest('.action-button') },\n  ___EmotionJSX(\"span\", { role: \"button\", className: \"action-button\", tabIndex: 0 },\n  ___EmotionJSX(Icons.Calendar, null))),\n\n\n  currentReportDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete %s.', currentReportDeleting.name), onConfirm: () => {\n      if (currentReportDeleting) {\n        handleReportDelete(currentReportDeleting);\n      }\n    }, onHide: () => setCurrentReportDeleting(null), open: true, title: t('Delete Report?') })) :\n  null;\n}","map":null,"metadata":{},"sourceType":"module"}