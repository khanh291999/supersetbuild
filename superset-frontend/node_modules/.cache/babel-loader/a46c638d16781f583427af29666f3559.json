{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CardContainer = styled.div`\n  ${({ theme, showThumbnails }) => `\n    display: grid;\n    grid-gap: ${theme.gridUnit * 12}px ${theme.gridUnit * 4}px;\n    grid-template-columns: repeat(auto-fit, 300px);\n    margin-top: ${theme.gridUnit * -6}px;\n    padding: ${showThumbnails ?\n`${theme.gridUnit * 8 + 3}px ${theme.gridUnit * 9}px` :\n`${theme.gridUnit * 8 + 1}px ${theme.gridUnit * 9}px`};\n  `}\n`;\nconst CardWrapper = styled.div`\n  border: 2px solid transparent;\n  &.card-selected {\n    border: 2px solid ${({ theme }) => theme.colors.primary.base};\n  }\n  &.bulk-select {\n    cursor: pointer;\n  }\n`;\nexport default function CardCollection({ bulkSelectEnabled, loading, prepareRow, renderCard, rows, showThumbnails }) {\n  function handleClick(event, toggleRowSelected) {\n    if (bulkSelectEnabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      toggleRowSelected();\n    }\n  }\n  if (!renderCard)\n  return null;\n  return ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails },\n  loading &&\n  rows.length === 0 &&\n  [...new Array(25)].map((e, i) => ___EmotionJSX(\"div\", { key: i }, renderCard({ loading }))),\n  rows.length > 0 &&\n  rows.map((row) => {\n    if (!renderCard)\n    return null;\n    prepareRow(row);\n    return ___EmotionJSX(CardWrapper, { className: cx({\n        'card-selected': bulkSelectEnabled && row.isSelected,\n        'bulk-select': bulkSelectEnabled }),\n      key: row.id, onClick: (e) => handleClick(e, row.toggleRowSelected), role: \"none\" },\n    renderCard({ ...row.original, loading }));\n\n  }));\n\n}","map":null,"metadata":{},"sourceType":"module"}