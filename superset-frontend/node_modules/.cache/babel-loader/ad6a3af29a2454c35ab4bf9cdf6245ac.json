{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Modal from 'src/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/components/MessageToasts/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\nconst DatasetModal = ({ addDangerToast, addSuccessToast, onDatasetAdd, onHide, show }) => {\n  const [currentDatabase, setCurrentDatabase] = useState();\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [disableSave, setDisableSave] = useState(true);\n  const { createResource } = useSingleViewResource('dataset', t('dataset'), addDangerToast);\n  useEffect(() => {\n    setDisableSave(currentDatabase === undefined || currentTableName === '');\n  }, [currentTableName, currentDatabase]);\n  const onDbChange = (db) => {\n    setCurrentDatabase(db);\n  };\n  const onSchemaChange = (schema) => {\n    setSchema(schema);\n  };\n  const onTableChange = (tableName) => {\n    setTableName(tableName);\n  };\n  const clearModal = () => {\n    setSchema('');\n    setTableName('');\n    setCurrentDatabase(undefined);\n    setDisableSave(true);\n  };\n  const hide = () => {\n    clearModal();\n    onHide();\n  };\n  const onSave = () => {\n    if (currentDatabase === undefined) {\n      return;\n    }\n    const data = {\n      database: currentDatabase.id,\n      ...(currentSchema ? { schema: currentSchema } : {}),\n      table_name: currentTableName };\n\n    createResource(data).then((response) => {\n      if (!response) {\n        return;\n      }\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: response.id, ...response });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      hide();\n    });\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: t('Add'), show: show, title: t('Add dataset') },\n  ___EmotionJSX(TableSelectorContainer, null,\n  ___EmotionJSX(TableSelector, { clearable: false, formMode: true, database: currentDatabase, schema: currentSchema, tableName: currentTableName, onDbChange: onDbChange, onSchemaChange: onSchemaChange, onTableChange: onTableChange, handleError: addDangerToast })));\n\n\n};\nexport default withToasts(DatasetModal);","map":null,"metadata":{},"sourceType":"module"}