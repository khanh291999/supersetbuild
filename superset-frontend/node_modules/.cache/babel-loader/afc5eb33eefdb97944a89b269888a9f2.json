{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD = 'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART = 'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_OMNIBAR_TRIGGERED = 'omnibar_triggered';\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new Set([\nLOG_ACTIONS_LOAD_CHART,\nLOG_ACTIONS_RENDER_CHART,\nLOG_ACTIONS_HIDE_BROWSER_TAB]);\n\nexport const LOG_EVENT_TYPE_USER = new Set([\nLOG_ACTIONS_MOUNT_DASHBOARD,\nLOG_ACTIONS_SELECT_DASHBOARD_TAB,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_OMNIBAR_TRIGGERED,\nLOG_ACTIONS_MOUNT_EXPLORER]);\n\nexport const Logger = {\n  timeOriginOffset: 0,\n  markTimeOrigin() {\n    this.timeOriginOffset = window.performance.now();\n  },\n  // note that this returns ms since last navigation, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now() - this.timeOriginOffset);\n  } };","map":null,"metadata":{},"sourceType":"module"}