{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _container$getAttribu; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense, useEffect } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { QueryParamProvider } from 'use-query-params';\nimport { initFeatureFlags } from 'src/featureFlags';\nimport { ThemeProvider } from '@superset-ui/core';\nimport { DynamicPluginProvider } from 'src/components/DynamicPlugins';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport Loading from 'src/components/Loading';\nimport Menu from 'src/components/Menu/Menu';\nimport FlashProvider from 'src/components/FlashProvider';\nimport { theme } from 'src/preamble';\nimport ToastContainer from 'src/components/MessageToasts/ToastContainer';\nimport setupApp from 'src/setup/setupApp';\nimport { routes, isFrontendRoute } from 'src/views/routes';\nimport { Logger } from 'src/logger/LogUtils';\nimport { store } from './store';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nsetupApp();\nconst container = document.getElementById('app');\nconst bootstrap = JSON.parse((_container$getAttribu = container == null ? void 0 : container.getAttribute('data-bootstrap')) != null ? _container$getAttribu : '{}');\nconst user = { ...bootstrap.user };\nconst menu = { ...bootstrap.common.menu_data };\nconst common = { ...bootstrap.common };\nlet lastLocationPathname;\ninitFeatureFlags(bootstrap.common.feature_flags);\nconst RootContextProviders = ({ children }) => {\n  const location = useLocation();\n  useEffect(() => {\n    // reset performance logger timer start point to avoid soft navigation\n    // cause dashboard perf measurement problem\n    if (lastLocationPathname && lastLocationPathname !== location.pathname) {\n      Logger.markTimeOrigin();\n    }\n    lastLocationPathname = location.pathname;\n  }, [location.pathname]);\n  return ___EmotionJSX(ThemeProvider, { theme: theme },\n  ___EmotionJSX(ReduxProvider, { store: store },\n  ___EmotionJSX(DndProvider, { backend: HTML5Backend },\n  ___EmotionJSX(FlashProvider, { messages: common.flash_messages },\n  ___EmotionJSX(DynamicPluginProvider, null,\n  ___EmotionJSX(QueryParamProvider, { ReactRouterRoute: Route, stringifyOptions: { encode: false } },\n  children))))));\n\n\n\n\n\n\n};\nconst App = () => ___EmotionJSX(Router, null,\n___EmotionJSX(RootContextProviders, null,\n___EmotionJSX(Menu, { data: menu, isFrontendRoute: isFrontendRoute }),\n___EmotionJSX(Switch, null,\nroutes.map(({ path, Component, props = {}, Fallback = Loading }) => ___EmotionJSX(Route, { path: path, key: path },\n___EmotionJSX(Suspense, { fallback: ___EmotionJSX(Fallback, null) },\n___EmotionJSX(ErrorBoundary, null,\n___EmotionJSX(Component, _extends({ user: user }, props))))))),\n\n\n\n\n___EmotionJSX(ToastContainer, null)));\n\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}