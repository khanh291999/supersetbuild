{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport FilterValue from './FilterValue';\nimport { checkIsMissingRequiredValue } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledIcon = styled.div`\n  position: absolute;\n  right: 0;\n`;\nconst StyledFilterControlTitle = styled.h4`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n  margin: 0;\n  overflow-wrap: break-word;\n`;\nconst StyledFilterControlTitleBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n`;\nconst StyledFilterControlContainer = styled(Form)`\n  width: 100%;\n  && .ant-form-item-label > label {\n    text-transform: none;\n    width: 100%;\n    padding-right: ${({ theme }) => theme.gridUnit * 11}px;\n  }\n`;\nconst FilterControl = ({ dataMaskSelected, filter, icon, onFilterSelectionChange, directPathToChild, inView }) => {var _filter$dataMask, _filter$controlValues;\n  const { name = '<undefined>' } = filter;\n  const isMissingRequiredValue = checkIsMissingRequiredValue(filter, (_filter$dataMask = filter.dataMask) == null ? void 0 : _filter$dataMask.filterState);\n  return ___EmotionJSX(StyledFilterControlContainer, { layout: \"vertical\" },\n  ___EmotionJSX(FormItem, { label: ___EmotionJSX(StyledFilterControlTitleBox, null,\n    ___EmotionJSX(StyledFilterControlTitle, null,\n    name),\n\n    ___EmotionJSX(StyledIcon, null, icon)),\n    required: filter == null ? void 0 : (_filter$controlValues = filter.controlValues) == null ? void 0 : _filter$controlValues.enableEmptyFilter, validateStatus: isMissingRequiredValue ? 'error' : undefined },\n  ___EmotionJSX(FilterValue, { dataMaskSelected: dataMaskSelected, filter: filter, directPathToChild: directPathToChild, onFilterSelectionChange: onFilterSelectionChange, inView: inView })));\n\n\n};\nexport default FilterControl;","map":null,"metadata":{},"sourceType":"module"}