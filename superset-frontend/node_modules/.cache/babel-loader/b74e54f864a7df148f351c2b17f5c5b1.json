{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Typography, Dropdown, Menu } from 'src/common/components';\nimport React from 'react';\nimport { CheckOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { styled, supersetTheme, t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FiltersHeader from './FiltersHeader';\nimport { getFilterBarTestId } from '..';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\nconst TitleText = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst IconsBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  & > *,\n  & > button.superset-button {\n    ${({ theme }) => `margin-left: ${theme.gridUnit * 2}px`};\n  }\n`;\nconst FilterSetUnit = ({ editMode, setFilterSetName, onDelete, onEdit, filterSetName, dataMaskSelected, filterSet, isApplied, onRebuild }) => {var _filterSet$name, _filterSet$dataMask;\n  const menu = ___EmotionJSX(Menu, null,\n  ___EmotionJSX(Menu.Item, { onClick: onEdit }, t('Edit')),\n  ___EmotionJSX(Menu.Item, { onClick: onRebuild },\n  ___EmotionJSX(Tooltip, { placement: \"right\", title: t('Remove invalid filters') },\n  t('Rebuild'))),\n\n\n  ___EmotionJSX(Menu.Item, { onClick: onDelete, danger: true },\n  t('Delete')));\n\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(TitleText, null,\n  ___EmotionJSX(Typography.Text, { strong: true, editable: {\n      editing: editMode,\n      icon: ___EmotionJSX(\"span\", null),\n      onChange: setFilterSetName } }, (_filterSet$name =\n\n  filterSet == null ? void 0 : filterSet.name) != null ? _filterSet$name : filterSetName),\n\n  ___EmotionJSX(IconsBlock, null,\n  isApplied && ___EmotionJSX(CheckOutlined, { style: { color: supersetTheme.colors.success.base } }),\n  onDelete && ___EmotionJSX(Dropdown, { overlay: menu, placement: \"bottomRight\", trigger: ['click'] },\n  ___EmotionJSX(HeaderButton, _extends({ onClick: (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n    } }, getFilterBarTestId('filter-set-menu-button'), { buttonStyle: \"link\", buttonSize: \"xsmall\" }),\n  ___EmotionJSX(EllipsisOutlined, null))))),\n\n\n\n\n  ___EmotionJSX(FiltersHeader, { filterSet: filterSet, dataMask: (_filterSet$dataMask = filterSet == null ? void 0 : filterSet.dataMask) != null ? _filterSet$dataMask : dataMaskSelected }));\n\n};\nexport default FilterSetUnit;","map":null,"metadata":{},"sourceType":"module"}