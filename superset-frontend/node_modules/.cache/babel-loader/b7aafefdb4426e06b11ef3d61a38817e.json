{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css } from '@superset-ui/core';\nimport { components as defaultComponents } from 'react-select';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const DEFAULT_CLASS_NAME = 'Select';\nexport const DEFAULT_CLASS_NAME_PREFIX = 'Select';\nconst colors = (theme) => ({\n  primary: theme.colors.success.base,\n  danger: theme.colors.error.base,\n  warning: theme.colors.warning.base,\n  indicator: theme.colors.info.base,\n  almostBlack: theme.colors.grayscale.dark1,\n  grayDark: theme.colors.grayscale.dark1,\n  grayLight: theme.colors.grayscale.light2,\n  gray: theme.colors.grayscale.light1,\n  grayBg: theme.colors.grayscale.light4,\n  grayBgDarker: theme.colors.grayscale.light3,\n  grayBgDarkest: theme.colors.grayscale.light2,\n  grayHeading: theme.colors.grayscale.light1,\n  menuHover: theme.colors.grayscale.light3,\n  lightest: theme.colors.grayscale.light5,\n  darkest: theme.colors.grayscale.dark2,\n  grayBorder: theme.colors.grayscale.light2,\n  grayBorderLight: theme.colors.grayscale.light3,\n  grayBorderDark: theme.colors.grayscale.light1,\n  textDefault: theme.colors.grayscale.dark1,\n  textDarkest: theme.colors.grayscale.dark2,\n  dangerLight: theme.colors.error.light1 });\n\nexport const defaultTheme = (theme) => ({\n  borderRadius: theme.borderRadius,\n  zIndex: 11,\n  colors: colors(theme),\n  spacing: {\n    baseUnit: 3,\n    menuGutter: 0,\n    controlHeight: 34,\n    lineHeight: 19,\n    fontSize: 14,\n    minWidth: '6.5em' } });\n\n\nexport const DEFAULT_STYLES = {\n  container: (provider, { theme: { spacing: { minWidth } } }) => [\n  provider,\n  css`\n      min-width: ${minWidth};\n    `],\n\n  placeholder: (provider) => [\n  provider,\n  css`\n      white-space: nowrap;\n    `],\n\n  indicatorSeparator: () => css`\n    display: none;\n  `,\n  indicatorsContainer: (provider) => [\n  provider,\n  css`\n      i {\n        width: 1em;\n        display: inline-block;\n      }\n    `],\n\n  clearIndicator: (provider) => [\n  provider,\n  css`\n      padding: 4px 0 4px 6px;\n    `],\n\n  control: (provider, { isFocused, menuIsOpen, theme: { borderRadius, colors } }) => {\n    const isPseudoFocused = isFocused && !menuIsOpen;\n    let borderColor = colors.grayBorder;\n    if (isPseudoFocused || menuIsOpen) {\n      borderColor = colors.grayBorderDark;\n    }\n    return [\n    provider,\n    css`\n        border-color: ${borderColor};\n        box-shadow: ${isPseudoFocused ?\n    'inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 3px rgba(0,0,0,.1)' :\n    'none'};\n        border-radius: ${menuIsOpen ?\n    `${borderRadius}px ${borderRadius}px 0 0` :\n    `${borderRadius}px`};\n        &:hover {\n          border-color: ${borderColor};\n          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n        }\n        flex-wrap: nowrap;\n        padding-left: 1px;\n      `];\n\n  },\n  menu: (provider, { theme: { zIndex } }) => [\n  provider,\n  css`\n      padding-bottom: 2em;\n      z-index: ${zIndex}; /* override at least multi-page pagination */\n      width: auto;\n      min-width: 100%;\n      max-width: 80vw;\n      background: none;\n      box-shadow: none;\n      border: 0;\n    `],\n\n  menuList: (provider, { theme: { borderRadius, colors } }) => [\n  provider,\n  css`\n      background: ${colors.lightest};\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      border: 1px solid ${colors.grayBorderDark};\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n      margin-top: -1px;\n      border-top-color: ${colors.grayBorderLight};\n      min-width: 100%;\n      width: auto;\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      padding-top: 0;\n      padding-bottom: 0;\n    `],\n\n  option: (provider, { isDisabled, isFocused, isSelected, theme: { colors, spacing: { lineHeight, fontSize } } }) => {\n    let color = colors.textDefault;\n    let backgroundColor = colors.lightest;\n    if (isFocused) {\n      backgroundColor = colors.grayBgDarker;\n    } else\n    if (isDisabled) {\n      color = '#ccc';\n    }\n    return [\n    provider,\n    css`\n        cursor: pointer;\n        line-height: ${lineHeight}px;\n        font-size: ${fontSize}px;\n        background-color: ${backgroundColor};\n        color: ${color};\n        font-weight: ${isSelected ? 600 : 400};\n        white-space: nowrap;\n        &:hover:active {\n          background-color: ${colors.grayBg};\n        }\n      `];\n\n  },\n  valueContainer: (provider, { isMulti, hasValue, theme: { spacing: { baseUnit } } }) => [\n  provider,\n  css`\n      padding-left: ${isMulti && hasValue ? 1 : baseUnit * 3}px;\n    `],\n\n  multiValueLabel: (provider, { theme: { spacing: { baseUnit } } }) => ({\n    ...provider,\n    paddingLeft: baseUnit * 1.2,\n    paddingRight: baseUnit * 1.2 }),\n\n  input: (provider, { selectProps }) => {var _selectProps$value;return [\n    provider,\n    css`\n      margin-left: 0;\n      vertical-align: middle;\n      ${selectProps != null && selectProps.isMulti && selectProps != null && (_selectProps$value = selectProps.value) != null && _selectProps$value.length ?\n    'padding: 0 6px; width: 100%' :\n    'padding: 0; flex: 1 1 auto;'};\n    `];},\n\n  menuPortal: (base) => ({\n    ...base,\n    zIndex: 1030 // must be same or higher of antd popover\n  }) };\n\nconst INPUT_TAG_BASE_STYLES = {\n  background: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0 };\n\nconst { ClearIndicator, DropdownIndicator, Option, Input, SelectContainer } = defaultComponents;\nexport const DEFAULT_COMPONENTS = {\n  SelectContainer: ({ children, ...props }) => {\n    const { selectProps: { assistiveText } } = props;\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(SelectContainer, props, children),\n    assistiveText && ___EmotionJSX(\"span\", { css: (theme) => ({\n        marginLeft: 3,\n        fontSize: theme.typography.sizes.s,\n        color: theme.colors.grayscale.light1 }) },\n\n    assistiveText));\n\n\n  },\n  Option: ({ children, innerProps, data, ...props }) => ___EmotionJSX(Option, _extends({}, props, { data: data, css: data != null && data.style ? data.style : null, innerProps: innerProps }),\n  children),\n\n  ClearIndicator: (props) => ___EmotionJSX(ClearIndicator, props,\n  ___EmotionJSX(\"i\", { className: \"fa\" }, \"\\xD7\")),\n\n  DropdownIndicator: (props) => ___EmotionJSX(DropdownIndicator, props,\n  ___EmotionJSX(\"i\", { className: `fa fa-caret-${props.selectProps.menuIsOpen ? 'up' : 'down'}` })),\n\n  Input: (props) => {\n    const { getStyles } = props;\n    return ___EmotionJSX(Input, _extends({}, props, { css: getStyles('input', props), autoComplete: \"chrome-off\", inputStyle: INPUT_TAG_BASE_STYLES }));\n  } };\n\nexport const VALUE_LABELED_STYLES = {\n  valueContainer: (provider, { getValue, theme: { spacing: { baseUnit } }, isMulti }) => ({\n    ...provider,\n    paddingLeft: getValue().length > 0 ? 1 : baseUnit * 3,\n    overflow: isMulti && getValue().length > 0 ? 'visible' : 'hidden' }),\n\n  // render single value as is they are multi-value\n  singleValue: (provider, props) => {\n    const { getStyles } = props;\n    return {\n      ...getStyles('multiValue', props),\n      '.metric-option': getStyles('multiValueLabel', props) };\n\n  } };","map":null,"metadata":{},"sourceType":"module"}