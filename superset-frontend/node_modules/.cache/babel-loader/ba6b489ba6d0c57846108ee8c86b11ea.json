{"ast":null,"code":"import \"core-js/modules/es.string.replace.js\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { AntdInput as Input } from 'src/common/components';\nimport { SELECT_WIDTH } from 'src/components/ListView/utils';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Container = styled.div`\n  width: ${SELECT_WIDTH}px;\n`;\nconst SearchIcon = styled(Icons.Search)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\nconst StyledInput = styled(Input)`\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\nexport default function SearchFilter({ Header, name, initialValue, onSubmit }) {\n  const [value, setValue] = useState(initialValue || '');\n  const handleSubmit = () => {\n    if (value) {\n      // encode plus signs to prevent them from being converted into a space\n      onSubmit(value.trim().replace(/\\+/g, '%2B'));\n    }\n  };\n  const handleChange = (e) => {\n    setValue(e.currentTarget.value);\n    if (e.currentTarget.value === '') {\n      onSubmit('');\n    }\n  };\n  return ___EmotionJSX(Container, null,\n  ___EmotionJSX(FormLabel, null, Header),\n  ___EmotionJSX(StyledInput, { allowClear: true, placeholder: t('Type a value'), name: name, value: value, onChange: handleChange, onPressEnter: handleSubmit, onBlur: handleSubmit, prefix: ___EmotionJSX(SearchIcon, { iconSize: \"l\" }) }));\n\n}","map":null,"metadata":{},"sourceType":"module"}