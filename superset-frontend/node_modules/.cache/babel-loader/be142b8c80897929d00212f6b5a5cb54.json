{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Row, Col, Input, TextArea } from 'src/common/components';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { Form, FormItem } from 'src/components/Form';\nimport Modal from 'src/components/Modal';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.span`\n  span[role='img'] {\n    display: flex;\n    margin: 0;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    svg {\n      vertical-align: -${({ theme }) => theme.gridUnit * 1.25}px;\n      margin: 0;\n    }\n  }\n`;\nexport default function SaveQuery({ query, defaultLabel = t('Undefined'), onSave = () => {}, onUpdate, saveQueryWarning = null }) {\n  const [description, setDescription] = useState(query.description || '');\n  const [label, setLabel] = useState(defaultLabel);\n  const [showSave, setShowSave] = useState(false);\n  const isSaved = !!query.remoteId;\n  const queryPayload = () => ({\n    ...query,\n    title: label,\n    description });\n\n  const close = () => {\n    setShowSave(false);\n  };\n  const onSaveWrapper = () => {\n    onSave(queryPayload());\n    close();\n  };\n  const onUpdateWrapper = () => {\n    onUpdate(queryPayload());\n    close();\n  };\n  const onLabelChange = (e) => {\n    setLabel(e.target.value);\n  };\n  const onDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n  const toggleSave = () => {\n    setShowSave(!showSave);\n  };\n  const renderModalBody = () => ___EmotionJSX(Form, { layout: \"vertical\" },\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(FormItem, { label: t('Name') },\n  ___EmotionJSX(Input, { type: \"text\", value: label, onChange: onLabelChange })))),\n\n\n\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(FormItem, { label: t('Description') },\n  ___EmotionJSX(TextArea, { rows: 4, value: description, onChange: onDescriptionChange })))),\n\n\n\n  saveQueryWarning && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { xs: 24 },\n  ___EmotionJSX(\"small\", null, saveQueryWarning))),\n\n\n  ___EmotionJSX(\"br\", null))));\n\n\n\n  return ___EmotionJSX(Styles, { className: \"SaveQuery\" },\n  ___EmotionJSX(Button, { buttonSize: \"small\", onClick: toggleSave },\n  ___EmotionJSX(Icons.Save, { iconSize: \"xl\" }),\n  isSaved ? t('Save') : t('Save as')),\n\n  ___EmotionJSX(Modal, { className: \"save-query-modal\", onHandledPrimaryAction: onSaveWrapper, onHide: close, primaryButtonName: isSaved ? t('Save') : t('Save as'), width: \"620px\", show: showSave, title: ___EmotionJSX(\"h4\", null, t('Save query')), footer: [\n    ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { onClick: close, cta: true },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { buttonStyle: isSaved ? undefined : 'primary', onClick: onSaveWrapper, className: \"m-r-3\", cta: true },\n    isSaved ? t('Save as new') : t('Save')),\n\n    isSaved && ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: onUpdateWrapper, className: \"m-r-3\", cta: true },\n    t('Update')))] },\n\n\n\n  renderModalBody()));\n\n\n}","map":null,"metadata":{},"sourceType":"module"}