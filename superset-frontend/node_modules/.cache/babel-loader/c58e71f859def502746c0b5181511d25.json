{"ast":null,"code":"import _throttle from \"lodash/throttle\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport getDropPosition from 'src/dashboard/util/getDropPosition';\nimport handleScroll from './handleScroll';\n\nconst HOVER_THROTTLE_MS = 100;\n\nfunction handleHover(props, monitor, Component) {var _Component$props, _Component$props$comp;\n  // this may happen due to throttling\n  if (!Component.mounted) return;\n\n  const dropPosition = getDropPosition(monitor, Component);\n\n  const isDashboardRoot =\n  (Component == null ? void 0 : (_Component$props = Component.props) == null ? void 0 : (_Component$props$comp = _Component$props.component) == null ? void 0 : _Component$props$comp.type) === DASHBOARD_ROOT_TYPE;\n  const scroll = isDashboardRoot ? 'SCROLL_TOP' : null;\n\n  handleScroll(scroll);\n\n  if (!dropPosition) {\n    Component.setState(() => ({ dropIndicator: null }));\n    return;\n  }\n\n  Component.setState(() => ({\n    dropIndicator: dropPosition }));\n\n}\n\n// this is called very frequently by react-dnd\nexport default _throttle(handleHover, HOVER_THROTTLE_MS);","map":null,"metadata":{},"sourceType":"module"}