{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onError: PropTypes.func,\n  showMessage: PropTypes.bool };\n\nconst defaultProps = {\n  onError: () => {},\n  showMessage: true };\n\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, info: null };\n  }\n\n  componentDidCatch(error, info) {\n    if (this.props.onError) this.props.onError(error, info);\n    this.setState({ error, info });\n  }\n\n  render() {\n    const { error, info } = this.state;\n    if (error) {\n      const firstLine = error.toString();\n      const message =\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"strong\", null, t('Unexpected error')),\n      firstLine ? `: ${firstLine}` : '');\n\n\n      if (this.props.showMessage) {\n        return (\n          ___EmotionJSX(ErrorMessageWithStackTrace, {\n            subtitle: message,\n            copyText: message,\n            stackTrace: info ? info.componentStack : null }));\n\n\n      }\n      return null;\n    }\n    return this.props.children;\n  }}\n\nErrorBoundary.propTypes = propTypes;\nErrorBoundary.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}