{"ast":null,"code":"const NOOP = () => {};\nexport default function transformProps(chartProps) {\n  const { datasource, formData, hooks, initialValues, queriesData, rawDatasource = {}, rawFormData, width, height } = chartProps;\n  const { onAddFilter = NOOP, onFilterMenuOpen = NOOP, onFilterMenuClose = NOOP } = hooks;\n  const { sliceId, dateFilter, instantFiltering, showDruidTimeGranularity, showDruidTimeOrigin, showSqlaTimeColumn, showSqlaTimeGranularity } = formData;\n  const { verboseMap = {} } = datasource;\n  const filterConfigs = formData.filterConfigs || [];\n  const filtersFields = filterConfigs.map((flt) => ({\n    ...flt,\n    key: flt.column,\n    label: flt.label || verboseMap[flt.column] || flt.column }));\n\n  return {\n    chartId: sliceId,\n    width,\n    height,\n    datasource: rawDatasource,\n    filtersChoices: queriesData[0].data,\n    filtersFields,\n    instantFiltering,\n    onChange: onAddFilter,\n    onFilterMenuOpen,\n    onFilterMenuClose,\n    origSelectedValues: initialValues || {},\n    showDateFilter: dateFilter,\n    showDruidTimeGrain: showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGrain: showSqlaTimeGranularity,\n    // the original form data, needed for async select options\n    rawFormData };\n\n}","map":null,"metadata":{},"sourceType":"module"}