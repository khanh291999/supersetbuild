{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport rison from 'rison';\nimport { styled, t, SupersetClient } from '@superset-ui/core';\nimport { Steps } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { Tooltip } from 'src/components/Tooltip';\nimport VizTypeGallery, { MAX_ADVISABLE_VIZ_GALLERY_WIDTH } from 'src/explore/components/controls/VizTypeControl/VizTypeGallery';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ESTIMATED_NAV_HEIGHT = 56;\nconst ELEMENTS_EXCEPT_VIZ_GALLERY = ESTIMATED_NAV_HEIGHT + 250;\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: ${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px;\n    max-height: calc(100vh - ${ESTIMATED_NAV_HEIGHT}px);\n    border-radius: ${theme.gridUnit}px;\n    background-color: ${theme.colors.grayscale.light5};\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: ${theme.gridUnit * 4}px;\n    padding-right: ${theme.gridUnit * 4}px;\n    padding-bottom: ${theme.gridUnit * 4}px;\n\n    h3 {\n      padding-bottom: ${theme.gridUnit * 3}px;\n    }\n\n    & .dataset {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-bottom: ${theme.gridUnit * 2}px;\n\n      & > div {\n        min-width: 200px;\n        width: 300px;\n      }\n\n      & > span {\n        color: ${theme.colors.grayscale.light1};\n        margin-left: ${theme.gridUnit * 4}px;\n      }\n    }\n\n    & .viz-gallery {\n      border: 1px solid ${theme.colors.grayscale.light2};\n      border-radius: ${theme.gridUnit}px;\n      margin: ${theme.gridUnit}px 0px;\n      max-height: calc(100vh - ${ELEMENTS_EXCEPT_VIZ_GALLERY}px);\n      flex: 1;\n    }\n\n    & .footer {\n      flex: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-end;\n      align-items: center;\n\n      & > span {\n        color: ${theme.colors.grayscale.light1};\n        margin-right: ${theme.gridUnit * 4}px;\n      }\n    }\n\n    /* The following extra ampersands (&&&&) are used to boost selector specificity */\n\n    &&&& .ant-steps-item-tail {\n      display: none;\n    }\n\n    &&&& .ant-steps-item-icon {\n      margin-right: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 5}px;\n      height: ${theme.gridUnit * 5}px;\n      line-height: ${theme.gridUnit * 5}px;\n    }\n\n    &&&& .ant-steps-item-title {\n      line-height: ${theme.gridUnit * 5}px;\n    }\n\n    &&&& .ant-steps-item-content {\n      overflow: unset;\n\n      .ant-steps-item-description {\n        margin-top: ${theme.gridUnit}px;\n      }\n    }\n\n    &&&& .ant-tooltip-open {\n      display: inline;\n    }\n\n    &&&& .ant-select-selector {\n      padding: 0;\n    }\n\n    &&&& .ant-select-selection-placeholder {\n      padding-left: ${theme.gridUnit * 3}px;\n    }\n  `}\n`;\nconst TooltipContent = styled.div`\n  ${({ theme, hasDescription }) => `\n    .tooltip-header {\n      font-size: ${hasDescription ? theme.typography.sizes.l : theme.typography.sizes.s}px;\n      font-weight: ${hasDescription ?\ntheme.typography.weights.bold :\ntheme.typography.weights.normal};\n    }\n\n    .tooltip-description {\n      margin-top: ${theme.gridUnit * 2}px;\n      display: -webkit-box;\n      -webkit-line-clamp: 20;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `}\n`;\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    position: absolute;\n    left: ${theme.gridUnit * 3}px;\n    right: ${theme.gridUnit * 3}px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `}\n`;\nexport default class AddSliceContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visType: null };\n\n    this.changeDatasource = this.changeDatasource.bind(this);\n    this.changeVisType = this.changeVisType.bind(this);\n    this.gotoSlice = this.gotoSlice.bind(this);\n    this.newLabel = this.newLabel.bind(this);\n    this.loadDatasources = this.loadDatasources.bind(this);\n  }\n  exploreUrl() {var _this$state$datasourc;\n    const formData = encodeURIComponent(JSON.stringify({\n      viz_type: this.state.visType,\n      datasource: (_this$state$datasourc = this.state.datasource) == null ? void 0 : _this$state$datasourc.value }));\n\n    return `/superset/explore/?form_data=${formData}`;\n  }\n  gotoSlice() {\n    window.location.href = this.exploreUrl();\n  }\n  changeDatasource(datasource) {\n    this.setState({ datasource });\n  }\n  changeVisType(visType) {\n    this.setState({ visType });\n  }\n  isBtnDisabled() {var _this$state$datasourc2;\n    return !((_this$state$datasourc2 = this.state.datasource) != null && _this$state$datasourc2.value && this.state.visType);\n  }\n  newLabel(item) {\n    return ___EmotionJSX(Tooltip, { mouseEnterDelay: 1, placement: \"right\", title: ___EmotionJSX(TooltipContent, { hasDescription: !!item.description },\n      ___EmotionJSX(\"div\", { className: \"tooltip-header\" }, item.table_name),\n      item.description && ___EmotionJSX(\"div\", { className: \"tooltip-description\" }, item.description)) },\n\n    ___EmotionJSX(StyledLabel, null, item.table_name));\n\n  }\n  loadDatasources(search, page, pageSize) {\n    const query = rison.encode({\n      columns: ['id', 'table_name', 'description', 'datasource_type'],\n      filters: [{ col: 'table_name', opr: 'ct', value: search }],\n      page,\n      page_size: pageSize,\n      order_column: 'table_name',\n      order_direction: 'asc' });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/dataset/?q=${query}` }).\n    then((response) => {\n      const list = response.json.result.\n      map((item) => ({\n        value: `${item.id}__${item.datasource_type}`,\n        customLabel: this.newLabel(item),\n        label: item.table_name })).\n\n      sort((a, b) => a.label.localeCompare(b.label));\n      return {\n        data: list,\n        totalCount: response.json.count };\n\n    });\n  }\n  render() {var _this$state$datasourc3;\n    const isButtonDisabled = this.isBtnDisabled();\n    return ___EmotionJSX(StyledContainer, null,\n    ___EmotionJSX(\"h3\", null, t('Create a new chart')),\n    ___EmotionJSX(Steps, { direction: \"vertical\", size: \"small\" },\n    ___EmotionJSX(Steps.Step, { title: ___EmotionJSX(FormLabel, null, t('Choose a dataset')), status: (_this$state$datasourc3 = this.state.datasource) != null && _this$state$datasourc3.value ? 'finish' : 'process', description: ___EmotionJSX(\"div\", { className: \"dataset\" },\n      ___EmotionJSX(Select, { autoFocus: true, ariaLabel: t('Dataset'), name: \"select-datasource\", onChange: this.changeDatasource, options: this.loadDatasources, placeholder: t('Choose a dataset'), showSearch: true, value: this.state.datasource }),\n      ___EmotionJSX(\"span\", null,\n      t('Instructions to add a dataset are available in the Superset tutorial.'), ' ',\n      ___EmotionJSX(\"a\", { href: \"https://superset.apache.org/docs/creating-charts-dashboards/first-dashboard#adding-a-new-table\", rel: \"noopener noreferrer\", target: \"_blank\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-external-link\" })))) }),\n\n\n\n    ___EmotionJSX(Steps.Step, { title: ___EmotionJSX(FormLabel, null, t('Choose chart type')), status: this.state.visType ? 'finish' : 'process', description: ___EmotionJSX(VizTypeGallery, { className: \"viz-gallery\", onChange: this.changeVisType, selectedViz: this.state.visType }) })),\n\n    ___EmotionJSX(\"div\", { className: \"footer\" },\n    isButtonDisabled && ___EmotionJSX(\"span\", null,\n    t('Please select both a Dataset and a Chart type to proceed')),\n\n    ___EmotionJSX(Button, { buttonStyle: \"primary\", disabled: isButtonDisabled, onClick: this.gotoSlice },\n    t('Create new chart'))));\n\n\n\n  }}","map":null,"metadata":{},"sourceType":"module"}