{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Global, css } from '@emotion/react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { MinusCircleFilled, CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport Popover from 'src/components/Popover';\nimport Collapse from 'src/components/Collapse';\nimport Icons from 'src/components/Icons';\nimport { Indent, Panel, Reset, Title } from 'src/dashboard/components/FiltersBadge/Styles';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DetailsPanelPopover = ({ appliedCrossFilterIndicators = [], appliedIndicators = [], incompatibleIndicators = [], unsetIndicators = [], onHighlightFilterSource, children }) => {\n  const [visible, setVisible] = useState(false);\n  const theme = useTheme();\n  const activeTabs = useSelector((state) => {var _state$dashboardState;return (_state$dashboardState = state.dashboardState) == null ? void 0 : _state$dashboardState.activeTabs;});\n  // we don't need to clean up useEffect, setting { once: true } removes the event listener after handle function is called\n  useEffect(() => {\n    if (visible) {\n      window.addEventListener('resize', () => setVisible(false), {\n        once: true });\n\n    }\n  }, [visible]);\n  // if tabs change, popover doesn't close automatically\n  useEffect(() => {\n    setVisible(false);\n  }, [activeTabs]);\n  const getDefaultActivePanel = () => {\n    const result = [];\n    if (appliedCrossFilterIndicators.length) {\n      result.push('appliedCrossFilters');\n    }\n    if (appliedIndicators.length) {\n      result.push('applied');\n    }\n    if (incompatibleIndicators.length) {\n      result.push('incompatible');\n    }\n    if (result.length) {\n      return result;\n    }\n    return ['unset'];\n  };\n  const [activePanels, setActivePanels] = useState(() => [\n  ...getDefaultActivePanel()]);\n\n  function handlePopoverStatus(isOpen) {\n    setVisible(isOpen);\n    // every time the popover opens, make sure the most relevant panel is active\n    if (isOpen) {\n      setActivePanels(getDefaultActivePanel());\n    }\n  }\n  function handleActivePanelChange(panels) {\n    // need to convert to an array so that handlePopoverStatus will work\n    if (typeof panels === 'string') {\n      setActivePanels([panels]);\n    } else\n    {\n      setActivePanels(panels);\n    }\n  }\n  const indicatorKey = (indicator) => `${indicator.column} - ${indicator.name}`;\n  const content = ___EmotionJSX(Panel, null,\n  ___EmotionJSX(Global, { styles: /*#__PURE__*/css(\".filterStatusPopover{.ant-popover-inner{background-color:\",\n\n\n    theme.colors.grayscale.dark2, \"cc;.ant-popover-inner-content{padding-top:0;padding-bottom:0;}}&.ant-popover-placement-bottom,&.ant-popover-placement-bottomLeft,&.ant-popover-placement-bottomRight{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-top,&.ant-popover-placement-topLeft,&.ant-popover-placement-topRight{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-left,&.ant-popover-placement-leftTop,&.ant-popover-placement-leftBottom{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-right,&.ant-popover-placement-rightTop,&.ant-popover-placement-rightBottom{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover{color:\",\n\n\n\n    theme.colors.grayscale.light4, \";z-index:99;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }),\n\n\n\n\n  ___EmotionJSX(Reset, null,\n  ___EmotionJSX(Collapse, { ghost: true, light: true, activeKey: activePanels, onChange: handleActivePanelChange },\n  appliedCrossFilterIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"appliedCrossFilters\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.primary.light1 },\n    ___EmotionJSX(Icons.CursorTarget, { css: /*#__PURE__*/_css({ fill: theme.colors.primary.light1 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), iconSize: \"xl\" }),\n    t('Applied Cross Filters (%d)', appliedCrossFilterIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  appliedCrossFilterIndicators.map((indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  appliedIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"applied\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.success.base },\n    ___EmotionJSX(CheckCircleFilled, null), ' ',\n    t('Applied Filters (%d)', appliedIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  appliedIndicators.map((indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  incompatibleIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"incompatible\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.alert.base },\n    ___EmotionJSX(ExclamationCircleFilled, null), ' ',\n    t('Incompatible Filters (%d)', incompatibleIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvZGFzaGJvYXJkL2NvbXBvbmVudHMvRmlsdGVyc0JhZGdlL0RldGFpbHNQYW5lbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0pzQiIsImZpbGUiOiIvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2Rhc2hib2FyZC9jb21wb25lbnRzL0ZpbHRlcnNCYWRnZS9EZXRhaWxzUGFuZWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IEdsb2JhbCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgdCwgdXNlVGhlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgeyBNaW51c0NpcmNsZUZpbGxlZCwgQ2hlY2tDaXJjbGVGaWxsZWQsIEV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkLCB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zJztcbmltcG9ydCBQb3BvdmVyIGZyb20gJ3NyYy9jb21wb25lbnRzL1BvcG92ZXInO1xuaW1wb3J0IENvbGxhcHNlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NvbGxhcHNlJztcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XG5pbXBvcnQgeyBJbmRlbnQsIFBhbmVsLCBSZXNldCwgVGl0bGUsIH0gZnJvbSAnc3JjL2Rhc2hib2FyZC9jb21wb25lbnRzL0ZpbHRlcnNCYWRnZS9TdHlsZXMnO1xuaW1wb3J0IEZpbHRlckluZGljYXRvciBmcm9tICdzcmMvZGFzaGJvYXJkL2NvbXBvbmVudHMvRmlsdGVyc0JhZGdlL0ZpbHRlckluZGljYXRvcic7XG5jb25zdCBEZXRhaWxzUGFuZWxQb3BvdmVyID0gKHsgYXBwbGllZENyb3NzRmlsdGVySW5kaWNhdG9ycyA9IFtdLCBhcHBsaWVkSW5kaWNhdG9ycyA9IFtdLCBpbmNvbXBhdGlibGVJbmRpY2F0b3JzID0gW10sIHVuc2V0SW5kaWNhdG9ycyA9IFtdLCBvbkhpZ2hsaWdodEZpbHRlclNvdXJjZSwgY2hpbGRyZW4sIH0pID0+IHtcbiAgICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IGFjdGl2ZVRhYnMgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5kYXNoYm9hcmRTdGF0ZT8uYWN0aXZlVGFicyk7XG4gICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBjbGVhbiB1cCB1c2VFZmZlY3QsIHNldHRpbmcgeyBvbmNlOiB0cnVlIH0gcmVtb3ZlcyB0aGUgZXZlbnQgbGlzdGVuZXIgYWZ0ZXIgaGFuZGxlIGZ1bmN0aW9uIGlzIGNhbGxlZFxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgKCkgPT4gc2V0VmlzaWJsZShmYWxzZSksIHtcbiAgICAgICAgICAgICAgICBvbmNlOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCBbdmlzaWJsZV0pO1xuICAgIC8vIGlmIHRhYnMgY2hhbmdlLCBwb3BvdmVyIGRvZXNuJ3QgY2xvc2UgYXV0b21hdGljYWxseVxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFZpc2libGUoZmFsc2UpO1xuICAgIH0sIFthY3RpdmVUYWJzXSk7XG4gICAgY29uc3QgZ2V0RGVmYXVsdEFjdGl2ZVBhbmVsID0gKCkgPT4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgaWYgKGFwcGxpZWRDcm9zc0ZpbHRlckluZGljYXRvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCgnYXBwbGllZENyb3NzRmlsdGVycycpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhcHBsaWVkSW5kaWNhdG9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKCdhcHBsaWVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluY29tcGF0aWJsZUluZGljYXRvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCgnaW5jb21wYXRpYmxlJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFsndW5zZXQnXTtcbiAgICB9O1xuICAgIGNvbnN0IFthY3RpdmVQYW5lbHMsIHNldEFjdGl2ZVBhbmVsc10gPSB1c2VTdGF0ZSgoKSA9PiBbXG4gICAgICAgIC4uLmdldERlZmF1bHRBY3RpdmVQYW5lbCgpLFxuICAgIF0pO1xuICAgIGZ1bmN0aW9uIGhhbmRsZVBvcG92ZXJTdGF0dXMoaXNPcGVuKSB7XG4gICAgICAgIHNldFZpc2libGUoaXNPcGVuKTtcbiAgICAgICAgLy8gZXZlcnkgdGltZSB0aGUgcG9wb3ZlciBvcGVucywgbWFrZSBzdXJlIHRoZSBtb3N0IHJlbGV2YW50IHBhbmVsIGlzIGFjdGl2ZVxuICAgICAgICBpZiAoaXNPcGVuKSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVQYW5lbHMoZ2V0RGVmYXVsdEFjdGl2ZVBhbmVsKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGhhbmRsZUFjdGl2ZVBhbmVsQ2hhbmdlKHBhbmVscykge1xuICAgICAgICAvLyBuZWVkIHRvIGNvbnZlcnQgdG8gYW4gYXJyYXkgc28gdGhhdCBoYW5kbGVQb3BvdmVyU3RhdHVzIHdpbGwgd29ya1xuICAgICAgICBpZiAodHlwZW9mIHBhbmVscyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHNldEFjdGl2ZVBhbmVscyhbcGFuZWxzXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVQYW5lbHMocGFuZWxzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBpbmRpY2F0b3JLZXkgPSAoaW5kaWNhdG9yKSA9PiBgJHtpbmRpY2F0b3IuY29sdW1ufSAtICR7aW5kaWNhdG9yLm5hbWV9YDtcbiAgICBjb25zdCBjb250ZW50ID0gKDxQYW5lbD5cbiAgICAgIDxHbG9iYWwgc3R5bGVzPXtjc3MgYFxuICAgICAgICAgIC5maWx0ZXJTdGF0dXNQb3BvdmVyIHtcbiAgICAgICAgICAgIC5hbnQtcG9wb3Zlci1pbm5lciB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgLmFudC1wb3BvdmVyLWlubmVyLWNvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1ib3R0b20sXG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1ib3R0b21MZWZ0LFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtYm90dG9tUmlnaHQge1xuICAgICAgICAgICAgICAmID4gLmFudC1wb3BvdmVyLWNvbnRlbnQgPiAuYW50LXBvcG92ZXItYXJyb3cge1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmRhcmsyfWNjO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC10b3AsXG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC10b3BMZWZ0LFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtdG9wUmlnaHQge1xuICAgICAgICAgICAgICAmID4gLmFudC1wb3BvdmVyLWNvbnRlbnQgPiAuYW50LXBvcG92ZXItYXJyb3cge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtbGVmdCxcbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LWxlZnRUb3AsXG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1sZWZ0Qm90dG9tIHtcbiAgICAgICAgICAgICAgJiA+IC5hbnQtcG9wb3Zlci1jb250ZW50ID4gLmFudC1wb3BvdmVyLWFycm93IHtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LXJpZ2h0LFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtcmlnaHRUb3AsXG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1yaWdodEJvdHRvbSB7XG4gICAgICAgICAgICAgICYgPiAuYW50LXBvcG92ZXItY29udGVudCA+IC5hbnQtcG9wb3Zlci1hcnJvdyB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmRhcmsyfWNjO1xuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuYW50LXBvcG92ZXIge1xuICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NH07XG4gICAgICAgICAgICAgIHotaW5kZXg6IDk5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgYH0vPlxuICAgICAgPFJlc2V0PlxuICAgICAgICA8Q29sbGFwc2UgZ2hvc3QgbGlnaHQgYWN0aXZlS2V5PXthY3RpdmVQYW5lbHN9IG9uQ2hhbmdlPXtoYW5kbGVBY3RpdmVQYW5lbENoYW5nZX0+XG4gICAgICAgICAge2FwcGxpZWRDcm9zc0ZpbHRlckluZGljYXRvcnMubGVuZ3RoID8gKDxDb2xsYXBzZS5QYW5lbCBrZXk9XCJhcHBsaWVkQ3Jvc3NGaWx0ZXJzXCIgaGVhZGVyPXs8VGl0bGUgYm9sZCBjb2xvcj17dGhlbWUuY29sb3JzLnByaW1hcnkubGlnaHQxfT5cbiAgICAgICAgICAgICAgICAgIDxJY29ucy5DdXJzb3JUYXJnZXQgY3NzPXt7IGZpbGw6IHRoZW1lLmNvbG9ycy5wcmltYXJ5LmxpZ2h0MSB9fSBpY29uU2l6ZT1cInhsXCIvPlxuICAgICAgICAgICAgICAgICAge3QoJ0FwcGxpZWQgQ3Jvc3MgRmlsdGVycyAoJWQpJywgYXBwbGllZENyb3NzRmlsdGVySW5kaWNhdG9ycy5sZW5ndGgpfVxuICAgICAgICAgICAgICAgIDwvVGl0bGU+fT5cbiAgICAgICAgICAgICAgPEluZGVudCBjc3M9e3sgcGFkZGluZ0JvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiAzIH19PlxuICAgICAgICAgICAgICAgIHthcHBsaWVkQ3Jvc3NGaWx0ZXJJbmRpY2F0b3JzLm1hcChpbmRpY2F0b3IgPT4gKDxGaWx0ZXJJbmRpY2F0b3Iga2V5PXtpbmRpY2F0b3JLZXkoaW5kaWNhdG9yKX0gaW5kaWNhdG9yPXtpbmRpY2F0b3J9IG9uQ2xpY2s9e29uSGlnaGxpZ2h0RmlsdGVyU291cmNlfS8+KSl9XG4gICAgICAgICAgICAgIDwvSW5kZW50PlxuICAgICAgICAgICAgPC9Db2xsYXBzZS5QYW5lbD4pIDogbnVsbH1cbiAgICAgICAgICB7YXBwbGllZEluZGljYXRvcnMubGVuZ3RoID8gKDxDb2xsYXBzZS5QYW5lbCBrZXk9XCJhcHBsaWVkXCIgaGVhZGVyPXs8VGl0bGUgYm9sZCBjb2xvcj17dGhlbWUuY29sb3JzLnN1Y2Nlc3MuYmFzZX0+XG4gICAgICAgICAgICAgICAgICA8Q2hlY2tDaXJjbGVGaWxsZWQgLz57JyAnfVxuICAgICAgICAgICAgICAgICAge3QoJ0FwcGxpZWQgRmlsdGVycyAoJWQpJywgYXBwbGllZEluZGljYXRvcnMubGVuZ3RoKX1cbiAgICAgICAgICAgICAgICA8L1RpdGxlPn0+XG4gICAgICAgICAgICAgIDxJbmRlbnQgY3NzPXt7IHBhZGRpbmdCb3R0b206IHRoZW1lLmdyaWRVbml0ICogMyB9fT5cbiAgICAgICAgICAgICAgICB7YXBwbGllZEluZGljYXRvcnMubWFwKGluZGljYXRvciA9PiAoPEZpbHRlckluZGljYXRvciBrZXk9e2luZGljYXRvcktleShpbmRpY2F0b3IpfSBpbmRpY2F0b3I9e2luZGljYXRvcn0gb25DbGljaz17b25IaWdobGlnaHRGaWx0ZXJTb3VyY2V9Lz4pKX1cbiAgICAgICAgICAgICAgPC9JbmRlbnQ+XG4gICAgICAgICAgICA8L0NvbGxhcHNlLlBhbmVsPikgOiBudWxsfVxuICAgICAgICAgIHtpbmNvbXBhdGlibGVJbmRpY2F0b3JzLmxlbmd0aCA/ICg8Q29sbGFwc2UuUGFuZWwga2V5PVwiaW5jb21wYXRpYmxlXCIgaGVhZGVyPXs8VGl0bGUgYm9sZCBjb2xvcj17dGhlbWUuY29sb3JzLmFsZXJ0LmJhc2V9PlxuICAgICAgICAgICAgICAgICAgPEV4Y2xhbWF0aW9uQ2lyY2xlRmlsbGVkIC8+eycgJ31cbiAgICAgICAgICAgICAgICAgIHt0KCdJbmNvbXBhdGlibGUgRmlsdGVycyAoJWQpJywgaW5jb21wYXRpYmxlSW5kaWNhdG9ycy5sZW5ndGgpfVxuICAgICAgICAgICAgICAgIDwvVGl0bGU+fT5cbiAgICAgICAgICAgICAgPEluZGVudCBjc3M9e3sgcGFkZGluZ0JvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiAzIH19PlxuICAgICAgICAgICAgICAgIHtpbmNvbXBhdGlibGVJbmRpY2F0b3JzLm1hcChpbmRpY2F0b3IgPT4gKDxGaWx0ZXJJbmRpY2F0b3Iga2V5PXtpbmRpY2F0b3JLZXkoaW5kaWNhdG9yKX0gaW5kaWNhdG9yPXtpbmRpY2F0b3J9IG9uQ2xpY2s9e29uSGlnaGxpZ2h0RmlsdGVyU291cmNlfS8+KSl9XG4gICAgICAgICAgICAgIDwvSW5kZW50PlxuICAgICAgICAgICAgPC9Db2xsYXBzZS5QYW5lbD4pIDogbnVsbH1cbiAgICAgICAgICB7dW5zZXRJbmRpY2F0b3JzLmxlbmd0aCA/ICg8Q29sbGFwc2UuUGFuZWwga2V5PVwidW5zZXRcIiBoZWFkZXI9ezxUaXRsZSBib2xkIGNvbG9yPXt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0MX0+XG4gICAgICAgICAgICAgICAgICA8TWludXNDaXJjbGVGaWxsZWQgLz57JyAnfVxuICAgICAgICAgICAgICAgICAge3QoJ1Vuc2V0IEZpbHRlcnMgKCVkKScsIHVuc2V0SW5kaWNhdG9ycy5sZW5ndGgpfVxuICAgICAgICAgICAgICAgIDwvVGl0bGU+fSBkaXNhYmxlZD17IXVuc2V0SW5kaWNhdG9ycy5sZW5ndGh9PlxuICAgICAgICAgICAgICA8SW5kZW50IGNzcz17eyBwYWRkaW5nQm90dG9tOiB0aGVtZS5ncmlkVW5pdCAqIDMgfX0+XG4gICAgICAgICAgICAgICAge3Vuc2V0SW5kaWNhdG9ycy5tYXAoaW5kaWNhdG9yID0+ICg8RmlsdGVySW5kaWNhdG9yIGtleT17aW5kaWNhdG9yS2V5KGluZGljYXRvcil9IGluZGljYXRvcj17aW5kaWNhdG9yfSBvbkNsaWNrPXtvbkhpZ2hsaWdodEZpbHRlclNvdXJjZX0vPikpfVxuICAgICAgICAgICAgICA8L0luZGVudD5cbiAgICAgICAgICAgIDwvQ29sbGFwc2UuUGFuZWw+KSA6IG51bGx9XG4gICAgICAgIDwvQ29sbGFwc2U+XG4gICAgICA8L1Jlc2V0PlxuICAgIDwvUGFuZWw+KTtcbiAgICByZXR1cm4gKDxQb3BvdmVyIG92ZXJsYXlDbGFzc05hbWU9XCJmaWx0ZXJTdGF0dXNQb3BvdmVyXCIgY29udGVudD17Y29udGVudH0gdmlzaWJsZT17dmlzaWJsZX0gb25WaXNpYmxlQ2hhbmdlPXtoYW5kbGVQb3BvdmVyU3RhdHVzfSBwbGFjZW1lbnQ9XCJib3R0b21cIiB0cmlnZ2VyPVwiY2xpY2tcIj5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1BvcG92ZXI+KTtcbn07XG5leHBvcnQgZGVmYXVsdCBEZXRhaWxzUGFuZWxQb3BvdmVyO1xuIl19 */\") },\n  incompatibleIndicators.map((indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  unsetIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"unset\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.grayscale.light1 },\n    ___EmotionJSX(MinusCircleFilled, null), ' ',\n    t('Unset Filters (%d)', unsetIndicators.length)),\n    disabled: !unsetIndicators.length },\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  unsetIndicators.map((indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null)));\n\n\n\n  return ___EmotionJSX(Popover, { overlayClassName: \"filterStatusPopover\", content: content, visible: visible, onVisibleChange: handlePopoverStatus, placement: \"bottom\", trigger: \"click\" },\n  children);\n\n};\nexport default DetailsPanelPopover;","map":null,"metadata":{},"sourceType":"module"}