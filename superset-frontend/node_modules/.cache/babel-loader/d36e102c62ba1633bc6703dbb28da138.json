{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nfunction findParentId({ childId, layout = {} }) {\n  let parentId = null;\n\n  const ids = Object.keys(layout);\n  for (let i = 0; i <= ids.length - 1; i += 1) {\n    const id = ids[i];\n    const component = layout[id] || {};\n    if (\n    id !== childId &&\n    component.children &&\n    component.children.includes(childId))\n    {\n      parentId = id;\n      break;\n    }\n  }\n\n  return parentId;\n}\n\nconst cache = {};\nexport default function findParentIdWithCache({ childId, layout = {} }) {\n  if (cache[childId]) {\n    const lastParent = layout[cache[childId]] || {};\n    if (lastParent.children && lastParent.children.includes(childId)) {\n      return lastParent.id;\n    }\n  }\n  cache[childId] = findParentId({ childId, layout });\n  return cache[childId];\n}","map":null,"metadata":{},"sourceType":"module"}