{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s - 1}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m - 1}px;\n  padding: 4px 0 16px 0;\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\nconst SavedQueryPreviewModal = ({ fetchData, onHide, openInSqlLab, queries, savedQuery, show, addDangerToast, addSuccessToast }) => {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } = useQueryPreviewState({\n    queries,\n    currentQueryId: savedQuery.id,\n    fetchData });\n\n  return ___EmotionJSX(\"div\", { role: \"none\", onKeyUp: handleKeyPress },\n  ___EmotionJSX(StyledModal, { onHide: onHide, show: show, title: t('Query preview'), footer: [\n    ___EmotionJSX(Button, { key: \"previous-saved-query\", disabled: disablePrevious, onClick: () => handleDataChange(true) },\n    t('Previous')),\n\n    ___EmotionJSX(Button, { key: \"next-saved-query\", disabled: disableNext, onClick: () => handleDataChange(false) },\n    t('Next')),\n\n    ___EmotionJSX(Button, { key: \"open-in-sql-lab\", buttonStyle: \"primary\", onClick: () => openInSqlLab(savedQuery.id) },\n    t('Open in SQL Lab'))] },\n\n\n  ___EmotionJSX(QueryTitle, null, t('Query name')),\n  ___EmotionJSX(QueryLabel, null, savedQuery.label),\n  ___EmotionJSX(SyntaxHighlighterCopy, { language: \"sql\", addDangerToast: addDangerToast, addSuccessToast: addSuccessToast },\n  savedQuery.sql || '')));\n\n\n\n};\nexport default withToasts(SavedQueryPreviewModal);","map":null,"metadata":{},"sourceType":"module"}