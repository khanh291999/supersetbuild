{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  expanded: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number };\n\n\nconst defaultProps = {\n  selectedChartId: null };\n\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId })\n{\n  return (\n    ___EmotionJSX(CheckboxTree, {\n      showExpandAll: true,\n      expandOnClick: true,\n      showNodeIcon: false,\n      nodes: renderFilterScopeTreeNodes({ nodes, selectedChartId }),\n      checked: checked,\n      expanded: expanded,\n      onCheck: onCheck,\n      onExpand: onExpand,\n      onClick: NOOP,\n      icons: treeIcons }));\n\n\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}