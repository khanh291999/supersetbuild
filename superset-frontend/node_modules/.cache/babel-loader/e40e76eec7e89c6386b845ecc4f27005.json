{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport Button from 'src/components/Button';\nimport { styled } from '@superset-ui/core';\nimport { FiltersConfigModal } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigModal';\nimport { getFilterBarTestId } from '..';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst HeaderButton = styled(Button)`\n  padding: 0;\n`;\nexport const FilterConfigurationLink = ({ createNewOnOpen, children }) => {\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n  function close() {\n    setOpen(false);\n  }\n  async function submit(filterConfig) {\n    dispatch(await setFilterConfiguration(filterConfig));\n    close();\n  }\n  return ___EmotionJSX(React.Fragment, null,\n\n  ___EmotionJSX(HeaderButton, _extends({}, getFilterBarTestId('create-filter'), { buttonStyle: \"link\", buttonSize: \"xsmall\", onClick: () => setOpen(true) }),\n  children),\n\n  ___EmotionJSX(FiltersConfigModal, { isOpen: isOpen, onSave: submit, onCancel: close, createNewOnOpen: createNewOnOpen }));\n\n};\nexport default FilterConfigurationLink;","map":null,"metadata":{},"sourceType":"module"}