{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'src/components/Form';\n\nimport { recurseReactClone } from './utils';\nimport Field from './Field';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func,\n  item: PropTypes.object,\n  title: PropTypes.node,\n  compact: PropTypes.bool };\n\nconst defaultProps = {\n  compact: false,\n  title: null };\n\n\nexport default class Fieldset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val });\n\n  }\n\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact });\n\n    return (\n      ___EmotionJSX(Form, { componentClass: \"fieldset\", className: \"CRUD\", layout: \"vertical\" },\n      title && ___EmotionJSX(\"legend\", null, title),\n      recurseReactClone(this.props.children, Field, propExtender)));\n\n\n  }}\n\nFieldset.propTypes = propTypes;\nFieldset.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}