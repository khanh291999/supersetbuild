{"ast":null,"code":"import _merge from \"lodash/merge\";var _bootstrapData, _bootstrapData$common, _bootstrapData2, _bootstrapData2$commo, _bootstrapData$common2, _bootstrapData3, _bootstrapData3$commo; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { setConfig as setHotLoaderConfig } from 'react-hot-loader';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport moment from 'moment';\nimport { configure, supersetTheme } from '@superset-ui/core';\n\nimport setupClient from './setup/setupClient';\nimport setupColors from './setup/setupColors';\nimport setupFormatters from './setup/setupFormatters';\nif (process.env.WEBPACK_MODE === 'development') {\n  setHotLoaderConfig({ logLevel: 'debug', trackTailUpdates: false });\n}\nlet bootstrapData;\n// Configure translation\nif (typeof window !== 'undefined') {\n  const root = document.getElementById('app');\n  bootstrapData = root ?\n  JSON.parse(root.getAttribute('data-bootstrap') || '{}') :\n  {};\n  if (bootstrapData.common && bootstrapData.common.language_pack) {\n    const languagePack = bootstrapData.common.language_pack;\n    configure({ languagePack });\n    moment.locale(bootstrapData.common.locale);\n  } else\n  {\n    configure();\n  }\n} else\n{\n  configure();\n}\n// Setup SupersetClient\nsetupClient();\nsetupColors((_bootstrapData = bootstrapData) == null ? void 0 : (_bootstrapData$common = _bootstrapData.common) == null ? void 0 : _bootstrapData$common.extra_categorical_color_schemes, (_bootstrapData2 = bootstrapData) == null ? void 0 : (_bootstrapData2$commo = _bootstrapData2.common) == null ? void 0 : _bootstrapData2$commo.extra_sequential_color_schemes);\n// Setup number formatters\nsetupFormatters();\nexport const theme = _merge(supersetTheme, (_bootstrapData$common2 = (_bootstrapData3 = bootstrapData) == null ? void 0 : (_bootstrapData3$commo = _bootstrapData3.common) == null ? void 0 : _bootstrapData3$commo.theme_overrides) != null ? _bootstrapData$common2 : {});","map":null,"metadata":{},"sourceType":"module"}