{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { ClassNames } from '@emotion/react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TIME_PICKER_HELPER = ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATETIME\"),\n___EmotionJSX(\"p\", null, t('Return to specific datetime.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, \"datetime([string])\")),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetime(\"2020-03-01 12:00:00\")\ndatetime(\"now\")\ndatetime(\"last year\")`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATEADD\"),\n___EmotionJSX(\"p\", null, t('Moves the given set of dates by a specified interval.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `dateadd([datetime], [integer], [dateunit])\ndateunit = (year | quarter | month | week | day | hour | minute | second)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `dateadd(datetime(\"today\"), -13, day)\ndateadd(datetime(\"2020-03-01\"), 2, day)`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"DATETRUNC\"),\n___EmotionJSX(\"p\", null,\nt('Truncates the specified date to the accuracy specified by the date unit.')),\n\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetrunc([datetime], [dateunit])\ndateunit = (year | month | week)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `datetrunc(datetime(\"2020-03-01\"), week)\ndatetrunc(datetime(\"2020-03-01\"), month)`))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"LASTDAY\"),\n___EmotionJSX(\"p\", null, t('Get the last date by the date unit.')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `lastday([datetime], [dateunit])\ndateunit = (year | month | week)`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, \"lastday(datetime(\\\"today\\\"), month)\"))),\n\n\n___EmotionJSX(\"div\", null,\n___EmotionJSX(\"h3\", null, \"HOLIDAY\"),\n___EmotionJSX(\"p\", null, t('Get the specify date for the holiday')),\n___EmotionJSX(\"h4\", null, t('Syntax')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `holiday([string])\nholiday([holiday string], [datetime])\nholiday([holiday string], [datetime], [country name])`)),\n\n___EmotionJSX(\"h4\", null, t('Example')),\n___EmotionJSX(\"pre\", null,\n___EmotionJSX(\"code\", null, `holiday(\"new year\")\nholiday(\"christmas\", datetime(\"2019\"))\nholiday(\"christmas\", dateadd(datetime(\"2019\"), 1, year))\nholiday(\"christmas\", datetime(\"2 years ago\"))\nholiday(\"Easter Monday\", datetime(\"2019\"), \"UK\")`))));\n\n\n\nconst StyledTooltip = (props) => {\n  const theme = useTheme();\n  return ___EmotionJSX(ClassNames, null,\n  ({ css }) => ___EmotionJSX(Tooltip, _extends({ overlayClassName: css`\n            .ant-tooltip-content {\n              min-width: ${theme.gridUnit * 125}px;\n              max-height: 410px;\n              overflow-y: scroll;\n\n              .ant-tooltip-inner {\n                max-width: ${theme.gridUnit * 125}px;\n                h3 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                h4 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                pre {\n                  border: none;\n                  text-align: left;\n                  word-break: break-word;\n                  font-size: ${theme.typography.sizes.s}px;\n                }\n              }\n            }\n          ` }, props)));\n\n};\nexport default function DateFunctionTooltip(props) {\n  return ___EmotionJSX(StyledTooltip, _extends({ title: TIME_PICKER_HELPER }, props));\n}","map":null,"metadata":{},"sourceType":"module"}