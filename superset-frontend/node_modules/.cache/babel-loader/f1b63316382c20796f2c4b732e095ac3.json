{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PlusOutlined } from '@ant-design/icons';\nimport { styled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport Icons from 'src/components/Icons';\nimport { REMOVAL_DELAY_SECS } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FILTER_WIDTH = 180;\nexport const StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\nexport const StyledFilterTitle = styled.span`\n  width: 100%;\n  white-space: normal;\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\nexport const StyledAddFilterBox = styled.div`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\nexport const StyledTrashIcon = styled(Icons.Trash)`\n  color: ${({ theme }) => theme.colors.grayscale.light3};\n`;\nexport const FilterTabTitle = styled.span`\n  transition: color ${({ theme }) => theme.transitionTiming}s;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  @keyframes tabTitleRemovalAnimation {\n    0%,\n    90% {\n      opacity: 1;\n    }\n    95%,\n    100% {\n      opacity: 0;\n    }\n  }\n\n  &.removed {\n    color: ${({ theme }) => theme.colors.warning.dark1};\n    transform-origin: top;\n    animation-name: tabTitleRemovalAnimation;\n    animation-duration: ${REMOVAL_DELAY_SECS}s;\n  }\n\n  &.errored > span {\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n`;\nconst StyledWarning = styled(Icons.Warning)`\n  color: ${({ theme }) => theme.colors.error.base};\n  &.anticon {\n    margin-right: 0;\n  }\n`;\nconst FilterTabsContainer = styled(LineEditableTabs)`\n  ${({ theme }) => `\n    height: 100%;\n\n    & > .ant-tabs-content-holder {\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding-right: ${theme.gridUnit * 4}px;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n\n    & > .ant-tabs-content-holder ~ .ant-tabs-content-holder {\n      border: none;\n    }\n\n    &.ant-tabs-card > .ant-tabs-nav .ant-tabs-ink-bar {\n      visibility: hidden;\n    }\n\n    &.ant-tabs-left\n      > .ant-tabs-content-holder\n      > .ant-tabs-content\n      > .ant-tabs-tabpane {\n      padding-left: ${theme.gridUnit * 4}px;\n      margin-top: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-tabs-nav-list {\n      overflow-x: hidden;\n      overflow-y: auto;\n      padding-top: ${theme.gridUnit * 2}px;\n      padding-right: ${theme.gridUnit}px;\n      padding-bottom: ${theme.gridUnit * 3}px;\n      padding-left: ${theme.gridUnit * 3}px;\n      width: 270px;\n    }\n\n    // extra selector specificity:\n    &.ant-tabs-card > .ant-tabs-nav .ant-tabs-tab {\n      min-width: ${FILTER_WIDTH}px;\n      margin: 0 ${theme.gridUnit * 2}px 0 0;\n      padding: ${theme.gridUnit}px\n        ${theme.gridUnit * 2}px;\n      &:hover,\n      &-active {\n        color: ${theme.colors.grayscale.dark1};\n        border-radius: ${theme.borderRadius}px;\n        background-color: ${theme.colors.secondary.light4};\n\n        .ant-tabs-tab-remove > span {\n          color: ${theme.colors.grayscale.base};\n          transition: all 0.3s;\n        }\n      }\n    }\n\n    .ant-tabs-tab-btn {\n      text-align: left;\n      justify-content: space-between;\n      text-transform: unset;\n    }\n\n    .ant-tabs-nav-more {\n      display: none;\n    }\n\n    .ant-tabs-extra-content {\n      width: 100%;\n    }\n  `}\n`;\nconst StyledHeader = styled.div`\n  ${({ theme }) => `\n    color: ${theme.colors.grayscale.dark1};\n    font-size: ${theme.typography.sizes.l}px;\n    padding-top: ${theme.gridUnit * 4}px;\n    padding-right: ${theme.gridUnit * 4}px;\n    padding-left: ${theme.gridUnit * 4}px;\n  `}\n`;\nconst FilterTabs = ({ onEdit, getFilterTitle, onChange, currentFilterId, filterIds = [], erroredFilters = [], removedFilters = [], restoreFilter, children }) => ___EmotionJSX(FilterTabsContainer, { id: \"native-filters-tabs\", type: \"editable-card\", tabPosition: \"left\", onChange: onChange, activeKey: currentFilterId, onEdit: onEdit, hideAdd: true, tabBarExtraContent: {\n    left: ___EmotionJSX(StyledHeader, null, t('Filters')),\n    right: ___EmotionJSX(StyledAddFilterBox, { onClick: () => {\n        onEdit('', 'add');\n        setTimeout(() => {\n          const element = document.getElementById('native-filters-tabs');\n          if (element) {\n            const navList = element.getElementsByClassName('ant-tabs-nav-list')[0];\n            navList.scrollTop = navList.scrollHeight;\n          }\n        }, 0);\n      } },\n    ___EmotionJSX(PlusOutlined, null), ' ',\n    ___EmotionJSX(\"span\", { \"aria-label\": \"Add filter\" },\n    t('Add filter'))) } },\n\n\n\nfilterIds.map((id) => {\n  const showErroredFilter = erroredFilters.includes(id);\n  const filterName = getFilterTitle(id);\n  return ___EmotionJSX(LineEditableTabs.TabPane, { tab: ___EmotionJSX(FilterTabTitle, { className: removedFilters[id] ?\n      'removed' :\n      showErroredFilter ?\n      'errored' :\n      '' },\n    ___EmotionJSX(StyledFilterTitle, null,\n    removedFilters[id] ? t('(Removed)') : filterName),\n\n    !removedFilters[id] && showErroredFilter && ___EmotionJSX(StyledWarning, null),\n    removedFilters[id] && ___EmotionJSX(StyledSpan, { role: \"button\", tabIndex: 0, onClick: () => restoreFilter(id) },\n    t('Undo?'))),\n\n    key: id, closeIcon: removedFilters[id] ? ___EmotionJSX(React.Fragment, null) : ___EmotionJSX(StyledTrashIcon, null) },\n\n  // @ts-ignore\n  children(id));\n\n}));\n\nexport default FilterTabs;","map":null,"metadata":{},"sourceType":"module"}