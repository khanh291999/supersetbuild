{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-bottom: 0;\n`;\nconst CheckboxHalf = styled(Icons.CheckboxHalf)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\nconst CheckboxOff = styled(Icons.CheckboxOff)`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  cursor: pointer;\n`;\nconst CheckboxOn = styled(Icons.CheckboxOn)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  cursor: pointer;\n`;\nconst HiddenInput = styled.input`\n  &[type='checkbox'] {\n    cursor: pointer;\n    opacity: 0;\n    position: absolute;\n    left: 3px;\n    margin: 0;\n    top: 4px;\n  }\n`;\nconst InputContainer = styled.div`\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n`;\nconst IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(({ indeterminate, id, checked, onChange, title = '', labelText = '' }, ref) => {\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(InputContainer, null,\n  indeterminate && ___EmotionJSX(CheckboxHalf, null),\n  !indeterminate && checked && ___EmotionJSX(CheckboxOn, null),\n  !indeterminate && !checked && ___EmotionJSX(CheckboxOff, null),\n  ___EmotionJSX(HiddenInput, { name: id, id: id, type: \"checkbox\", ref: resolvedRef, checked: checked, onChange: onChange })),\n\n  ___EmotionJSX(CheckboxLabel, { title: title, htmlFor: id },\n  labelText));\n\n\n});\nexport default IndeterminateCheckbox;","map":null,"metadata":{},"sourceType":"module"}