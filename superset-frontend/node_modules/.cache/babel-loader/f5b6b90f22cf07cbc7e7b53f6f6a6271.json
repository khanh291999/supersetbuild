{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport copyTextToClipboard from 'src/utils/copy';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useUrlShortener } from 'src/common/hooks/useUrlShortener';\nimport EmbedCodeButton from './EmbedCodeButton';\nimport { exportChart, getExploreLongUrl } from '../exploreUtils';\nimport ExploreAdditionalActionsMenu from './ExploreAdditionalActionsMenu';import { jsx as ___EmotionJSX } from \"@emotion/react\";var _ref = process.env.NODE_ENV === \"production\" ? { name: \"yc7s2v\", styles: \"display:flex;align-items:center;&:focus, &:focus:active{outline:0;}\" } : { name: \"1ssm59b-ActionButton\", styles: \"display:flex;align-items:center;&:focus, &:focus:active{outline:0;};label:ActionButton;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zdXBlcnNldC1mcm9udGVuZC9zcmMvZXhwbG9yZS9jb21wb25lbnRzL0V4cGxvcmVBY3Rpb25CdXR0b25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ3NDIiwiZmlsZSI6Ii9zdXBlcnNldC1mcm9udGVuZC9zcmMvZXhwbG9yZS9jb21wb25lbnRzL0V4cGxvcmVBY3Rpb25CdXR0b25zLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IHQgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xuaW1wb3J0IGNvcHlUZXh0VG9DbGlwYm9hcmQgZnJvbSAnc3JjL3V0aWxzL2NvcHknO1xuaW1wb3J0IHdpdGhUb2FzdHMgZnJvbSAnc3JjL2NvbXBvbmVudHMvTWVzc2FnZVRvYXN0cy93aXRoVG9hc3RzJztcbmltcG9ydCB7IHVzZVVybFNob3J0ZW5lciB9IGZyb20gJ3NyYy9jb21tb24vaG9va3MvdXNlVXJsU2hvcnRlbmVyJztcbmltcG9ydCBFbWJlZENvZGVCdXR0b24gZnJvbSAnLi9FbWJlZENvZGVCdXR0b24nO1xuaW1wb3J0IHsgZXhwb3J0Q2hhcnQsIGdldEV4cGxvcmVMb25nVXJsIH0gZnJvbSAnLi4vZXhwbG9yZVV0aWxzJztcbmltcG9ydCBFeHBsb3JlQWRkaXRpb25hbEFjdGlvbnNNZW51IGZyb20gJy4vRXhwbG9yZUFkZGl0aW9uYWxBY3Rpb25zTWVudSc7XG5jb25zdCBBY3Rpb25CdXR0b24gPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IGljb24sIHRleHQsIHRvb2x0aXAsIGNsYXNzTmFtZSwgb25Ub29sdGlwVmlzaWJpbGl0eUNoYW5nZSwgLi4ucmVzdCB9ID0gcHJvcHM7XG4gICAgcmV0dXJuICg8VG9vbHRpcCBpZD17YCR7aWNvbn0tdG9vbHRpcGB9IHBsYWNlbWVudD1cInRvcFwiIHRpdGxlPXt0b29sdGlwfSB0cmlnZ2VyPXtbJ2hvdmVyJ119IG9uVmlzaWJsZUNoYW5nZT17b25Ub29sdGlwVmlzaWJpbGl0eUNoYW5nZX0+XG4gICAgICA8ZGl2IHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gY3NzPXt7XG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICcmOmZvY3VzLCAmOmZvY3VzOmFjdGl2ZSc6IHsgb3V0bGluZTogMCB9LFxuICAgICAgICB9fSBjbGFzc05hbWU9e2NsYXNzTmFtZSB8fCAnYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSd9IHN0eWxlPXt7IGhlaWdodDogMzAgfX0gey4uLnJlc3R9PlxuICAgICAgICB7aWNvbn1cbiAgICAgICAge3RleHQgJiYgPHNwYW4gc3R5bGU9e3sgbWFyZ2luTGVmdDogNSB9fT57dGV4dH08L3NwYW4+fVxuICAgICAgPC9kaXY+XG4gICAgPC9Ub29sdGlwPik7XG59O1xuY29uc3QgRXhwbG9yZUFjdGlvbkJ1dHRvbnMgPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IGFjdGlvbnMsIGNhbkRvd25sb2FkQ1NWLCBjaGFydFN0YXR1cywgbGF0ZXN0UXVlcnlGb3JtRGF0YSwgc2xpY2UsIGFkZERhbmdlclRvYXN0LCB9ID0gcHJvcHM7XG4gICAgY29uc3QgY29weVRvb2x0aXBUZXh0ID0gdCgnQ29weSBjaGFydCBVUkwgdG8gY2xpcGJvYXJkJyk7XG4gICAgY29uc3QgW2NvcHlUb29sdGlwLCBzZXRDb3B5VG9vbHRpcF0gPSB1c2VTdGF0ZShjb3B5VG9vbHRpcFRleHQpO1xuICAgIGNvbnN0IGxvbmdVcmwgPSBnZXRFeHBsb3JlTG9uZ1VybChsYXRlc3RRdWVyeUZvcm1EYXRhKTtcbiAgICBjb25zdCBnZXRTaG9ydFVybCA9IHVzZVVybFNob3J0ZW5lcihsb25nVXJsKTtcbiAgICBjb25zdCBkb0NvcHlMaW5rID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgc2V0Q29weVRvb2x0aXAodCgnTG9hZGluZy4uLicpKTtcbiAgICAgICAgICAgIGNvbnN0IHNob3J0VXJsID0gYXdhaXQgZ2V0U2hvcnRVcmwoKTtcbiAgICAgICAgICAgIGF3YWl0IGNvcHlUZXh0VG9DbGlwYm9hcmQoc2hvcnRVcmwpO1xuICAgICAgICAgICAgc2V0Q29weVRvb2x0aXAodCgnQ29waWVkIHRvIGNsaXBib2FyZCEnKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBzZXRDb3B5VG9vbHRpcCh0KCdTb3JyeSwgeW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgY29weWluZy4nKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGRvU2hhcmVFbWFpbCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHN1YmplY3QgPSB0KCdTdXBlcnNldCBDaGFydCcpO1xuICAgICAgICAgICAgY29uc3Qgc2hvcnRVcmwgPSBhd2FpdCBnZXRTaG9ydFVybCgpO1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IHQoJyVzJXMnLCAnQ2hlY2sgb3V0IHRoaXMgY2hhcnQ6ICcsIHNob3J0VXJsKTtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYG1haWx0bzo/U3ViamVjdD0ke3N1YmplY3R9JTIwJkJvZHk9JHtib2R5fWA7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBhZGREYW5nZXJUb2FzdCh0KCdTb3JyeSwgc29tZXRoaW5nIHdlbnQgd3JvbmcuIFRyeSBhZ2FpbiBsYXRlci4nKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGRvRXhwb3J0Q1NWID0gY2FuRG93bmxvYWRDU1ZcbiAgICAgICAgPyBleHBvcnRDaGFydC5iaW5kKHRoaXMsIHtcbiAgICAgICAgICAgIGZvcm1EYXRhOiBsYXRlc3RRdWVyeUZvcm1EYXRhLFxuICAgICAgICAgICAgcmVzdWx0VHlwZTogJ3Jlc3VsdHMnLFxuICAgICAgICAgICAgcmVzdWx0Rm9ybWF0OiAnY3N2JyxcbiAgICAgICAgfSlcbiAgICAgICAgOiBudWxsO1xuICAgIGNvbnN0IGRvRXhwb3J0SnNvbiA9IGV4cG9ydENoYXJ0LmJpbmQodGhpcywge1xuICAgICAgICBmb3JtRGF0YTogbGF0ZXN0UXVlcnlGb3JtRGF0YSxcbiAgICAgICAgcmVzdWx0VHlwZTogJ3Jlc3VsdHMnLFxuICAgICAgICByZXN1bHRGb3JtYXQ6ICdqc29uJyxcbiAgICB9KTtcbiAgICBjb25zdCBleHBvcnRUb0NTVkNsYXNzZXMgPSBjeCgnYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbScsIHtcbiAgICAgICAgZGlzYWJsZWQ6ICFjYW5Eb3dubG9hZENTVixcbiAgICB9KTtcbiAgICByZXR1cm4gKDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwIHJlc3VsdHNcIiByb2xlPVwiZ3JvdXBcIiBkYXRhLXRlc3Q9XCJidG4tZ3JvdXAtcmVzdWx0c1wiPlxuICAgICAge2xhdGVzdFF1ZXJ5Rm9ybURhdGEgJiYgKDw+XG4gICAgICAgICAgPEFjdGlvbkJ1dHRvbiBpY29uPXs8SWNvbnMuTGluayBpY29uU2l6ZT1cImxcIi8+fSB0b29sdGlwPXtjb3B5VG9vbHRpcH0gb25DbGljaz17ZG9Db3B5TGlua30gZGF0YS10ZXN0PVwic2hvcnQtbGluay1idXR0b25cIiBvblRvb2x0aXBWaXNpYmlsaXR5Q2hhbmdlPXt2YWx1ZSA9PiAhdmFsdWUgJiYgc2V0VGltZW91dCgoKSA9PiBzZXRDb3B5VG9vbHRpcChjb3B5VG9vbHRpcFRleHQpLCAyMDApfS8+XG4gICAgICAgICAgPEFjdGlvbkJ1dHRvbiBpY29uPXs8SWNvbnMuRW1haWwgaWNvblNpemU9XCJsXCIvPn0gdG9vbHRpcD17dCgnU2hhcmUgY2hhcnQgYnkgZW1haWwnKX0gb25DbGljaz17ZG9TaGFyZUVtYWlsfS8+XG4gICAgICAgICAgPEVtYmVkQ29kZUJ1dHRvbiBsYXRlc3RRdWVyeUZvcm1EYXRhPXtsYXRlc3RRdWVyeUZvcm1EYXRhfS8+XG4gICAgICAgICAgPEFjdGlvbkJ1dHRvbiBpY29uPXs8SWNvbnMuRmlsZVRleHRPdXRsaW5lZCBpY29uU2l6ZT1cIm1cIi8+fSB0ZXh0PVwiLkpTT05cIiB0b29sdGlwPXt0KCdFeHBvcnQgdG8gLkpTT04gZm9ybWF0Jyl9IG9uQ2xpY2s9e2RvRXhwb3J0SnNvbn0vPlxuICAgICAgICAgIDxBY3Rpb25CdXR0b24gaWNvbj17PEljb25zLkZpbGVFeGNlbE91dGxpbmVkIGljb25TaXplPVwibVwiLz59IHRleHQ9XCIuQ1NWXCIgdG9vbHRpcD17dCgnRXhwb3J0IHRvIC5DU1YgZm9ybWF0Jyl9IG9uQ2xpY2s9e2RvRXhwb3J0Q1NWfSBjbGFzc05hbWU9e2V4cG9ydFRvQ1NWQ2xhc3Nlc30vPlxuICAgICAgICA8Lz4pfVxuICAgICAgPEV4cGxvcmVBZGRpdGlvbmFsQWN0aW9uc01lbnUgbGF0ZXN0UXVlcnlGb3JtRGF0YT17bGF0ZXN0UXVlcnlGb3JtRGF0YX0gY2hhcnRTdGF0dXM9e2NoYXJ0U3RhdHVzfSBvbk9wZW5JbkVkaXRvcj17YWN0aW9ucy5yZWRpcmVjdFNRTExhYn0gb25PcGVuUHJvcGVydGllc01vZGFsPXthY3Rpb25zLm9wZW5Qcm9wZXJ0aWVzTW9kYWx9IHNsaWNlPXtzbGljZX0vPlxuICAgIDwvZGl2Pik7XG59O1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRvYXN0cyhFeHBsb3JlQWN0aW9uQnV0dG9ucyk7XG4iXX0= */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nconst ActionButton = (props) => {\n  const { icon, text, tooltip, className, onTooltipVisibilityChange, ...rest } = props;\n  return ___EmotionJSX(Tooltip, { id: `${icon}-tooltip`, placement: \"top\", title: tooltip, trigger: ['hover'], onVisibleChange: onTooltipVisibilityChange },\n  ___EmotionJSX(\"div\", _extends({ role: \"button\", tabIndex: 0, css: _ref,\n\n\n\n    className: className || 'btn btn-default btn-sm', style: { height: 30 } }, rest),\n  icon,\n  text && ___EmotionJSX(\"span\", { style: { marginLeft: 5 } }, text)));\n\n\n};\nconst ExploreActionButtons = (props) => {\n  const { actions, canDownloadCSV, chartStatus, latestQueryFormData, slice, addDangerToast } = props;\n  const copyTooltipText = t('Copy chart URL to clipboard');\n  const [copyTooltip, setCopyTooltip] = useState(copyTooltipText);\n  const longUrl = getExploreLongUrl(latestQueryFormData);\n  const getShortUrl = useUrlShortener(longUrl);\n  const doCopyLink = async () => {\n    try {\n      setCopyTooltip(t('Loading...'));\n      const shortUrl = await getShortUrl();\n      await copyTextToClipboard(shortUrl);\n      setCopyTooltip(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      setCopyTooltip(t('Sorry, your browser does not support copying.'));\n    }\n  };\n  const doShareEmail = async () => {\n    try {\n      const subject = t('Superset Chart');\n      const shortUrl = await getShortUrl();\n      const body = t('%s%s', 'Check out this chart: ', shortUrl);\n      window.location.href = `mailto:?Subject=${subject}%20&Body=${body}`;\n    }\n    catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  };\n  const doExportCSV = canDownloadCSV ?\n  exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'csv' }) :\n\n  null;\n  const doExportJson = exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'json' });\n\n  const exportToCSVClasses = cx('btn btn-default btn-sm', {\n    disabled: !canDownloadCSV });\n\n  return ___EmotionJSX(\"div\", { className: \"btn-group results\", role: \"group\" },\n  latestQueryFormData && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.Link, { iconSize: \"l\" }), tooltip: copyTooltip, onClick: doCopyLink, onTooltipVisibilityChange: (value) => !value && setTimeout(() => setCopyTooltip(copyTooltipText), 200) }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.Email, { iconSize: \"l\" }), tooltip: t('Share chart by email'), onClick: doShareEmail }),\n  ___EmotionJSX(EmbedCodeButton, { latestQueryFormData: latestQueryFormData }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.FileTextOutlined, { iconSize: \"m\" }), text: \".JSON\", tooltip: t('Export to .JSON format'), onClick: doExportJson }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.FileExcelOutlined, { iconSize: \"m\" }), text: \".CSV\", tooltip: t('Export to .CSV format'), onClick: doExportCSV, className: exportToCSVClasses })),\n\n  ___EmotionJSX(ExploreAdditionalActionsMenu, { latestQueryFormData: latestQueryFormData, chartStatus: chartStatus, onOpenInEditor: actions.redirectSQLLab, onOpenPropertiesModal: actions.openPropertiesModal, slice: slice }));\n\n};\nexport default withToasts(ExploreActionButtons);","map":null,"metadata":{},"sourceType":"module"}