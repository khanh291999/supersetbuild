{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\nimport { PreviousCalendarWeek, PreviousCalendarMonth, PreviousCalendarYear } from 'src/explore/components/controls/DateFilterControl/types';\nexport const FRAME_OPTIONS = [\n{ value: 'Common', label: t('Last') },\n{ value: 'Calendar', label: t('Previous') },\n{ value: 'Custom', label: t('Custom') },\n{ value: 'Advanced', label: t('Advanced') },\n{ value: 'No filter', label: t('No filter') }];\n\nexport const COMMON_RANGE_OPTIONS = [\n{ value: 'Last day', label: t('last day') },\n{ value: 'Last week', label: t('last week') },\n{ value: 'Last month', label: t('last month') },\n{ value: 'Last quarter', label: t('last quarter') },\n{ value: 'Last year', label: t('last year') }];\n\nexport const COMMON_RANGE_VALUES_SET = new Set(COMMON_RANGE_OPTIONS.map(({ value }) => value));\nexport const CALENDAR_RANGE_OPTIONS = [\n{ value: PreviousCalendarWeek, label: t('previous calendar week') },\n{ value: PreviousCalendarMonth, label: t('previous calendar month') },\n{ value: PreviousCalendarYear, label: t('previous calendar year') }];\n\nexport const CALENDAR_RANGE_VALUES_SET = new Set(CALENDAR_RANGE_OPTIONS.map(({ value }) => value));\nconst GRAIN_OPTIONS = [\n{ value: 'second', label: (rel) => `${t('Seconds')} ${rel}` },\n{ value: 'minute', label: (rel) => `${t('Minutes')} ${rel}` },\n{ value: 'hour', label: (rel) => `${t('Hours')} ${rel}` },\n{ value: 'day', label: (rel) => `${t('Days')} ${rel}` },\n{ value: 'week', label: (rel) => `${t('Weeks')} ${rel}` },\n{ value: 'month', label: (rel) => `${t('Months')} ${rel}` },\n{ value: 'quarter', label: (rel) => `${t('Quarters')} ${rel}` },\n{ value: 'year', label: (rel) => `${t('Years')} ${rel}` }];\n\nexport const SINCE_GRAIN_OPTIONS = GRAIN_OPTIONS.map((item) => ({\n  value: item.value,\n  label: item.label(t('Before')) }));\n\nexport const UNTIL_GRAIN_OPTIONS = GRAIN_OPTIONS.map((item) => ({\n  value: item.value,\n  label: item.label(t('After')) }));\n\nexport const SINCE_MODE_OPTIONS = [\n{ value: 'specific', label: t('Specific Date/Time') },\n{ value: 'relative', label: t('Relative Date/Time') },\n{ value: 'now', label: t('Now') },\n{ value: 'today', label: t('Midnight') }];\n\nexport const UNTIL_MODE_OPTIONS = SINCE_MODE_OPTIONS.slice();\nexport const COMMON_RANGE_SET = new Set([\n'Last day',\n'Last week',\n'Last month',\n'Last quarter',\n'Last year']);\n\nexport const CALENDAR_RANGE_SET = new Set([\nPreviousCalendarWeek,\nPreviousCalendarMonth,\nPreviousCalendarYear]);\n\nexport const MOMENT_FORMAT = 'YYYY-MM-DD[T]HH:mm:ss';\nexport const SEVEN_DAYS_AGO = moment().\nutc().\nstartOf('day').\nsubtract(7, 'days').\nformat(MOMENT_FORMAT);\nexport const MIDNIGHT = moment().utc().startOf('day').format(MOMENT_FORMAT);","map":null,"metadata":{},"sourceType":"module"}