"use strict";

exports.__esModule = true;
var _exportNames = {
  ControlFormItem: true
};
exports.ControlFormItem = ControlFormItem;
exports.default = void 0;

var _react = require("@emotion/react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react2 = _interopRequireWildcard(require("react"));

var _core = require("@superset-ui/core");

var _ControlHeader = _interopRequireDefault(require("../ControlHeader"));

var _InfoTooltipWithTrigger = _interopRequireDefault(require("../InfoTooltipWithTrigger"));

var _controls = require("./controls");

Object.keys(_controls).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _controls[key]) return;
  exports[key] = _controls[key];
});

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Accept `false` or `0`, but not empty string.
 */
function isEmptyValue(value) {
  return value == null || value === '';
}

function ControlFormItem({
  name,
  label,
  description,
  width,
  validators,
  required,
  onChange,
  value: initialValue,
  defaultValue,
  controlType,
  ...props
}) {
  const {
    gridUnit
  } = (0, _core.useTheme)();
  const [hovered, setHovered] = (0, _react2.useState)(false);
  const [value, setValue] = (0, _react2.useState)(initialValue === undefined ? defaultValue : initialValue);
  const [validationErrors, setValidationErrors] = (0, _react2.useState)();

  const handleChange = e => {
    const fieldValue = e && typeof e === 'object' && 'target' in e ? e.target.type === 'checkbox' || e.target.type === 'radio' ? e.target.checked : e.target.value : e;
    const errors = (validators == null ? void 0 : validators.map(validator => !required && isEmptyValue(fieldValue) ? false : validator(fieldValue)).filter(x => !!x)) || [];
    setValidationErrors(errors);
    setValue(fieldValue);

    if (errors.length === 0 && onChange) {
      onChange(fieldValue);
    }
  };

  const Control = _controls.ControlFormItemComponents[controlType];
  return (0, _react.jsx)("div", {
    css: /*#__PURE__*/(0, _react.css)({
      margin: 2 * gridUnit,
      width
    }, process.env.NODE_ENV === "production" ? "" : ";label:ControlFormItem;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbnRyb2xGb3JtL0NvbnRyb2xGb3JtSXRlbS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUZNIiwiZmlsZSI6Ii4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbnRyb2xGb3JtL0NvbnRyb2xGb3JtSXRlbS50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIEZ1bmN0aW9uQ29tcG9uZW50RWxlbWVudCwgQ2hhbmdlRXZlbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBKc29uVmFsdWUsIHVzZVRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IENvbnRyb2xIZWFkZXIsIHsgQ29udHJvbEhlYWRlclByb3BzIH0gZnJvbSAnLi4vQ29udHJvbEhlYWRlcic7XG5pbXBvcnQgSW5mb1Rvb2x0aXBXaXRoVHJpZ2dlciBmcm9tICcuLi9JbmZvVG9vbHRpcFdpdGhUcmlnZ2VyJztcbmltcG9ydCB7IENvbnRyb2xGb3JtSXRlbUNvbXBvbmVudHMsIENvbnRyb2xGb3JtSXRlbVNwZWMgfSBmcm9tICcuL2NvbnRyb2xzJztcblxuZXhwb3J0ICogZnJvbSAnLi9jb250cm9scyc7XG5cbmV4cG9ydCB0eXBlIENvbnRyb2xGb3JtSXRlbVByb3BzID0gQ29udHJvbEZvcm1JdGVtU3BlYyAmIHtcbiAgbmFtZTogc3RyaW5nO1xuICBvbkNoYW5nZT86IChmaWVsZFZhbHVlOiBKc29uVmFsdWUpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgdHlwZSBDb250cm9sRm9ybUl0ZW1Ob2RlID0gRnVuY3Rpb25Db21wb25lbnRFbGVtZW50PENvbnRyb2xGb3JtSXRlbVByb3BzPjtcblxuLyoqXG4gKiBBY2NlcHQgYGZhbHNlYCBvciBgMGAsIGJ1dCBub3QgZW1wdHkgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBpc0VtcHR5VmFsdWUodmFsdWU/OiBKc29uVmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgfHwgdmFsdWUgPT09ICcnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ29udHJvbEZvcm1JdGVtKHtcbiAgbmFtZSxcbiAgbGFiZWwsXG4gIGRlc2NyaXB0aW9uLFxuICB3aWR0aCxcbiAgdmFsaWRhdG9ycyxcbiAgcmVxdWlyZWQsXG4gIG9uQ2hhbmdlLFxuICB2YWx1ZTogaW5pdGlhbFZhbHVlLFxuICBkZWZhdWx0VmFsdWUsXG4gIGNvbnRyb2xUeXBlLFxuICAuLi5wcm9wc1xufTogQ29udHJvbEZvcm1JdGVtUHJvcHMpIHtcbiAgY29uc3QgeyBncmlkVW5pdCB9ID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgW2hvdmVyZWQsIHNldEhvdmVyZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKGluaXRpYWxWYWx1ZSA9PT0gdW5kZWZpbmVkID8gZGVmYXVsdFZhbHVlIDogaW5pdGlhbFZhbHVlKTtcbiAgY29uc3QgW3ZhbGlkYXRpb25FcnJvcnMsIHNldFZhbGlkYXRpb25FcnJvcnNdID1cbiAgICB1c2VTdGF0ZTxDb250cm9sSGVhZGVyUHJvcHNbJ3ZhbGlkYXRpb25FcnJvcnMnXT4oKTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZTogQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4gfCBKc29uVmFsdWUpID0+IHtcbiAgICBjb25zdCBmaWVsZFZhbHVlID1cbiAgICAgIGUgJiYgdHlwZW9mIGUgPT09ICdvYmplY3QnICYmICd0YXJnZXQnIGluIGVcbiAgICAgICAgPyBlLnRhcmdldC50eXBlID09PSAnY2hlY2tib3gnIHx8IGUudGFyZ2V0LnR5cGUgPT09ICdyYWRpbydcbiAgICAgICAgICA/IGUudGFyZ2V0LmNoZWNrZWRcbiAgICAgICAgICA6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIDogZTtcbiAgICBjb25zdCBlcnJvcnMgPVxuICAgICAgKHZhbGlkYXRvcnNcbiAgICAgICAgPy5tYXAodmFsaWRhdG9yID0+ICghcmVxdWlyZWQgJiYgaXNFbXB0eVZhbHVlKGZpZWxkVmFsdWUpID8gZmFsc2UgOiB2YWxpZGF0b3IoZmllbGRWYWx1ZSkpKVxuICAgICAgICAuZmlsdGVyKHggPT4gISF4KSBhcyBzdHJpbmdbXSkgfHwgW107XG4gICAgc2V0VmFsaWRhdGlvbkVycm9ycyhlcnJvcnMpO1xuICAgIHNldFZhbHVlKGZpZWxkVmFsdWUpO1xuICAgIGlmIChlcnJvcnMubGVuZ3RoID09PSAwICYmIG9uQ2hhbmdlKSB7XG4gICAgICBvbkNoYW5nZShmaWVsZFZhbHVlIGFzIEpzb25WYWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IENvbnRyb2wgPSBDb250cm9sRm9ybUl0ZW1Db21wb25lbnRzW2NvbnRyb2xUeXBlXTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17e1xuICAgICAgICBtYXJnaW46IDIgKiBncmlkVW5pdCxcbiAgICAgICAgd2lkdGgsXG4gICAgICB9fVxuICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRIb3ZlcmVkKHRydWUpfVxuICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiBzZXRIb3ZlcmVkKGZhbHNlKX1cbiAgICA+XG4gICAgICB7Y29udHJvbFR5cGUgPT09ICdDaGVja2JveCcgPyAoXG4gICAgICAgIDxDb250cm9sRm9ybUl0ZW1Db21wb25lbnRzLkNoZWNrYm94IGNoZWNrZWQ9e3ZhbHVlIGFzIGJvb2xlYW59IG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9PlxuICAgICAgICAgIHtsYWJlbH0ge2hvdmVyZWQgJiYgZGVzY3JpcHRpb24gJiYgPEluZm9Ub29sdGlwV2l0aFRyaWdnZXIgdG9vbHRpcD17ZGVzY3JpcHRpb259IC8+fVxuICAgICAgICA8L0NvbnRyb2xGb3JtSXRlbUNvbXBvbmVudHMuQ2hlY2tib3g+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIHtsYWJlbCAmJiAoXG4gICAgICAgICAgICA8Q29udHJvbEhlYWRlclxuICAgICAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgICAgICBsYWJlbD17bGFiZWx9XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgdmFsaWRhdGlvbkVycm9ycz17dmFsaWRhdGlvbkVycm9yc31cbiAgICAgICAgICAgICAgaG92ZXJlZD17aG92ZXJlZH1cbiAgICAgICAgICAgICAgcmVxdWlyZWQ9e3JlcXVpcmVkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKiBAdHMtaWdub3JlICovfVxuICAgICAgICAgIDxDb250cm9sIHsuLi5wcm9wc30gdmFsdWU9e3ZhbHVlfSBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfSAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRyb2xGb3JtSXRlbTtcbiJdfQ== */"),
    onMouseEnter: () => setHovered(true),
    onMouseLeave: () => setHovered(false)
  }, controlType === 'Checkbox' ? (0, _react.jsx)(_controls.ControlFormItemComponents.Checkbox, {
    checked: value,
    onChange: handleChange
  }, label, " ", hovered && description && (0, _react.jsx)(_InfoTooltipWithTrigger.default, {
    tooltip: description
  })) : (0, _react.jsx)(_react2.default.Fragment, null, label && (0, _react.jsx)(_ControlHeader.default, {
    name: name,
    label: label,
    description: description,
    validationErrors: validationErrors,
    hovered: hovered,
    required: required
  }), (0, _react.jsx)(Control, _extends({}, props, {
    value: value,
    onChange: handleChange
  }))));
}

ControlFormItem.propTypes = {
  name: _propTypes.default.string.isRequired,
  onChange: _propTypes.default.func
};
var _default = ControlFormItem;
exports.default = _default;