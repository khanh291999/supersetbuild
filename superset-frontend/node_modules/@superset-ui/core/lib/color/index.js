"use strict";

exports.__esModule = true;
var _exportNames = {
  CategoricalColorScale: true,
  CategoricalScheme: true,
  getCategoricalSchemeRegistry: true,
  getSequentialSchemeRegistry: true,
  SequentialScheme: true,
  ColorSchemeRegistry: true,
  BRAND_COLOR: true,
  CategoricalColorNamespace: true
};
exports.getSequentialSchemeRegistry = exports.getCategoricalSchemeRegistry = exports.SequentialScheme = exports.ColorSchemeRegistry = exports.CategoricalScheme = exports.CategoricalColorScale = exports.CategoricalColorNamespace = exports.BRAND_COLOR = void 0;

var CategoricalColorNamespace = _interopRequireWildcard(require("./CategoricalColorNamespace"));

exports.CategoricalColorNamespace = CategoricalColorNamespace;

var _CategoricalColorScale = _interopRequireDefault(require("./CategoricalColorScale"));

exports.CategoricalColorScale = _CategoricalColorScale.default;

var _CategoricalScheme = _interopRequireDefault(require("./CategoricalScheme"));

exports.CategoricalScheme = _CategoricalScheme.default;

var _CategoricalSchemeRegistrySingleton = _interopRequireDefault(require("./CategoricalSchemeRegistrySingleton"));

exports.getCategoricalSchemeRegistry = _CategoricalSchemeRegistrySingleton.default;

var _SequentialSchemeRegistrySingleton = _interopRequireDefault(require("./SequentialSchemeRegistrySingleton"));

exports.getSequentialSchemeRegistry = _SequentialSchemeRegistrySingleton.default;

var _SequentialScheme = _interopRequireDefault(require("./SequentialScheme"));

exports.SequentialScheme = _SequentialScheme.default;

var _ColorSchemeRegistry = _interopRequireDefault(require("./ColorSchemeRegistry"));

exports.ColorSchemeRegistry = _ColorSchemeRegistry.default;

var _colorSchemes = require("./colorSchemes");

Object.keys(_colorSchemes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _colorSchemes[key]) return;
  exports[key] = _colorSchemes[key];
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
const BRAND_COLOR = '#00A699';
exports.BRAND_COLOR = BRAND_COLOR;