"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@superset-ui/core");

var _transformProps = _interopRequireDefault(require("./transformProps"));

var _transportation = _interopRequireDefault(require("./images/transportation.jpg"));

var _channels = _interopRequireDefault(require("./images/channels.jpg"));

var _employment = _interopRequireDefault(require("./images/employment.jpg"));

var _thumbnail = _interopRequireDefault(require("./images/thumbnail.png"));

var _controlPanel = _interopRequireDefault(require("./controlPanel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const metadata = new _core.ChartMetadata({
  category: (0, _core.t)('Correlation'),
  credits: ['http://bl.ocks.org/mbostock/3074470'],
  description: (0, _core.t)('Visualize a related metric across pairs of groups. Heatmaps excel at showcasing the correlation or strength between two groups. Color is used to emphasize the strength of the link between each pair of groups.'),
  exampleGallery: [{
    url: _transportation.default,
    caption: (0, _core.t)('Sizes of vehicles')
  }, {
    url: _channels.default,
    caption: (0, _core.t)('Relationships between community channels')
  }, {
    url: _employment.default,
    caption: (0, _core.t)('Employment and education')
  }],
  name: (0, _core.t)('Heatmap'),
  tags: [(0, _core.t)('Business'), (0, _core.t)('Intensity'), (0, _core.t)('Legacy'), (0, _core.t)('Density'), (0, _core.t)('Predictive'), (0, _core.t)('Single Metric')],
  thumbnail: _thumbnail.default,
  useLegacyApi: true
});

class HeatmapChartPlugin extends _core.ChartPlugin {
  constructor() {
    super({
      loadChart: () => Promise.resolve().then(() => _interopRequireWildcard(require('./ReactHeatmap'))),
      metadata,
      transformProps: _transformProps.default,
      controlPanel: _controlPanel.default
    });
  }

}

exports.default = HeatmapChartPlugin;