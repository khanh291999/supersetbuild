"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@superset-ui/core");

var _transformProps = _interopRequireDefault(require("./transformProps"));

var _thumbnail = _interopRequireDefault(require("./images/thumbnail.png"));

var _Sankey = _interopRequireDefault(require("./images/Sankey.jpg"));

var _Sankey2 = _interopRequireDefault(require("./images/Sankey2.jpg"));

var _controlPanel = _interopRequireDefault(require("./controlPanel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const metadata = new _core.ChartMetadata({
  category: (0, _core.t)('Flow'),
  credits: ['https://github.com/d3/d3-sankey'],
  description: (0, _core.t)("Visualizes the flow of different group's values through different stages of a system. New stages in the pipeline are visualized as nodes or layers. The thickness of the bars or edges represent the metric being visualized."),
  exampleGallery: [{
    url: _Sankey.default,
    description: (0, _core.t)('Demographics')
  }, {
    url: _Sankey2.default,
    description: (0, _core.t)('Survey Responses')
  }],
  name: (0, _core.t)('Sankey Diagram'),
  tags: [(0, _core.t)('Categorical'), (0, _core.t)('Directional'), (0, _core.t)('Legacy'), (0, _core.t)('Percentages'), (0, _core.t)('Proportional'), (0, _core.t)('Relational')],
  thumbnail: _thumbnail.default,
  useLegacyApi: true
});

class SankeyChartPlugin extends _core.ChartPlugin {
  constructor() {
    super({
      loadChart: () => Promise.resolve().then(() => _interopRequireWildcard(require('./ReactSankey'))),
      metadata,
      transformProps: _transformProps.default,
      controlPanel: _controlPanel.default
    });
  }

}

exports.default = SankeyChartPlugin;