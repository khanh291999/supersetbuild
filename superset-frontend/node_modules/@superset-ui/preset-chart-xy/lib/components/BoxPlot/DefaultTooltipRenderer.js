"use strict";

exports.__esModule = true;
exports.default = DefaultTooltipRenderer;

var _react = _interopRequireDefault(require("react"));

var _core = require("@superset-ui/core");

var _react2 = require("@emotion/react");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
function DefaultTooltipRenderer({
  datum,
  color,
  encoder
}) {
  const {
    label,
    min,
    max,
    median,
    firstQuartile,
    thirdQuartile,
    outliers
  } = datum;
  const {
    channels
  } = encoder;
  const {
    formatValue
  } = channels.y;
  const data = [];

  if ((0, _core.isDefined)(min)) {
    data.push({
      key: 'Min',
      valueColumn: formatValue(min)
    });
  }

  if ((0, _core.isDefined)(max)) {
    data.push({
      key: 'Max',
      valueColumn: formatValue(max)
    });
  }

  if ((0, _core.isDefined)(median)) {
    data.push({
      key: 'Median',
      valueColumn: formatValue(median)
    });
  }

  if ((0, _core.isDefined)(firstQuartile)) {
    data.push({
      key: '1st Quartile',
      valueColumn: formatValue(firstQuartile)
    });
  }

  if ((0, _core.isDefined)(thirdQuartile)) {
    data.push({
      key: '3rd Quartile',
      valueColumn: formatValue(thirdQuartile)
    });
  }

  if ((0, _core.isDefined)(outliers) && outliers.length > 0) {
    data.push({
      key: '# Outliers',
      valueColumn: outliers.length
    });
  }

  return (0, _react2.jsx)(_core.TooltipFrame, null, (0, _react2.jsx)("div", null, (0, _react2.jsx)("strong", {
    style: {
      color
    }
  }, label)), data.length > 0 && (0, _react2.jsx)("br", null), (0, _react2.jsx)(_core.TooltipTable, {
    data: data
  }));
}