"use strict";

exports.__esModule = true;
exports.default = DefaultLegendItem;

var _react = _interopRequireDefault(require("react"));

var _legend = require("@vx/legend");

var _react2 = require("@emotion/react");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
const MARK_SIZE = 8;
const MARK_STYLE = {
  display: 'inline-block'
};

function DefaultLegendItem({
  group,
  item,
  MarkRenderer,
  LabelRenderer
}) {
  return (0, _react2.jsx)(_legend.LegendItem, {
    key: `legend-item-${group.field}-${item.input}`,
    margin: "0 5px"
  }, typeof MarkRenderer === 'undefined' ? (0, _react2.jsx)("svg", {
    width: MARK_SIZE,
    height: MARK_SIZE,
    style: MARK_STYLE
  }, (0, _react2.jsx)("circle", {
    fill: // @ts-ignore
    item.output.color ?? // @ts-ignore
    item.output.fill ?? // @ts-ignore
    item.output.stroke ?? '#ccc',
    stroke: // @ts-ignore
    item.output.stroke ?? 'none',
    r: MARK_SIZE / 2,
    cx: MARK_SIZE / 2,
    cy: MARK_SIZE / 2
  })) : (0, _react2.jsx)(MarkRenderer, {
    group: group,
    item: item
  }), typeof LabelRenderer === 'undefined' ? (0, _react2.jsx)(_legend.LegendLabel, {
    align: "left",
    margin: "0 0 0 4px"
  }, item.input) : (0, _react2.jsx)(LabelRenderer, {
    group: group,
    item: item
  }));
}